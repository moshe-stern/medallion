declare const ApiV1OrgAdditionalNamesListAdditionalNames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly kind: {
                                readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                                readonly type: "string";
                                readonly description: "`birth name` `father name` `fiance name` `legal name` `maiden name` `married name` `mother name` `mother maiden name` `label change` `nickname` `other name` `spouse name` `preferred name` `alternate supervisor name` `autonomous supervisor name` `credentialing` `facility owner name` `program admin name` `recruiter name` `referral name` `regional director name` `supervisor name`";
                            };
                            readonly first_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly middle_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly last_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly suffix: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id", "kind", "provider"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgBoardCertificatesCreateBoardCertificates: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly abms: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly board_name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly specialty: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly certification_number: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly is_exam_passed: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly is_indefinite: {
                readonly type: "boolean";
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly recertification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly exam_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly moc_status: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_meeting_moc: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly moc_verification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly moc_annual_reverification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly requires_verification: {
                readonly type: "boolean";
            };
        };
        readonly required: readonly ["provider", "specialty"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly abms: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly board_of_specialty: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly board_name: {
                    readonly type: "string";
                };
                readonly is_board_certification: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly certification_number: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_exam_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_indefinite: {
                    readonly type: "boolean";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly recertification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_status: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_meeting_moc: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly moc_verification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_annual_reverification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly requires_verification: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["board_of_specialty", "id", "is_board_certification", "provider", "specialty"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgBoardCertificatesDestroyBoardCertificates: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const ApiV1OrgBoardCertificatesListBoardCertificates: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly provider__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly abms: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly board_of_specialty: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly board_name: {
                                readonly type: "string";
                            };
                            readonly is_board_certification: {
                                readonly type: "boolean";
                                readonly readOnly: true;
                            };
                            readonly specialty: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly certification_number: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly is_exam_passed: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly issue_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly is_indefinite: {
                                readonly type: "boolean";
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly recertification_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly exam_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly moc_status: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_meeting_moc: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly moc_verification_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly moc_annual_reverification_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly requires_verification: {
                                readonly type: "boolean";
                            };
                        };
                        readonly required: readonly ["board_of_specialty", "id", "is_board_certification", "provider", "specialty"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgBoardCertificatesPartialUpdateBoardCertificates: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly abms: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly board_name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly specialty: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly certification_number: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly is_exam_passed: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly is_indefinite: {
                readonly type: "boolean";
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly recertification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly exam_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly moc_status: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_meeting_moc: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly moc_verification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly moc_annual_reverification_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly requires_verification: {
                readonly type: "boolean";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly abms: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly board_of_specialty: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly board_name: {
                    readonly type: "string";
                };
                readonly is_board_certification: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly certification_number: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_exam_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_indefinite: {
                    readonly type: "boolean";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly recertification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_status: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_meeting_moc: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly moc_verification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_annual_reverification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly requires_verification: {
                    readonly type: "boolean";
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["board_of_specialty", "id", "is_board_certification", "notes", "provider", "specialty"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgBoardCertificatesRetrieveBoardCertificates: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly abms: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly board_of_specialty: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly board_name: {
                    readonly type: "string";
                };
                readonly is_board_certification: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly certification_number: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_exam_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_indefinite: {
                    readonly type: "boolean";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly recertification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_status: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_meeting_moc: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly moc_verification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly moc_annual_reverification_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly requires_verification: {
                    readonly type: "boolean";
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["board_of_specialty", "id", "is_board_certification", "notes", "provider", "specialty"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgCmeCreditsCreateCmeCredits: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly credit_hours: {
                readonly type: "number";
                readonly format: "double";
                readonly minimum: -1.7976931348623157e+308;
                readonly maximum: 1.7976931348623157e+308;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly date_completed: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly organization_types: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                    readonly type: "integer";
                };
                readonly default: readonly [];
            };
            readonly cme_contents: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                    readonly type: "integer";
                };
                readonly default: readonly [];
            };
            readonly title: {
                readonly type: readonly ["string", "null"];
            };
            readonly relias_enrollment: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
            };
            readonly relias_course: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly required: readonly ["credit_hours", "provider"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly format: {
                    readonly type: "string";
                    readonly enum: readonly ["csv", "json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly credit_hours: {
                    readonly type: "number";
                    readonly format: "double";
                    readonly minimum: -1.7976931348623157e+308;
                    readonly maximum: 1.7976931348623157e+308;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly date_completed: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly organization_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106` `107` `108` `109` `110` `111` `112` `113` `114` `115` `116` `117` `118` `119` `120`";
                    };
                    readonly default: readonly [];
                };
                readonly cme_contents: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106`";
                    };
                    readonly default: readonly [];
                };
                readonly title: {
                    readonly type: readonly ["string", "null"];
                };
                readonly relias_enrollment: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
                };
                readonly relias_course: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["credit_hours", "id", "provider"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgCmeCreditsDestroyCmeCredits: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const ApiV1OrgCmeCreditsListCmeCredits: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly credit_hours: {
                    readonly type: "number";
                    readonly format: "float";
                    readonly minimum: -3.402823669209385e+38;
                    readonly maximum: 3.402823669209385e+38;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly date_completed: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly format: {
                    readonly type: "string";
                    readonly enum: readonly ["csv", "json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly provider__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly start_date: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly credit_hours: {
                                readonly type: "number";
                                readonly format: "double";
                                readonly minimum: -1.7976931348623157e+308;
                                readonly maximum: 1.7976931348623157e+308;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly date_completed: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly organization_types: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                                    readonly type: "integer";
                                    readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106` `107` `108` `109` `110` `111` `112` `113` `114` `115` `116` `117` `118` `119` `120`";
                                };
                                readonly default: readonly [];
                            };
                            readonly cme_contents: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                                    readonly type: "integer";
                                    readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106`";
                                };
                                readonly default: readonly [];
                            };
                            readonly title: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly relias_enrollment: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 2147483647;
                                readonly minimum: -2147483648;
                                readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
                            };
                            readonly relias_course: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 2147483647;
                                readonly minimum: -2147483648;
                                readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                        };
                        readonly required: readonly ["credit_hours", "id", "provider"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgCmeCreditsPartialUpdateCmeCredits: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly credit_hours: {
                readonly type: "number";
                readonly format: "double";
                readonly minimum: -1.7976931348623157e+308;
                readonly maximum: 1.7976931348623157e+308;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly date_completed: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly organization_types: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                    readonly type: "integer";
                };
                readonly default: readonly [];
            };
            readonly cme_contents: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                    readonly type: "integer";
                };
                readonly default: readonly [];
            };
            readonly title: {
                readonly type: readonly ["string", "null"];
            };
            readonly relias_enrollment: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
            };
            readonly relias_course: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly credit_hours: {
                    readonly type: "number";
                    readonly format: "double";
                    readonly minimum: -1.7976931348623157e+308;
                    readonly maximum: 1.7976931348623157e+308;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly date_completed: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly organization_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106` `107` `108` `109` `110` `111` `112` `113` `114` `115` `116` `117` `118` `119` `120`";
                    };
                    readonly default: readonly [];
                };
                readonly cme_contents: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106`";
                    };
                    readonly default: readonly [];
                };
                readonly title: {
                    readonly type: readonly ["string", "null"];
                };
                readonly relias_enrollment: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
                };
                readonly relias_course: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["credit_hours", "id", "provider"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgCmeCreditsRetrieveCmeCredits: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly credit_hours: {
                    readonly type: "number";
                    readonly format: "double";
                    readonly minimum: -1.7976931348623157e+308;
                    readonly maximum: 1.7976931348623157e+308;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly date_completed: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly organization_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106` `107` `108` `109` `110` `111` `112` `113` `114` `115` `116` `117` `118` `119` `120`";
                    };
                    readonly default: readonly [];
                };
                readonly cme_contents: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106];
                        readonly type: "integer";
                        readonly description: "`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `101` `102` `103` `104` `105` `106`";
                    };
                    readonly default: readonly [];
                };
                readonly title: {
                    readonly type: readonly ["string", "null"];
                };
                readonly relias_enrollment: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all module enrollments within the Relias platform.";
                };
                readonly relias_course: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "This is a Relias assigned database ID. This is unique across all content within the Relias platform.";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["credit_hours", "id", "provider"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesBulkHistoryListLicenses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly date_changed_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly date_changed_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly date_changed: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly status: {
                                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                                readonly type: "string";
                                readonly description: "`active` `pending` `inactive` `superceded`";
                            };
                            readonly author: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                            readonly coordinator: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["author", "coordinator", "id", "status"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesCreateLicenses: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly id: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly status: {
                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                readonly type: "string";
            };
            readonly state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly expiration_reminder_sent_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date-time";
            };
            readonly license_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly certificate_type: {
                readonly type: readonly ["string", "null"];
                readonly minLength: 1;
            };
            readonly registration: {
                readonly enum: readonly ["state", "dea", "state_controlled"];
                readonly type: "string";
            };
            readonly issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly app_submission_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly requires_expiration_alert: {
                readonly type: "boolean";
            };
            readonly using_compact: {
                readonly type: "boolean";
                readonly description: "Boolean that states whether this license is active through IMLC/NLC";
            };
            readonly is_spl: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
            };
            readonly duration_type: {
                readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                readonly type: "string";
            };
            readonly return_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly coordinator: {
                readonly type: readonly ["integer", "null"];
                readonly description: "Licensor that will be assigned to help complete the license application";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly instructions: {
                readonly type: readonly ["string", "null"];
            };
            readonly should_auto_renew: {
                readonly type: "boolean";
            };
            readonly rx_authority: {
                readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                readonly type: "string";
            };
            readonly loq_document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly required: readonly ["provider", "state"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly organization: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly status: {
                    readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                    readonly type: "string";
                    readonly description: "`active` `pending` `inactive` `superceded`";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly expiration_reminder_sent_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly verification: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["time_limited_url", "verification_time", "verified", "verified_by"];
                    readonly description: "";
                    readonly properties: {
                        readonly verified: {
                            readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                            readonly type: "string";
                            readonly readOnly: true;
                            readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                        };
                        readonly verification_time: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                        readonly verified_by: {
                            readonly readOnly: true;
                            readonly type: "object";
                            readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "integer";
                                    readonly readOnly: true;
                                };
                                readonly email: {
                                    readonly type: "string";
                                    readonly format: "email";
                                    readonly readOnly: true;
                                    readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                };
                                readonly picture: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly is_staff: {
                                    readonly type: "boolean";
                                    readonly description: "Designates whether the user can log into this admin site.";
                                };
                                readonly date_joined: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly is_sso: {
                                    readonly type: "boolean";
                                    readonly readOnly: true;
                                };
                                readonly is_pii_access_restricted: {
                                    readonly type: "boolean";
                                    readonly readOnly: true;
                                };
                            };
                        };
                    };
                };
                readonly verification_status: {
                    readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                };
                readonly is_external: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly certificate_type: {
                    readonly type: readonly ["string", "null"];
                };
                readonly registration: {
                    readonly enum: readonly ["state", "dea", "state_controlled"];
                    readonly type: "string";
                    readonly description: "`state` `dea` `state_controlled`";
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly app_submission_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly full_name: {
                    readonly type: readonly ["string", "null"];
                    readonly readOnly: true;
                };
                readonly is_renewable: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly requires_expiration_alert: {
                    readonly type: "boolean";
                };
                readonly using_compact: {
                    readonly type: "boolean";
                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                };
                readonly is_spl: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                };
                readonly duration_type: {
                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                    readonly type: "string";
                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                };
                readonly return_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coordinator: {
                    readonly type: readonly ["integer", "null"];
                    readonly description: "Licensor that will be assigned to help complete the license application";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly percent_complete: {
                    readonly type: readonly ["integer", "null"];
                    readonly readOnly: true;
                };
                readonly percent_complete_last_checked: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly instructions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly licensing_info: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["application_portal", "compact", "id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly application_portal: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                        };
                        readonly compact: {
                            readonly type: readonly ["string", "null"];
                        };
                    };
                };
                readonly should_auto_renew: {
                    readonly type: "boolean";
                };
                readonly renew_requested_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly has_loq_details: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly renewal_info: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly renew_from_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly modified: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly rx_authority: {
                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                    readonly type: "string";
                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly readOnly: true;
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "full_name", "has_loq_details", "is_external", "is_renewable", "licensing_info", "loq_expiration_date", "loq_issue_date", "modified", "npi", "organization", "percent_complete", "percent_complete_last_checked", "provider", "renew_from_date", "renew_requested_date", "renewal_info", "state", "verification", "verification_status"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesDestroyLicenses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const ApiV1OrgLicensesDetailPartialUpdate: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly certificate_type: {
                readonly type: readonly ["string", "null"];
                readonly minLength: 1;
            };
            readonly registration: {
                readonly enum: readonly ["state", "dea", "state_controlled"];
                readonly type: "string";
            };
            readonly status: {
                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                readonly type: "string";
            };
            readonly state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly files: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly kind: {
                            readonly type: "string";
                            readonly maxLength: 64;
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly content: {
                            readonly type: readonly ["string", "null"];
                            readonly minLength: 1;
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly is_external: {
                readonly type: "boolean";
            };
            readonly license_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly instructions: {
                readonly type: readonly ["string", "null"];
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly app_submission_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly requires_expiration_alert: {
                readonly type: "boolean";
            };
            readonly using_compact: {
                readonly type: "boolean";
                readonly description: "Boolean that states whether this license is active through IMLC/NLC";
            };
            readonly is_spl: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
            };
            readonly loq_document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly rx_authority: {
                readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                readonly type: "string";
            };
            readonly return_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly coordinator: {
                readonly type: readonly ["integer", "null"];
                readonly description: "Licensor that will be assigned to help complete the license application";
            };
            readonly duration_type: {
                readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                readonly type: "string";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly should_auto_renew: {
                readonly type: "boolean";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly certificate_type: {
                    readonly type: readonly ["string", "null"];
                };
                readonly registration: {
                    readonly enum: readonly ["state", "dea", "state_controlled"];
                    readonly type: "string";
                    readonly description: "`state` `dea` `state_controlled`";
                };
                readonly status: {
                    readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                    readonly type: "string";
                    readonly description: "`active` `pending` `inactive` `superceded`";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly files: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly kind: {
                                readonly type: "string";
                                readonly maxLength: 64;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly title: "Title (optional)";
                                readonly maxLength: 254;
                            };
                            readonly content: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "id"];
                        readonly description: "";
                    };
                };
                readonly is_external: {
                    readonly type: "boolean";
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly instructions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly app_submission_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_renewable: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly requires_expiration_alert: {
                    readonly type: "boolean";
                };
                readonly using_compact: {
                    readonly type: "boolean";
                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                };
                readonly is_spl: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                };
                readonly has_loq_details: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly rx_authority: {
                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                    readonly type: "string";
                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly return_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coordinator: {
                    readonly type: readonly ["integer", "null"];
                    readonly description: "Licensor that will be assigned to help complete the license application";
                };
                readonly duration_type: {
                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                    readonly type: "string";
                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly licensing_info: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["application_portal", "compact", "id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly application_portal: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                        };
                        readonly compact: {
                            readonly type: readonly ["string", "null"];
                        };
                    };
                };
                readonly should_auto_renew: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["created", "has_loq_details", "id", "is_renewable", "licensing_info", "loq_expiration_date", "loq_issue_date", "notes", "rx_authority"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesHistoryListLicenses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A unique integer value identifying this license status history record.";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly date_changed: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly status: {
                                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                                readonly type: "string";
                                readonly description: "`active` `pending` `inactive` `superceded`";
                            };
                            readonly author: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                            readonly coordinator: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["author", "coordinator", "id", "status"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesListLicenses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly app_submission_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly enum: readonly ["180", "30", "360", "60", "90", "n/a"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Created";
                };
                readonly certificate_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "HADC", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD", "dea", "state", "state_controlled"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly coordinator: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly duration_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autonomous_registration", "limited", "multistate", "permanent", "prescriptive_authority", "telemedicine", "temporary", "training"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly efficiency_level: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly expiration_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly expiration_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly is_external: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly issue_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly issue_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly modified_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly modified_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly organization: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly registration: {
                    readonly type: "string";
                    readonly enum: readonly ["dea", "state", "state_controlled"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly remaining_todos: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly renew_requested_date: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly renewal_info: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["na", "renew_soon", "renewal_not_open", "renewal_period_open", "renewal_requested"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "RenewalInfo";
                };
                readonly return_date: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly enum: readonly ["month", "na", "past", "today", "tomorrow", "week"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Follow-up date";
                };
                readonly rx_authority: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly enum: readonly ["autonomous_registration", "checkbox_selected", "prescriptive_authority", "rx_included"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly should_auto_renew: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["active", "inactive", "pending", "superceded"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly using_compact: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly verified: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["in_progress", "manually_verified", "needs_attention", "not_requested", "verified"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Verified";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly organization: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly status: {
                                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                                readonly type: "string";
                                readonly description: "`active` `pending` `inactive` `superceded`";
                            };
                            readonly state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly expiration_reminder_sent_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly verification: {
                                readonly readOnly: true;
                                readonly type: readonly ["object", "null"];
                                readonly required: readonly ["time_limited_url", "verification_time", "verified", "verified_by"];
                                readonly description: "";
                                readonly properties: {
                                    readonly verified: {
                                        readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                                        readonly type: "string";
                                        readonly readOnly: true;
                                        readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                                    };
                                    readonly verification_time: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "date-time";
                                        readonly readOnly: true;
                                    };
                                    readonly time_limited_url: {
                                        readonly type: "string";
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                    readonly verified_by: {
                                        readonly readOnly: true;
                                        readonly type: "object";
                                        readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                        readonly description: "";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "integer";
                                                readonly readOnly: true;
                                            };
                                            readonly email: {
                                                readonly type: "string";
                                                readonly format: "email";
                                                readonly readOnly: true;
                                                readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                            };
                                            readonly picture: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly is_staff: {
                                                readonly type: "boolean";
                                                readonly description: "Designates whether the user can log into this admin site.";
                                            };
                                            readonly date_joined: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "date-time";
                                            };
                                            readonly is_sso: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                            readonly is_pii_access_restricted: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly verification_status: {
                                readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                            };
                            readonly is_external: {
                                readonly type: "boolean";
                                readonly readOnly: true;
                            };
                            readonly license_number: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly certificate_type: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly registration: {
                                readonly enum: readonly ["state", "dea", "state_controlled"];
                                readonly type: "string";
                                readonly description: "`state` `dea` `state_controlled`";
                            };
                            readonly issue_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly app_submission_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly full_name: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                            readonly is_renewable: {
                                readonly type: "boolean";
                                readonly readOnly: true;
                            };
                            readonly requires_expiration_alert: {
                                readonly type: "boolean";
                            };
                            readonly using_compact: {
                                readonly type: "boolean";
                                readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                            };
                            readonly is_spl: {
                                readonly type: readonly ["boolean", "null"];
                                readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                            };
                            readonly duration_type: {
                                readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                                readonly type: "string";
                                readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                            };
                            readonly return_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly coordinator: {
                                readonly type: readonly ["integer", "null"];
                                readonly description: "Licensor that will be assigned to help complete the license application";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly percent_complete: {
                                readonly type: readonly ["integer", "null"];
                                readonly readOnly: true;
                            };
                            readonly percent_complete_last_checked: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly instructions: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly licensing_info: {
                                readonly readOnly: true;
                                readonly type: "object";
                                readonly required: readonly ["application_portal", "compact", "id"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uuid";
                                    };
                                    readonly application_portal: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                    };
                                    readonly compact: {
                                        readonly type: readonly ["string", "null"];
                                    };
                                };
                            };
                            readonly should_auto_renew: {
                                readonly type: "boolean";
                            };
                            readonly renew_requested_date: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly has_loq_details: {
                                readonly type: "boolean";
                                readonly readOnly: true;
                            };
                            readonly renewal_info: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly renew_from_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                                readonly readOnly: true;
                            };
                            readonly modified: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly rx_authority: {
                                readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                                readonly type: "string";
                                readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                            };
                            readonly npi: {
                                readonly type: readonly ["integer", "null"];
                                readonly readOnly: true;
                            };
                            readonly loq_issue_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                                readonly readOnly: true;
                            };
                            readonly loq_expiration_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                                readonly readOnly: true;
                            };
                            readonly loq_document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "full_name", "has_loq_details", "is_external", "is_renewable", "licensing_info", "loq_expiration_date", "loq_issue_date", "modified", "npi", "organization", "percent_complete", "percent_complete_last_checked", "provider", "renew_from_date", "renew_requested_date", "renewal_info", "state", "verification", "verification_status"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesPartialUpdateLicenses: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly id: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly status: {
                readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                readonly type: "string";
            };
            readonly state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly expiration_reminder_sent_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date-time";
            };
            readonly license_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly certificate_type: {
                readonly type: readonly ["string", "null"];
                readonly minLength: 1;
            };
            readonly registration: {
                readonly enum: readonly ["state", "dea", "state_controlled"];
                readonly type: "string";
            };
            readonly issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly app_submission_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly requires_expiration_alert: {
                readonly type: "boolean";
            };
            readonly using_compact: {
                readonly type: "boolean";
                readonly description: "Boolean that states whether this license is active through IMLC/NLC";
            };
            readonly is_spl: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
            };
            readonly duration_type: {
                readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                readonly type: "string";
            };
            readonly return_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly coordinator: {
                readonly type: readonly ["integer", "null"];
                readonly description: "Licensor that will be assigned to help complete the license application";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly instructions: {
                readonly type: readonly ["string", "null"];
            };
            readonly should_auto_renew: {
                readonly type: "boolean";
            };
            readonly rx_authority: {
                readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                readonly type: "string";
            };
            readonly loq_document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly organization: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly status: {
                    readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                    readonly type: "string";
                    readonly description: "`active` `pending` `inactive` `superceded`";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly expiration_reminder_sent_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly verification: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["time_limited_url", "verification_time", "verified", "verified_by"];
                    readonly description: "";
                    readonly properties: {
                        readonly verified: {
                            readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                            readonly type: "string";
                            readonly readOnly: true;
                            readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                        };
                        readonly verification_time: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                        readonly verified_by: {
                            readonly readOnly: true;
                            readonly type: "object";
                            readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "integer";
                                    readonly readOnly: true;
                                };
                                readonly email: {
                                    readonly type: "string";
                                    readonly format: "email";
                                    readonly readOnly: true;
                                    readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                };
                                readonly picture: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly is_staff: {
                                    readonly type: "boolean";
                                    readonly description: "Designates whether the user can log into this admin site.";
                                };
                                readonly date_joined: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly is_sso: {
                                    readonly type: "boolean";
                                    readonly readOnly: true;
                                };
                                readonly is_pii_access_restricted: {
                                    readonly type: "boolean";
                                    readonly readOnly: true;
                                };
                            };
                        };
                    };
                };
                readonly verification_status: {
                    readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                };
                readonly is_external: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly certificate_type: {
                    readonly type: readonly ["string", "null"];
                };
                readonly registration: {
                    readonly enum: readonly ["state", "dea", "state_controlled"];
                    readonly type: "string";
                    readonly description: "`state` `dea` `state_controlled`";
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly app_submission_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly full_name: {
                    readonly type: readonly ["string", "null"];
                    readonly readOnly: true;
                };
                readonly is_renewable: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly requires_expiration_alert: {
                    readonly type: "boolean";
                };
                readonly using_compact: {
                    readonly type: "boolean";
                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                };
                readonly is_spl: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                };
                readonly duration_type: {
                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                    readonly type: "string";
                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                };
                readonly return_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coordinator: {
                    readonly type: readonly ["integer", "null"];
                    readonly description: "Licensor that will be assigned to help complete the license application";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly percent_complete: {
                    readonly type: readonly ["integer", "null"];
                    readonly readOnly: true;
                };
                readonly percent_complete_last_checked: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly instructions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly licensing_info: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["application_portal", "compact", "id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly application_portal: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                        };
                        readonly compact: {
                            readonly type: readonly ["string", "null"];
                        };
                    };
                };
                readonly should_auto_renew: {
                    readonly type: "boolean";
                };
                readonly renew_requested_date: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly has_loq_details: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly renewal_info: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly renew_from_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly modified: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly rx_authority: {
                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                    readonly type: "string";
                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly readOnly: true;
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "full_name", "has_loq_details", "is_external", "is_renewable", "licensing_info", "loq_expiration_date", "loq_issue_date", "modified", "npi", "organization", "percent_complete", "percent_complete_last_checked", "provider", "renew_from_date", "renew_requested_date", "renewal_info", "state", "verification", "verification_status"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgLicensesRetrieveLicenses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly certificate_type: {
                    readonly type: readonly ["string", "null"];
                };
                readonly registration: {
                    readonly enum: readonly ["state", "dea", "state_controlled"];
                    readonly type: "string";
                    readonly description: "`state` `dea` `state_controlled`";
                };
                readonly status: {
                    readonly enum: readonly ["active", "pending", "inactive", "superceded"];
                    readonly type: "string";
                    readonly description: "`active` `pending` `inactive` `superceded`";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly files: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly kind: {
                                readonly type: "string";
                                readonly maxLength: 64;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly title: "Title (optional)";
                                readonly maxLength: 254;
                            };
                            readonly content: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "id"];
                        readonly description: "";
                    };
                };
                readonly is_external: {
                    readonly type: "boolean";
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly instructions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly app_submission_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_renewable: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly requires_expiration_alert: {
                    readonly type: "boolean";
                };
                readonly using_compact: {
                    readonly type: "boolean";
                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                };
                readonly is_spl: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                };
                readonly has_loq_details: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                    readonly readOnly: true;
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly rx_authority: {
                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                    readonly type: "string";
                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly return_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coordinator: {
                    readonly type: readonly ["integer", "null"];
                    readonly description: "Licensor that will be assigned to help complete the license application";
                };
                readonly duration_type: {
                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                    readonly type: "string";
                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly licensing_info: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["application_portal", "compact", "id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly application_portal: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                        };
                        readonly compact: {
                            readonly type: readonly ["string", "null"];
                        };
                    };
                };
                readonly should_auto_renew: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["created", "has_loq_details", "id", "is_renewable", "licensing_info", "loq_expiration_date", "loq_issue_date", "notes", "rx_authority"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgMedicalProgramsListMedicalPrograms: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly program_type: {
                                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                                readonly type: "string";
                                readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd` `fellowship` `internship` `residency` `medical_practice`";
                            };
                            readonly institution_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly ecfmg_identifier: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly degree_earned: {
                                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                                readonly type: "string";
                                readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                            };
                            readonly specialty: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly completed_program: {
                                readonly type: "boolean";
                            };
                            readonly admitting_privileges: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly is_present: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly ecfmg_certificate: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly program_incompletion_reason: {
                                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id", "program_type", "provider"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgPracticesCreatePractices: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly practice_npis: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly npi: {
                            readonly type: "string";
                            readonly minLength: 1;
                            readonly maxLength: 10;
                        };
                        readonly lines_of_business: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                };
                                readonly required: readonly ["id"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["npi"];
                    readonly description: "";
                };
            };
            readonly phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly referral_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly email: {
                readonly type: readonly ["string", "null"];
                readonly format: "email";
                readonly maxLength: 254;
            };
            readonly dba_name: {
                readonly type: "string";
                readonly description: "DBA stands for 'Doing Business As'";
                readonly maxLength: 255;
            };
            readonly client_practice_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly manager_name: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly manager_email: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly patient_age: {
                readonly type: readonly ["string", "null"];
            };
            readonly hours_of_operation: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly day_of_week: {
                            readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                            readonly type: "integer";
                            readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.";
                            readonly minimum: 1;
                            readonly maximum: 7;
                        };
                        readonly is_all_day: {
                            readonly type: "boolean";
                            readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                        };
                        readonly start_hours: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "time";
                            readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                        };
                        readonly end_hours: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "time";
                            readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                        };
                    };
                    readonly required: readonly ["day_of_week"];
                    readonly description: "";
                };
                readonly title: "Practice Hours of Operation";
                readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
            };
            readonly hours_of_operation_additional_details: {
                readonly type: readonly ["string", "null"];
            };
            readonly hours_of_operation_timezone: {
                readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly after_hours_service: {
                readonly type: readonly ["string", "null"];
            };
            readonly has_languages_supported: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly languages_supported: {
                readonly type: readonly ["string", "null"];
            };
            readonly time_to_schedule_appointment: {
                readonly type: readonly ["string", "null"];
            };
            readonly accepting_new_patients: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_accredited: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_telehealth: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly ada_compliant: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly medicare_ptan: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly medicaid_id: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly accreditation: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly medicare_notices_of_approval: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly medicaid_notices_of_approval: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly secondary_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly secondary_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly county: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly status: {
                readonly enum: readonly ["active", "inactive", "requested"];
                readonly type: "string";
            };
        };
        readonly required: readonly ["name"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly format: {
                    readonly type: "string";
                    readonly enum: readonly ["csv", "json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly practice_npis: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly lines_of_business: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly title: "Line of Business Label";
                                            readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                        };
                                    };
                                    readonly required: readonly ["id", "label"];
                                    readonly description: "";
                                };
                            };
                        };
                        readonly required: readonly ["npi"];
                        readonly description: "";
                    };
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly referral_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly email: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "email";
                    readonly maxLength: 254;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As'";
                    readonly maxLength: 255;
                };
                readonly client_practice_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly manager_name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly manager_email: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly patient_age: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly day_of_week: {
                                readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                                readonly type: "integer";
                                readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.\n\n`1` `2` `3` `4` `5` `6` `7`";
                                readonly minimum: 1;
                                readonly maximum: 7;
                            };
                            readonly is_all_day: {
                                readonly type: "boolean";
                                readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                            };
                            readonly start_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                            readonly end_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                        };
                        readonly required: readonly ["day_of_week"];
                        readonly description: "";
                    };
                    readonly title: "Practice Hours of Operation";
                    readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
                };
                readonly hours_of_operation_additional_details: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation_timezone: {
                    readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`EST` `CST` `MST` `PST` `AKST` `HST`";
                };
                readonly after_hours_service: {
                    readonly type: readonly ["string", "null"];
                };
                readonly has_languages_supported: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly languages_supported: {
                    readonly type: readonly ["string", "null"];
                };
                readonly time_to_schedule_appointment: {
                    readonly type: readonly ["string", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_accredited: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_telehealth: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly ada_compliant: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly medicare_ptan: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly accreditation: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicare_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicaid_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly secondary_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly secondary_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly status: {
                    readonly enum: readonly ["active", "inactive", "requested"];
                    readonly type: "string";
                    readonly description: "`active` `inactive` `requested`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly percent_complete: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                    readonly readOnly: true;
                };
                readonly missing_sections: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly section_percent_complete: {
                                readonly type: "number";
                                readonly format: "double";
                                readonly minimum: -1.7976931348623157e+308;
                                readonly maximum: 1.7976931348623157e+308;
                            };
                            readonly missing_fields: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["missing_fields", "name", "section_percent_complete"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
                readonly group_profiles: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id", "name"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "group_profiles", "id", "missing_sections", "name", "percent_complete"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgPracticesListPractices: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly address_state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly title: "State";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly format: {
                    readonly type: "string";
                    readonly enum: readonly ["csv", "json"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_exclude: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_group_profile_exclude: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly practice_npis: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly npi: {
                                            readonly type: "string";
                                            readonly maxLength: 10;
                                        };
                                        readonly lines_of_business: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly format: "uuid";
                                                    };
                                                    readonly label: {
                                                        readonly type: "string";
                                                        readonly readOnly: true;
                                                        readonly title: "Line of Business Label";
                                                        readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                    };
                                                };
                                                readonly required: readonly ["id", "label"];
                                                readonly description: "";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["npi"];
                                    readonly description: "";
                                };
                            };
                            readonly phone: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_phone: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly fax: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_fax: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly referral_fax: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly email: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "email";
                                readonly maxLength: 254;
                            };
                            readonly dba_name: {
                                readonly type: "string";
                                readonly description: "DBA stands for 'Doing Business As'";
                                readonly maxLength: 255;
                            };
                            readonly client_practice_id: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly manager_name: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly manager_email: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly effective_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly patient_age: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly hours_of_operation: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly day_of_week: {
                                            readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                                            readonly type: "integer";
                                            readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.\n\n`1` `2` `3` `4` `5` `6` `7`";
                                            readonly minimum: 1;
                                            readonly maximum: 7;
                                        };
                                        readonly is_all_day: {
                                            readonly type: "boolean";
                                            readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                                        };
                                        readonly start_hours: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "time";
                                            readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                                        };
                                        readonly end_hours: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "time";
                                            readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                                        };
                                    };
                                    readonly required: readonly ["day_of_week"];
                                    readonly description: "";
                                };
                                readonly title: "Practice Hours of Operation";
                                readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
                            };
                            readonly hours_of_operation_additional_details: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly hours_of_operation_timezone: {
                                readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`EST` `CST` `MST` `PST` `AKST` `HST`";
                            };
                            readonly after_hours_service: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly has_languages_supported: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly languages_supported: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly time_to_schedule_appointment: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly accepting_new_patients: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_accredited: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_telehealth: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly ada_compliant: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly medicare_ptan: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly medicaid_id: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly accreditation: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly medicare_notices_of_approval: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly medicaid_notices_of_approval: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly secondary_country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                                readonly type: "string";
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly secondary_city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly secondary_line_1: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly secondary_line_2: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly secondary_postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly secondary_address_state: {
                                readonly type: "string";
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly status: {
                                readonly enum: readonly ["active", "inactive", "requested"];
                                readonly type: "string";
                                readonly description: "`active` `inactive` `requested`";
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly percent_complete: {
                                readonly type: "string";
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                                readonly readOnly: true;
                            };
                            readonly missing_sections: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly section_percent_complete: {
                                            readonly type: "number";
                                            readonly format: "double";
                                            readonly minimum: -1.7976931348623157e+308;
                                            readonly maximum: 1.7976931348623157e+308;
                                        };
                                        readonly missing_fields: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["missing_fields", "name", "section_percent_complete"];
                                    readonly description: "";
                                };
                                readonly readOnly: true;
                            };
                            readonly group_profiles: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly description: "";
                                };
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "group_profiles", "id", "missing_sections", "name", "percent_complete"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgPracticesPartialUpdatePractices: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly practice_npis: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly npi: {
                            readonly type: "string";
                            readonly minLength: 1;
                            readonly maxLength: 10;
                        };
                        readonly lines_of_business: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                };
                                readonly required: readonly ["id"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["npi"];
                    readonly description: "";
                };
            };
            readonly phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly referral_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly email: {
                readonly type: readonly ["string", "null"];
                readonly format: "email";
                readonly maxLength: 254;
            };
            readonly dba_name: {
                readonly type: "string";
                readonly description: "DBA stands for 'Doing Business As'";
                readonly maxLength: 255;
            };
            readonly client_practice_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly manager_name: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly manager_email: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly patient_age: {
                readonly type: readonly ["string", "null"];
            };
            readonly hours_of_operation: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly day_of_week: {
                            readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                            readonly type: "integer";
                            readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.";
                            readonly minimum: 1;
                            readonly maximum: 7;
                        };
                        readonly is_all_day: {
                            readonly type: "boolean";
                            readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                        };
                        readonly start_hours: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "time";
                            readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                        };
                        readonly end_hours: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "time";
                            readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                        };
                    };
                    readonly required: readonly ["day_of_week"];
                    readonly description: "";
                };
                readonly title: "Practice Hours of Operation";
                readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
            };
            readonly hours_of_operation_additional_details: {
                readonly type: readonly ["string", "null"];
            };
            readonly hours_of_operation_timezone: {
                readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly after_hours_service: {
                readonly type: readonly ["string", "null"];
            };
            readonly has_languages_supported: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly languages_supported: {
                readonly type: readonly ["string", "null"];
            };
            readonly time_to_schedule_appointment: {
                readonly type: readonly ["string", "null"];
            };
            readonly accepting_new_patients: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_accredited: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_telehealth: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly ada_compliant: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly medicare_ptan: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly medicaid_id: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly accreditation: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly medicare_notices_of_approval: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly medicaid_notices_of_approval: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly secondary_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly secondary_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly secondary_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly county: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly status: {
                readonly enum: readonly ["active", "inactive", "requested"];
                readonly type: "string";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly practice_npis: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly lines_of_business: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly title: "Line of Business Label";
                                            readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                        };
                                    };
                                    readonly required: readonly ["id", "label"];
                                    readonly description: "";
                                };
                            };
                        };
                        readonly required: readonly ["npi"];
                        readonly description: "";
                    };
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly referral_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly email: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "email";
                    readonly maxLength: 254;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As'";
                    readonly maxLength: 255;
                };
                readonly client_practice_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly manager_name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly manager_email: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly patient_age: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly day_of_week: {
                                readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                                readonly type: "integer";
                                readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.\n\n`1` `2` `3` `4` `5` `6` `7`";
                                readonly minimum: 1;
                                readonly maximum: 7;
                            };
                            readonly is_all_day: {
                                readonly type: "boolean";
                                readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                            };
                            readonly start_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                            readonly end_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                        };
                        readonly required: readonly ["day_of_week"];
                        readonly description: "";
                    };
                    readonly title: "Practice Hours of Operation";
                    readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
                };
                readonly hours_of_operation_additional_details: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation_timezone: {
                    readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`EST` `CST` `MST` `PST` `AKST` `HST`";
                };
                readonly after_hours_service: {
                    readonly type: readonly ["string", "null"];
                };
                readonly has_languages_supported: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly languages_supported: {
                    readonly type: readonly ["string", "null"];
                };
                readonly time_to_schedule_appointment: {
                    readonly type: readonly ["string", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_accredited: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_telehealth: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly ada_compliant: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly medicare_ptan: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly accreditation: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicare_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicaid_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly secondary_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly secondary_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly status: {
                    readonly enum: readonly ["active", "inactive", "requested"];
                    readonly type: "string";
                    readonly description: "`active` `inactive` `requested`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly percent_complete: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                    readonly readOnly: true;
                };
                readonly missing_sections: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly section_percent_complete: {
                                readonly type: "number";
                                readonly format: "double";
                                readonly minimum: -1.7976931348623157e+308;
                                readonly maximum: 1.7976931348623157e+308;
                            };
                            readonly missing_fields: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["missing_fields", "name", "section_percent_complete"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
                readonly group_profiles: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id", "name"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "group_profiles", "id", "missing_sections", "name", "percent_complete"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgPracticesRetrievePractices: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly practice_npis: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly lines_of_business: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly title: "Line of Business Label";
                                            readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                        };
                                    };
                                    readonly required: readonly ["id", "label"];
                                    readonly description: "";
                                };
                            };
                        };
                        readonly required: readonly ["npi"];
                        readonly description: "";
                    };
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly referral_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly email: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "email";
                    readonly maxLength: 254;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As'";
                    readonly maxLength: 255;
                };
                readonly client_practice_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly manager_name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly manager_email: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly patient_age: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly day_of_week: {
                                readonly enum: readonly [1, 2, 3, 4, 5, 6, 7];
                                readonly type: "integer";
                                readonly description: "Represents the day of the week, where Monday is 1 and Sunday is 7.\n\n`1` `2` `3` `4` `5` `6` `7`";
                                readonly minimum: 1;
                                readonly maximum: 7;
                            };
                            readonly is_all_day: {
                                readonly type: "boolean";
                                readonly description: "Indicates if the location is open for the entire day. Default is false. If set to true, 'start_hours' and 'end_hours' are ignored.";
                            };
                            readonly start_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The opening time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                            readonly end_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "time";
                                readonly description: "The closing time of the location in HH:MM:SS format. Nullable if 'is_all_day' is true.";
                            };
                        };
                        readonly required: readonly ["day_of_week"];
                        readonly description: "";
                    };
                    readonly title: "Practice Hours of Operation";
                    readonly description: "An array specifying the valid days and hours of operation. Only include days when the location is open. Omit any days when the location is closed.";
                };
                readonly hours_of_operation_additional_details: {
                    readonly type: readonly ["string", "null"];
                };
                readonly hours_of_operation_timezone: {
                    readonly enum: readonly ["EST", "CST", "MST", "PST", "AKST", "HST", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`EST` `CST` `MST` `PST` `AKST` `HST`";
                };
                readonly after_hours_service: {
                    readonly type: readonly ["string", "null"];
                };
                readonly has_languages_supported: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly languages_supported: {
                    readonly type: readonly ["string", "null"];
                };
                readonly time_to_schedule_appointment: {
                    readonly type: readonly ["string", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_accredited: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_telehealth: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly ada_compliant: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly medicare_ptan: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly accreditation: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicare_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly medicaid_notices_of_approval: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly secondary_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly secondary_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly secondary_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly status: {
                    readonly enum: readonly ["active", "inactive", "requested"];
                    readonly type: "string";
                    readonly description: "`active` `inactive` `requested`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly percent_complete: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                    readonly readOnly: true;
                };
                readonly missing_sections: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly section_percent_complete: {
                                readonly type: "number";
                                readonly format: "double";
                                readonly minimum: -1.7976931348623157e+308;
                                readonly maximum: 1.7976931348623157e+308;
                            };
                            readonly missing_fields: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["missing_fields", "name", "section_percent_complete"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
                readonly group_profiles: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id", "name"];
                        readonly description: "";
                    };
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "group_profiles", "id", "missing_sections", "name", "percent_complete"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProviderPracticeAssociationsCreatePractices: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly practice: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly is_primary_location: {
                readonly type: "boolean";
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly required: readonly ["practice", "provider"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly is_primary_location: {
                    readonly type: "boolean";
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
            };
            readonly required: readonly ["id", "practice", "provider"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProviderPracticeAssociationsDestroyPractices: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider practice association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const ApiV1OrgProviderPracticeAssociationsListPractices: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly practice_name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly state: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly provider: {
                                readonly type: "object";
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly first_name: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly last_name: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly full_name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly profession: {
                                        readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                                        readonly type: "string";
                                        readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                                    };
                                    readonly primary_specialty: {
                                        readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                                    };
                                    readonly npi: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly maximum: 9223372036854776000;
                                        readonly minimum: -9223372036854776000;
                                        readonly format: "int64";
                                    };
                                    readonly license_states: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly readOnly: true;
                                    };
                                    readonly group_profiles_count: {
                                        readonly type: "integer";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["full_name", "group_profiles_count", "id", "license_states"];
                            };
                            readonly practice: {
                                readonly type: "object";
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                    readonly country: {
                                        readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                        readonly type: readonly ["string", "null"];
                                        readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                    };
                                    readonly city: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly county: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly line_1: {
                                        readonly type: "string";
                                        readonly title: "Street Address Line 1";
                                        readonly maxLength: 255;
                                    };
                                    readonly line_2: {
                                        readonly type: "string";
                                        readonly title: "Street Address Line 2";
                                        readonly maxLength: 255;
                                    };
                                    readonly postal_code: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly address_state: {
                                        readonly type: readonly ["string", "null"];
                                        readonly title: "State";
                                        readonly maxLength: 255;
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly format: "date-time";
                                        readonly readOnly: true;
                                    };
                                    readonly percent_complete: {
                                        readonly type: "string";
                                        readonly format: "decimal";
                                        readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                                        readonly readOnly: true;
                                    };
                                    readonly practice_npis: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly npi: {
                                                    readonly type: "string";
                                                    readonly maxLength: 10;
                                                };
                                                readonly lines_of_business: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly type: "string";
                                                                readonly format: "uuid";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                                readonly readOnly: true;
                                                                readonly title: "Line of Business Label";
                                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "label"];
                                                        readonly description: "";
                                                    };
                                                };
                                            };
                                            readonly required: readonly ["npi"];
                                            readonly description: "";
                                        };
                                    };
                                    readonly group_profiles_count: {
                                        readonly type: "integer";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["created", "group_profiles_count", "id", "name", "percent_complete"];
                            };
                            readonly is_primary_location: {
                                readonly type: "boolean";
                            };
                        };
                        readonly required: readonly ["id", "practice", "provider"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProviderPracticeAssociationsPartialUpdatePractices: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly is_primary_location: {
                readonly type: "boolean";
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider practice association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly is_primary_location: {
                    readonly type: "boolean";
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
            };
            readonly required: readonly ["id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProviderPracticeAssociationsRetrievePractices: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider practice association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "object";
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly first_name: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly last_name: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly full_name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly profession: {
                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                            readonly type: "string";
                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                        };
                        readonly primary_specialty: {
                            readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                            readonly type: readonly ["string", "null"];
                            readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly maximum: 9223372036854776000;
                            readonly minimum: -9223372036854776000;
                            readonly format: "int64";
                        };
                        readonly license_states: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly readOnly: true;
                        };
                        readonly group_profiles_count: {
                            readonly type: "integer";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["full_name", "group_profiles_count", "id", "license_states"];
                };
                readonly practice: {
                    readonly type: "object";
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                        readonly country: {
                            readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                            readonly type: readonly ["string", "null"];
                            readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly county: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly line_1: {
                            readonly type: "string";
                            readonly title: "Street Address Line 1";
                            readonly maxLength: 255;
                        };
                        readonly line_2: {
                            readonly type: "string";
                            readonly title: "Street Address Line 2";
                            readonly maxLength: 255;
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly address_state: {
                            readonly type: readonly ["string", "null"];
                            readonly title: "State";
                            readonly maxLength: 255;
                        };
                        readonly created: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly percent_complete: {
                            readonly type: "string";
                            readonly format: "decimal";
                            readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                            readonly readOnly: true;
                        };
                        readonly practice_npis: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly npi: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly lines_of_business: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                    readonly title: "Line of Business Label";
                                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                };
                                            };
                                            readonly required: readonly ["id", "label"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["npi"];
                                readonly description: "";
                            };
                        };
                        readonly group_profiles_count: {
                            readonly type: "integer";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["created", "group_profiles_count", "id", "name", "percent_complete"];
                };
                readonly is_primary_location: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["id", "practice", "provider"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAdditionalNamesCreateAdditionalNames: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly kind: {
                readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                readonly type: "string";
            };
            readonly first_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly middle_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly last_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly suffix: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly required: readonly ["kind"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                    readonly type: "string";
                    readonly description: "`birth name` `father name` `fiance name` `legal name` `maiden name` `married name` `mother name` `mother maiden name` `label change` `nickname` `other name` `spouse name` `preferred name` `alternate supervisor name` `autonomous supervisor name` `credentialing` `facility owner name` `program admin name` `recruiter name` `referral name` `regional director name` `supervisor name`";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly middle_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly suffix: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAdditionalNamesDestroyAdditionalNames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersAdditionalNamesListAdditionalNames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly kind: {
                                readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                                readonly type: "string";
                                readonly description: "`birth name` `father name` `fiance name` `legal name` `maiden name` `married name` `mother name` `mother maiden name` `label change` `nickname` `other name` `spouse name` `preferred name` `alternate supervisor name` `autonomous supervisor name` `credentialing` `facility owner name` `program admin name` `recruiter name` `referral name` `regional director name` `supervisor name`";
                            };
                            readonly first_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly middle_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly last_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly suffix: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                        };
                        readonly required: readonly ["id", "kind"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAdditionalNamesPartialUpdateAdditionalNames: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly kind: {
                readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                readonly type: "string";
            };
            readonly first_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly middle_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly last_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly suffix: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                    readonly type: "string";
                    readonly description: "`birth name` `father name` `fiance name` `legal name` `maiden name` `married name` `mother name` `mother maiden name` `label change` `nickname` `other name` `spouse name` `preferred name` `alternate supervisor name` `autonomous supervisor name` `credentialing` `facility owner name` `program admin name` `recruiter name` `referral name` `regional director name` `supervisor name`";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly middle_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly suffix: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAdditionalNamesRetrieveAdditionalNames: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["birth name", "father name", "fiance name", "legal name", "maiden name", "married name", "mother name", "mother maiden name", "label change", "nickname", "other name", "spouse name", "preferred name", "alternate supervisor name", "autonomous supervisor name", "credentialing", "facility owner name", "program admin name", "recruiter name", "referral name", "regional director name", "supervisor name"];
                    readonly type: "string";
                    readonly description: "`birth name` `father name` `fiance name` `legal name` `maiden name` `married name` `mother name` `mother maiden name` `label change` `nickname` `other name` `spouse name` `preferred name` `alternate supervisor name` `autonomous supervisor name` `credentialing` `facility owner name` `program admin name` `recruiter name` `referral name` `regional director name` `supervisor name`";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly middle_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly suffix: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAddressesCreateAddresses: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly kind: {
                readonly enum: readonly ["mailing"];
                readonly type: "string";
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
        };
        readonly required: readonly ["kind"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["mailing"];
                    readonly type: "string";
                    readonly description: "`mailing`";
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["created", "id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAddressesDestroyAddresses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider address.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersAddressesListAddresses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly kind: {
                                readonly enum: readonly ["mailing"];
                                readonly type: "string";
                                readonly description: "`mailing`";
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["created", "id", "kind"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAddressesPartialUpdateAddresses: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly kind: {
                readonly enum: readonly ["mailing"];
                readonly type: "string";
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider address.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["mailing"];
                    readonly type: "string";
                    readonly description: "`mailing`";
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["created", "id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersAddressesRetrieveAddresses: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider address.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["mailing"];
                    readonly type: "string";
                    readonly description: "`mailing`";
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["created", "id", "kind"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersCollaborativeAgreementsCreateCollaborativeAgreements: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly supervision_start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly supervisor_profession: {
                readonly enum: readonly ["DO", "MD", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_status: {
                readonly enum: readonly ["active", "inactive", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_type: {
                readonly enum: readonly ["primary", "backup", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly supervisor_npi: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly supervisor_id: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly supervisor_profession: {
                    readonly enum: readonly ["DO", "MD", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`DO` `MD`";
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly supervisor_npi: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                    readonly readOnly: true;
                };
                readonly supervisor_id: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["document", "id"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersCollaborativeAgreementsDestroyCollaborativeAgreements: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersCollaborativeAgreementsListCollaborativeAgreements: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly collaborative_agreement_status: {
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["active", "inactive"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly collaborative_agreement_type: {
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["backup", "primary"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly supervisor_profession: {
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["DO", "MD"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly supervision_start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly supervision_end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly supervision_state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly supervisor_profession: {
                                readonly enum: readonly ["DO", "MD", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`DO` `MD`";
                            };
                            readonly collaborative_agreement_status: {
                                readonly enum: readonly ["active", "inactive", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`active` `inactive`";
                            };
                            readonly collaborative_agreement_type: {
                                readonly enum: readonly ["primary", "backup", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`primary` `backup`";
                            };
                            readonly license_number: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly supervisor_npi: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                                readonly readOnly: true;
                            };
                            readonly supervisor_id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["document", "id"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersCollaborativeAgreementsPartialUpdateCollaborativeAgreements: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly supervision_start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly supervisor_profession: {
                readonly enum: readonly ["DO", "MD", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_status: {
                readonly enum: readonly ["active", "inactive", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_type: {
                readonly enum: readonly ["primary", "backup", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly supervisor_npi: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly supervisor_id: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly supervisor_profession: {
                    readonly enum: readonly ["DO", "MD", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`DO` `MD`";
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly supervisor_npi: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                    readonly readOnly: true;
                };
                readonly supervisor_id: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["document", "id"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersCollaborativeAgreementsRetrieveCollaborativeAgreements: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly supervisor_profession: {
                    readonly enum: readonly ["DO", "MD", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`DO` `MD`";
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly supervisor_npi: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                    readonly readOnly: true;
                };
                readonly supervisor_id: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["document", "id"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersDocumentsCreateProviderDocuments: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly title: {
                readonly type: "string";
                readonly title: "Title (optional)";
                readonly maxLength: 254;
            };
            readonly kind: {
                readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                readonly type: "string";
            };
            readonly content: {
                readonly type: "string";
                readonly format: "binary";
                readonly writeOnly: true;
            };
        };
        readonly required: readonly ["content", "kind", "title"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                    readonly type: "string";
                    readonly description: "`cv` `ecfmg_certificate` `malpractice_coi` `npdb` `residency_diploma` `fellowship_diploma` `college_diploma` `ssn_card` `medical_diploma` `csr_certificate` `dea_certificate` `drivers_license` `background_check` `profile_picture` `passport` `birth_certificate` `claims_disclosure` `disclosure_attestation` `disclosure_question_supporting_document` `aanp_diploma` `board_certification` `cpr_certificate` `license_copy` `loq_document` `w9_form` `signature` `signature_initials` `application_release` `caqh_signature` `caqh_signature_initials` `attestation_signature` `military_service_document` `exam` `cme_credits` `primary_source_screenshot` `biography` `additional_name_supporting_doc` `other` `ofac` `dmf` `medicaid_exclusions` `caqh_state_app` `npi_profile` `work_authorization` `supervisor` `completion_document` `collaborative_physician` `telehealth_certificate`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersDocumentsDestroyProviderDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersDocumentsListProviderDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly kind: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["aanp_diploma", "additional_name_supporting_doc", "application_release", "attestation_signature", "background_check", "biography", "birth_certificate", "board_certification", "caqh_signature", "caqh_signature_initials", "caqh_state_app", "claims_disclosure", "cme_credits", "collaborative_physician", "college_diploma", "completion_document", "cpr_certificate", "csr_certificate", "cv", "dea_certificate", "disclosure_attestation", "disclosure_question_supporting_document", "dmf", "drivers_license", "ecfmg_certificate", "exam", "fellowship_diploma", "license_copy", "loq_document", "malpractice_coi", "medicaid_exclusions", "medical_diploma", "military_service_document", "npdb", "npi_profile", "ofac", "other", "passport", "primary_source_screenshot", "profile_picture", "residency_diploma", "signature", "signature_initials", "ssn_card", "supervisor", "telehealth_certificate", "w9_form", "work_authorization"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly title: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly title: "Title (optional)";
                                readonly maxLength: 254;
                            };
                            readonly kind: {
                                readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                                readonly type: "string";
                                readonly description: "`cv` `ecfmg_certificate` `malpractice_coi` `npdb` `residency_diploma` `fellowship_diploma` `college_diploma` `ssn_card` `medical_diploma` `csr_certificate` `dea_certificate` `drivers_license` `background_check` `profile_picture` `passport` `birth_certificate` `claims_disclosure` `disclosure_attestation` `disclosure_question_supporting_document` `aanp_diploma` `board_certification` `cpr_certificate` `license_copy` `loq_document` `w9_form` `signature` `signature_initials` `application_release` `caqh_signature` `caqh_signature_initials` `attestation_signature` `military_service_document` `exam` `cme_credits` `primary_source_screenshot` `biography` `additional_name_supporting_doc` `other` `ofac` `dmf` `medicaid_exclusions` `caqh_state_app` `npi_profile` `work_authorization` `supervisor` `completion_document` `collaborative_physician` `telehealth_certificate`";
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "id", "kind", "title"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersDocumentsPartialUpdateProviderDocuments: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly title: {
                readonly type: "string";
                readonly title: "Title (optional)";
                readonly maxLength: 254;
            };
            readonly kind: {
                readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                readonly type: "string";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                    readonly type: "string";
                    readonly description: "`cv` `ecfmg_certificate` `malpractice_coi` `npdb` `residency_diploma` `fellowship_diploma` `college_diploma` `ssn_card` `medical_diploma` `csr_certificate` `dea_certificate` `drivers_license` `background_check` `profile_picture` `passport` `birth_certificate` `claims_disclosure` `disclosure_attestation` `disclosure_question_supporting_document` `aanp_diploma` `board_certification` `cpr_certificate` `license_copy` `loq_document` `w9_form` `signature` `signature_initials` `application_release` `caqh_signature` `caqh_signature_initials` `attestation_signature` `military_service_document` `exam` `cme_credits` `primary_source_screenshot` `biography` `additional_name_supporting_doc` `other` `ofac` `dmf` `medicaid_exclusions` `caqh_state_app` `npi_profile` `work_authorization` `supervisor` `completion_document` `collaborative_physician` `telehealth_certificate`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersDocumentsRetrieveProviderDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["cv", "ecfmg_certificate", "malpractice_coi", "npdb", "residency_diploma", "fellowship_diploma", "college_diploma", "ssn_card", "medical_diploma", "csr_certificate", "dea_certificate", "drivers_license", "background_check", "profile_picture", "passport", "birth_certificate", "claims_disclosure", "disclosure_attestation", "disclosure_question_supporting_document", "aanp_diploma", "board_certification", "cpr_certificate", "license_copy", "loq_document", "w9_form", "signature", "signature_initials", "application_release", "caqh_signature", "caqh_signature_initials", "attestation_signature", "military_service_document", "exam", "cme_credits", "primary_source_screenshot", "biography", "additional_name_supporting_doc", "other", "ofac", "dmf", "medicaid_exclusions", "caqh_state_app", "npi_profile", "work_authorization", "supervisor", "completion_document", "collaborative_physician", "telehealth_certificate"];
                    readonly type: "string";
                    readonly description: "`cv` `ecfmg_certificate` `malpractice_coi` `npdb` `residency_diploma` `fellowship_diploma` `college_diploma` `ssn_card` `medical_diploma` `csr_certificate` `dea_certificate` `drivers_license` `background_check` `profile_picture` `passport` `birth_certificate` `claims_disclosure` `disclosure_attestation` `disclosure_question_supporting_document` `aanp_diploma` `board_certification` `cpr_certificate` `license_copy` `loq_document` `w9_form` `signature` `signature_initials` `application_release` `caqh_signature` `caqh_signature_initials` `attestation_signature` `military_service_document` `exam` `cme_credits` `primary_source_screenshot` `biography` `additional_name_supporting_doc` `other` `ofac` `dmf` `medicaid_exclusions` `caqh_state_app` `npi_profile` `work_authorization` `supervisor` `completion_document` `collaborative_physician` `telehealth_certificate`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersEducationsCreateEducations: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly degree_earned: {
                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                readonly type: "string";
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly program_type: {
                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                readonly type: "string";
            };
        };
        readonly required: readonly ["program_type"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersEducationsDestroyEducations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersEducationsListEducations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly completed_program: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly degree_earned: {
                    readonly type: "string";
                    readonly enum: readonly ["AA", "AAS", "AC", "ACSW", "ACU", "AD", "AND", "ANP", "APN", "APRN", "ARNP", "AS", "ASN", "AUD", "BA", "BASW", "BFA", "BHS", "BM", "BMSc", "BMT", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CISW", "CM", "CMA", "CMFT", "CMP", "CMT", "CN", "CNC", "CNM", "CNP", "CPNP", "CRNA", "CRNFA", "CRNP", "CSW", "D MIN", "DA", "DC", "DD", "DDS", "DIPL", "DMD", "DNP", "DNS", "DO", "DPM", "DPT", "DSN", "DSW", "DT", "EDD", "FNP", "JD", "LAC", "LCSW", "LISW", "LM", "LMCC", "LMFT", "LMHC", "LMLS", "LMSW", "LMT", "LPC", "LPC-C", "LPCC", "LPCC-S", "LPN", "LPT", "LPsy", "LSW", "MA", "MAC", "MAH", "MAO", "MB", "MBA", "MBBCH", "MBBS", "MC", "MCP", "MD", "MDDO", "MDIV", "MED", "MFCC", "MFT", "MHA", "MHS", "MHSA", "MMFT", "MMSc", "MN", "MOT", "MPA", "MPAS", "MPH", "MPT", "MRE", "MS", "MS AUD", "MS ED", "MSA", "MSC", "MSD", "MSN", "MSNA", "MSO", "MSP", "MSPAS", "MSPH", "MSPSY", "MSPT", "MSSA", "MSSW", "MSW", "MT", "MTS", "NA", "ND", "NP", "OD", "OT", "OTA", "OTD", "OTR/L", "Other", "PA", "PB", "PCC", "PCCC", "PHARM", "PHARMD", "PHD", "PM", "PMHNP", "PNA", "PNP", "PSYD", "PT", "PTA", "RCT", "RD", "RDN", "RN", "RNFA", "RPT", "RPh", "RRT", "SCD", "SLP", "SLP-CF", "SLPA", "SLPD", "STM", "SW", "TMT", "associates", "bachelor-of-science", "bachelors", "certificate", "doctorate", "masters"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly program_incompletion_reason: {
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["in_process", "incomplete_other", "incomplete_transferred"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly program_type: {
                    readonly type: "string";
                    readonly enum: readonly ["associates", "fellowship", "high_school", "internship", "jd", "masters", "md", "medical_practice", "nursing_graduate_program", "phd", "primary_school", "residency", "undergrad"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly state: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly institution_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly degree_earned: {
                                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                                readonly type: "string";
                                readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                            };
                            readonly completed_program: {
                                readonly type: "boolean";
                            };
                            readonly ecfmg_certificate: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly ecfmg_identifier: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly program_incompletion_reason: {
                                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                            };
                            readonly program_type: {
                                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                                readonly type: "string";
                                readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd`";
                            };
                        };
                        readonly required: readonly ["id", "program_type"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersEducationsPartialUpdateEducations: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly degree_earned: {
                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                readonly type: "string";
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly program_type: {
                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                readonly type: "string";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersEducationsRetrieveEducations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersExamsCreateExams: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly exam_type: {
                readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                readonly type: "string";
            };
            readonly exam_other_name: {
                readonly type: "string";
                readonly maxLength: 256;
            };
            readonly examination_type: {
                readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                readonly type: "string";
            };
            readonly exam_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                readonly type: "string";
            };
            readonly has_passed: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly score: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly attempts_count: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly location: {
                readonly type: "string";
                readonly maxLength: 256;
            };
            readonly exam_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly first_try_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly exam_type: {
                    readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                    readonly type: "string";
                    readonly description: "`amftrb` `aswb` `aswb_masters` `aswb_clinical` `aswb_advanced_generalist` `comlex-usa` `nbome` `comvex` `eppp` `flex` `lcsw` `lmcc` `nbcc` `nbde` `nbdhe` `nbme-part` `nbpm` `nce` `nclex` `ncmhce` `npte` `pance` `panre` `praxis` `spex` `usmle` `other`";
                };
                readonly exam_other_name: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly examination_type: {
                    readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                    readonly type: "string";
                    readonly description: "`level 1` `level 2-ce (cognitive evaluation)` `level 2-pe (performance evaluation)` `level 3` `nbme part i` `nbme part ii` `nbme part iii` `part i` `part ii` `part ii cspe` `part iii` `step 1` `step 2 ck (clinical knowledge)` `step 2 cs (clinical skills)` `step 3`";
                };
                readonly exam_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly score: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly attempts_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly location: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly first_try_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersExamsDestroyExams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this exam.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersExamsListExams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly exam_type: {
                                readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                                readonly type: "string";
                                readonly description: "`amftrb` `aswb` `aswb_masters` `aswb_clinical` `aswb_advanced_generalist` `comlex-usa` `nbome` `comvex` `eppp` `flex` `lcsw` `lmcc` `nbcc` `nbde` `nbdhe` `nbme-part` `nbpm` `nce` `nclex` `ncmhce` `npte` `pance` `panre` `praxis` `spex` `usmle` `other`";
                            };
                            readonly exam_other_name: {
                                readonly type: "string";
                                readonly maxLength: 256;
                            };
                            readonly examination_type: {
                                readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                                readonly type: "string";
                                readonly description: "`level 1` `level 2-ce (cognitive evaluation)` `level 2-pe (performance evaluation)` `level 3` `nbme part i` `nbme part ii` `nbme part iii` `part i` `part ii` `part ii cspe` `part iii` `step 1` `step 2 ck (clinical knowledge)` `step 2 cs (clinical skills)` `step 3`";
                            };
                            readonly exam_state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                                readonly type: "string";
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly has_passed: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly score: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 32767;
                                readonly minimum: 0;
                            };
                            readonly attempts_count: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 32767;
                                readonly minimum: 0;
                            };
                            readonly location: {
                                readonly type: "string";
                                readonly maxLength: 256;
                            };
                            readonly exam_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly first_try_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                        };
                        readonly required: readonly ["id", "name"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersExamsPartialUpdateExams: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly exam_type: {
                readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                readonly type: "string";
            };
            readonly exam_other_name: {
                readonly type: "string";
                readonly maxLength: 256;
            };
            readonly examination_type: {
                readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                readonly type: "string";
            };
            readonly exam_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                readonly type: "string";
            };
            readonly has_passed: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly score: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly attempts_count: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly location: {
                readonly type: "string";
                readonly maxLength: 256;
            };
            readonly exam_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly first_try_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this exam.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly exam_type: {
                    readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                    readonly type: "string";
                    readonly description: "`amftrb` `aswb` `aswb_masters` `aswb_clinical` `aswb_advanced_generalist` `comlex-usa` `nbome` `comvex` `eppp` `flex` `lcsw` `lmcc` `nbcc` `nbde` `nbdhe` `nbme-part` `nbpm` `nce` `nclex` `ncmhce` `npte` `pance` `panre` `praxis` `spex` `usmle` `other`";
                };
                readonly exam_other_name: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly examination_type: {
                    readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                    readonly type: "string";
                    readonly description: "`level 1` `level 2-ce (cognitive evaluation)` `level 2-pe (performance evaluation)` `level 3` `nbme part i` `nbme part ii` `nbme part iii` `part i` `part ii` `part ii cspe` `part iii` `step 1` `step 2 ck (clinical knowledge)` `step 2 cs (clinical skills)` `step 3`";
                };
                readonly exam_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly score: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly attempts_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly location: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly first_try_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersExamsRetrieveExams: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this exam.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly exam_type: {
                    readonly enum: readonly ["amftrb", "aswb", "aswb_masters", "aswb_clinical", "aswb_advanced_generalist", "comlex-usa", "nbome", "comvex", "eppp", "flex", "lcsw", "lmcc", "nbcc", "nbde", "nbdhe", "nbme-part", "nbpm", "nce", "nclex", "ncmhce", "npte", "pance", "panre", "praxis", "spex", "usmle", "other", ""];
                    readonly type: "string";
                    readonly description: "`amftrb` `aswb` `aswb_masters` `aswb_clinical` `aswb_advanced_generalist` `comlex-usa` `nbome` `comvex` `eppp` `flex` `lcsw` `lmcc` `nbcc` `nbde` `nbdhe` `nbme-part` `nbpm` `nce` `nclex` `ncmhce` `npte` `pance` `panre` `praxis` `spex` `usmle` `other`";
                };
                readonly exam_other_name: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly examination_type: {
                    readonly enum: readonly ["level 1", "level 2-ce (cognitive evaluation)", "level 2-pe (performance evaluation)", "level 3", "nbme part i", "nbme part ii", "nbme part iii", "part i", "part ii", "part ii cspe", "part iii", "step 1", "step 2 ck (clinical knowledge)", "step 2 cs (clinical skills)", "step 3", ""];
                    readonly type: "string";
                    readonly description: "`level 1` `level 2-ce (cognitive evaluation)` `level 2-pe (performance evaluation)` `level 3` `nbme part i` `nbme part ii` `nbme part iii` `part i` `part ii` `part ii cspe` `part iii` `step 1` `step 2 ck (clinical knowledge)` `step 2 cs (clinical skills)` `step 3`";
                };
                readonly exam_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_passed: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly score: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly attempts_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly location: {
                    readonly type: "string";
                    readonly maxLength: 256;
                };
                readonly exam_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly first_try_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersGapRecordsCreateGapRecords: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly explanations: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                    readonly type: "string";
                };
            };
            readonly reason: {
                readonly type: readonly ["string", "null"];
            };
        };
        readonly required: readonly ["explanations"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly explanations: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                        readonly type: "string";
                        readonly description: "`academic_leave` `charitable_work` `deployment` `immigration` `job_search` `medical_leave` `parental_leave` `board_studying` `non_healthcare_work` `other`";
                    };
                };
                readonly reason: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["explanations", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersGapRecordsDestroyGapRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this gap record.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersGapRecordsListGapRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly explanations: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                                    readonly type: "string";
                                    readonly description: "`academic_leave` `charitable_work` `deployment` `immigration` `job_search` `medical_leave` `parental_leave` `board_studying` `non_healthcare_work` `other`";
                                };
                            };
                            readonly reason: {
                                readonly type: readonly ["string", "null"];
                            };
                        };
                        readonly required: readonly ["explanations", "id"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersGapRecordsPartialUpdateGapRecords: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly explanations: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                    readonly type: "string";
                };
            };
            readonly reason: {
                readonly type: readonly ["string", "null"];
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this gap record.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly explanations: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                        readonly type: "string";
                        readonly description: "`academic_leave` `charitable_work` `deployment` `immigration` `job_search` `medical_leave` `parental_leave` `board_studying` `non_healthcare_work` `other`";
                    };
                };
                readonly reason: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["explanations", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersGapRecordsRetrieveGapRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this gap record.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly explanations: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["academic_leave", "charitable_work", "deployment", "immigration", "job_search", "medical_leave", "parental_leave", "board_studying", "non_healthcare_work", "other"];
                        readonly type: "string";
                        readonly description: "`academic_leave` `charitable_work` `deployment` `immigration` `job_search` `medical_leave` `parental_leave` `board_studying` `non_healthcare_work` `other`";
                    };
                };
                readonly reason: {
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["explanations", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersListProviders: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly accepting_new_patients: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly active_request_products: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly enum: readonly ["License", "Payer", "Credentialing", ""];
                            readonly type: "string";
                        };
                        readonly enum: readonly ["Credentialing", "License", "Payer"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly coordinator: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly credentialing_committee_status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["", "approved", "closed_without_decision", "pending", "rejected"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly credentialing_step: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["file_approved", "file_expired", "file_rejected", "in_committee", "in_progress", "not_requested", "ready", "scheduled"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly employment_status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["active", "inactive", "onboarding"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly last_updated_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last_updated field in the format YYYY-MM-DD (inclusive)";
                };
                readonly last_updated_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last_updated field in the format YYYY-MM-DD (inclusive)";
                };
                readonly license_state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "License States";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly organization: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly practice_group_profile_exclude: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly primary_specialty: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "adult_intensivist", "allergy", "anesthesia", "applied_behavior_analyst", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopaedic_sports_medicine", "orthopedic_manual_physical_therapy", "orthopedics", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_anatomic", "pathology_chemical", "pathology_clinical", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_hospital_medicine", "pediatric_intensivist", "pediatric_surgery", "pediatrics", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_&_reconstructive_surgery", "plastic_surgery_within_the_head_and_neck", "podiatric_surgery", "professional", "psychiatry", "pulmonary_disease", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly profession: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly profile_completion_status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["0_50", "50_70", "70_90", "90_100", "action_required", "no_action_required", "outstanding_tasks"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Multi-person, comma separated, wildcard-enabled search for Providers by first_name, last_name, and user__email";
                };
                readonly verification_status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly enum: readonly ["in_progress", "manually_verified", "needs_attention", "not_requested", "verified"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly email: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly full_name: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly first_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly middle_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly last_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly preferred_name: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly profession: {
                                readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                                readonly type: "string";
                                readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                            };
                            readonly states: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                            };
                            readonly license_states: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                                readonly readOnly: true;
                            };
                            readonly suffix: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly preferred_pronoun: {
                                readonly enum: readonly ["he_him", "she_her", "they_them", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`he_him` `she_her` `they_them`";
                            };
                            readonly gender: {
                                readonly enum: readonly ["male", "female", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`male` `female`";
                            };
                            readonly ethnicity: {
                                readonly enum: readonly ["hispanic_latino", "not_hispanic_latino", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`hispanic_latino` `not_hispanic_latino`";
                            };
                            readonly race: {
                                readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`american_indian_or_alaska_native` `asian` `black_or_african_american` `native_hawaiian_or_other_pacific_islander` `white_caucasian` `other` `prefer_not_to_say`";
                            };
                            readonly date_of_birth: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly us_citizen: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_prescribing: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly ssn_masked: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly primary_phone: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly work_phone: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly npi: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 9223372036854776000;
                                readonly minimum: -9223372036854776000;
                                readonly format: "int64";
                            };
                            readonly primary_taxonomy: {
                                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                            };
                            readonly secondary_taxonomy: {
                                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                            };
                            readonly additional_taxonomies: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                                    readonly type: "string";
                                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                                };
                                readonly default: readonly [];
                            };
                            readonly primary_specialty: {
                                readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                            };
                            readonly secondary_specialty: {
                                readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                            };
                            readonly cv_url: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uri";
                                readonly maxLength: 200;
                            };
                            readonly diploma_url: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uri";
                                readonly maxLength: 200;
                            };
                            readonly using_fcvs: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly birth_city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly birth_state: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 24;
                            };
                            readonly birth_country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly birth_country_other: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly percent_complete: {
                                readonly type: "integer";
                                readonly maximum: 32767;
                                readonly minimum: 0;
                            };
                            readonly profile_completion_state: {
                                readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                readonly type: "string";
                                readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                            };
                            readonly percent_complete_last_checked: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly verification_status: {
                                readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                            };
                            readonly verification_status_last_checked: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                            };
                            readonly unlicensed_states: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly readOnly: true;
                            };
                            readonly employment_status: {
                                readonly enum: readonly ["active", "inactive", "onboarding"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`active` `inactive` `onboarding`";
                            };
                            readonly employment_title: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly date_joined: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly caqh_number: {
                                readonly type: "string";
                                readonly maxLength: 24;
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly last_invited: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly secondary_contact_email: {
                                readonly type: "string";
                                readonly format: "email";
                                readonly maxLength: 255;
                            };
                            readonly caqh_profile: {
                                readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                            };
                            readonly caqh_attestation_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly user: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "integer";
                                        readonly readOnly: true;
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                        readonly format: "email";
                                        readonly readOnly: true;
                                        readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                    };
                                    readonly picture: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly is_staff: {
                                        readonly type: "boolean";
                                        readonly description: "Designates whether the user can log into this admin site.";
                                    };
                                    readonly date_joined: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "date-time";
                                    };
                                    readonly is_sso: {
                                        readonly type: "boolean";
                                        readonly readOnly: true;
                                    };
                                    readonly is_pii_access_restricted: {
                                        readonly type: "boolean";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                readonly description: "";
                            };
                            readonly medallion_email: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly remaining_todos: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly credentialing_committee_status: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                    readonly type: "string";
                                    readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                                };
                                readonly readOnly: true;
                            };
                            readonly credentialing_committee_approval_request: {
                                readonly readOnly: true;
                                readonly type: "object";
                                readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly initialcredentialingservicerequest: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uuid";
                                    };
                                    readonly recredentialingservicerequest: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uuid";
                                    };
                                    readonly credentialing_committee: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly credentialing_committee_details: {
                                        readonly type: "object";
                                        readonly required: readonly ["id", "members", "name"];
                                        readonly description: "";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                                readonly readOnly: true;
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                                readonly maxLength: 265;
                                            };
                                            readonly members: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                                    readonly description: "";
                                                    readonly properties: {
                                                        readonly id: {
                                                            readonly type: "integer";
                                                            readonly readOnly: true;
                                                        };
                                                        readonly email: {
                                                            readonly type: "string";
                                                            readonly format: "email";
                                                            readonly readOnly: true;
                                                            readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                                        };
                                                        readonly picture: {
                                                            readonly type: "string";
                                                            readonly readOnly: true;
                                                        };
                                                        readonly name: {
                                                            readonly type: "string";
                                                            readonly maxLength: 255;
                                                        };
                                                        readonly is_staff: {
                                                            readonly type: "boolean";
                                                            readonly description: "Designates whether the user can log into this admin site.";
                                                        };
                                                        readonly date_joined: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly format: "date-time";
                                                        };
                                                        readonly is_sso: {
                                                            readonly type: "boolean";
                                                            readonly readOnly: true;
                                                        };
                                                        readonly is_pii_access_restricted: {
                                                            readonly type: "boolean";
                                                            readonly readOnly: true;
                                                        };
                                                    };
                                                };
                                            };
                                            readonly is_default_committee: {
                                                readonly type: "boolean";
                                            };
                                        };
                                    };
                                    readonly provider: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uuid";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly format: "date-time";
                                        readonly readOnly: true;
                                    };
                                    readonly status: {
                                        readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                        readonly type: "string";
                                        readonly readOnly: true;
                                        readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                                    };
                                    readonly votes: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly required: readonly ["approval_request", "created", "id", "voter"];
                                            readonly description: "";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                    readonly readOnly: true;
                                                };
                                                readonly decision: {
                                                    readonly enum: readonly [0, 1, any];
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly minimum: -2147483648;
                                                    readonly maximum: 2147483647;
                                                    readonly description: "`1`";
                                                };
                                                readonly result: {
                                                    readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                                    readonly type: "string";
                                                    readonly description: "`approved` `disapproved` `ignored`";
                                                };
                                                readonly voter: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly readOnly: true;
                                                };
                                                readonly approval_request: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly created: {
                                                    readonly type: "string";
                                                    readonly format: "date-time";
                                                    readonly readOnly: true;
                                                };
                                                readonly voted_on: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly format: "date-time";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly initial_credentialing_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                                readonly description: "Date of initial/first-known credentialing request approved for provider";
                            };
                            readonly latest_credentialing_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                                readonly description: "Date of last credentialing request approved for provider";
                            };
                            readonly verifications: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly readOnly: true;
                            };
                            readonly org_membership_id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly credentialing_step: {
                                readonly enum: readonly ["not_requested", "in_progress", "ready", "in_committee", "file_approved", "file_rejected", "file_expired", "scheduled"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`not_requested` `in_progress` `ready` `in_committee` `file_approved` `file_rejected` `file_expired` `scheduled`";
                            };
                            readonly group_profiles: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                    };
                                    readonly required: readonly ["id", "name"];
                                    readonly description: "";
                                };
                                readonly readOnly: true;
                            };
                            readonly has_ce_tracking: {
                                readonly type: "boolean";
                            };
                            readonly last_updated: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly last_completed: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly active_request_products: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly enum: readonly ["License", "Payer", "Credentialing", ""];
                                    readonly type: "string";
                                    readonly description: "`License` `Payer` `Credentialing`";
                                };
                            };
                            readonly employment_type: {
                                readonly enum: readonly ["full_time", "part_time", "contractor", "privileged", "prn", "intern", "ptl", "ssnl", "temp", "agency", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`full_time` `part_time` `contractor` `privileged` `prn` `intern` `ptl` `ssnl` `temp` `agency`";
                            };
                            readonly employee_id: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly employee_number: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly metadata_s1: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Additional string field for provider metadata";
                                readonly maxLength: 255;
                            };
                            readonly metadata_s2: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Additional string field for provider metadata";
                                readonly maxLength: 255;
                            };
                            readonly metadata_s3: {
                                readonly type: readonly ["string", "null"];
                                readonly description: "Additional string field for provider metadata";
                                readonly maxLength: 255;
                            };
                            readonly metadata_n1: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 2147483647;
                                readonly minimum: -2147483648;
                                readonly description: "Additional integer field for provider metadata";
                            };
                            readonly metadata_n2: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 2147483647;
                                readonly minimum: -2147483648;
                                readonly description: "Additional integer field for provider metadata";
                            };
                            readonly metadata_n3: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 2147483647;
                                readonly minimum: -2147483648;
                                readonly description: "Additional integer field for provider metadata";
                            };
                            readonly accepting_new_patients: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly accepting_ages_from: {
                                readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                            };
                            readonly accepting_ages_to: {
                                readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                            };
                            readonly behavioral_health_expertises: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly enum: readonly ["add_adhd", "alcohol_substance_use_disorders", "anger_stress_management", "anxiety_and_panic_disorders", "autism_and_autism_spectrum_disorders", "bariatric_weight_loss_surgery_evaluation_and_counseling", "bipolar_other_mood_disorders", "chronic_illness_chronic_pain", "conversion_disorder", "cultural_ethnic_issues", "depression", "dialectical_behvaioral_therapy", "dissociative_identity_disorder", "domestic_violence_and_abuse", "eating_disorders", "end_of_life_issues", "gambling_disorder", "gender_reassignment_counseling", "geriatric_issues_dementia_cognitive_impairment", "grief_bereavement", "hiv_aids_related_issues", "infertility_fertility_counseling", "lgbtq2_issues", "obsessive_compulsive_disorders", "occupational_therapy", "pain_management", "personality_disorders", "phobias", "pregnancy_menopause", "relationship_separation_divorce_issues", "schizophrenic_disorders", "sexual_disorders_dysfunctions_compulsions", "sleep_disorders", "survivor_counseling_rape_and_violent_crime", "trauma_post_traumatic_stress", "speech_language"];
                                    readonly type: "string";
                                    readonly description: "`add_adhd` `alcohol_substance_use_disorders` `anger_stress_management` `anxiety_and_panic_disorders` `autism_and_autism_spectrum_disorders` `bariatric_weight_loss_surgery_evaluation_and_counseling` `bipolar_other_mood_disorders` `chronic_illness_chronic_pain` `conversion_disorder` `cultural_ethnic_issues` `depression` `dialectical_behvaioral_therapy` `dissociative_identity_disorder` `domestic_violence_and_abuse` `eating_disorders` `end_of_life_issues` `gambling_disorder` `gender_reassignment_counseling` `geriatric_issues_dementia_cognitive_impairment` `grief_bereavement` `hiv_aids_related_issues` `infertility_fertility_counseling` `lgbtq2_issues` `obsessive_compulsive_disorders` `occupational_therapy` `pain_management` `personality_disorders` `phobias` `pregnancy_menopause` `relationship_separation_divorce_issues` `schizophrenic_disorders` `sexual_disorders_dysfunctions_compulsions` `sleep_disorders` `survivor_counseling_rape_and_violent_crime` `trauma_post_traumatic_stress` `speech_language`";
                                };
                            };
                        };
                        readonly required: readonly ["created", "credentialing_committee_approval_request", "credentialing_committee_status", "credentialing_step", "date_joined", "email", "employment_status", "full_name", "group_profiles", "id", "initial_credentialing_date", "last_completed", "last_invited", "last_updated", "latest_credentialing_date", "license_states", "org_membership_id", "remaining_todos", "ssn_masked", "unlicensed_states", "verifications"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMalpracticeInsurancesCreateMalpracticeInsurances: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly coverage_amount: {
                readonly type: "string";
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
            };
            readonly occurrence: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
            };
            readonly certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly policy_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly carrier_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly required: readonly ["coverage_amount"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coverage_amount: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly occurrence: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly policy_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly carrier_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["coverage_amount", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMalpracticeInsurancesDestroyMalpracticeInsurances: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersMalpracticeInsurancesListMalpracticeInsurances: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly effective_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly expiration_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly coverage_amount: {
                                readonly type: "string";
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                            };
                            readonly occurrence: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                            };
                            readonly certificate: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly policy_number: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly carrier_name: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["coverage_amount", "id"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMalpracticeInsurancesPartialUpdateMalpracticeInsurances: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly expiration_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly coverage_amount: {
                readonly type: "string";
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
            };
            readonly occurrence: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
            };
            readonly certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly policy_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly carrier_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coverage_amount: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly occurrence: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly policy_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly carrier_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["coverage_amount", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMalpracticeInsurancesRetrieveMalpracticeInsurances: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly expiration_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly coverage_amount: {
                    readonly type: "string";
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly occurrence: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,10}(?:\\.\\d{0,2})?$";
                };
                readonly certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly policy_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly carrier_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["coverage_amount", "id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMedicalProgramsCreateMedicalPrograms: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly program_type: {
                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                readonly type: "string";
            };
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly degree_earned: {
                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                readonly type: "string";
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly admitting_privileges: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly is_present: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
        };
        readonly required: readonly ["program_type"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd` `fellowship` `internship` `residency` `medical_practice`";
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMedicalProgramsDestroyMedicalPrograms: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A unique integer value identifying this medical program data.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersMedicalProgramsListMedicalPrograms: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly program_type: {
                                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                                readonly type: "string";
                                readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd` `fellowship` `internship` `residency` `medical_practice`";
                            };
                            readonly institution_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly ecfmg_identifier: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly degree_earned: {
                                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                                readonly type: "string";
                                readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                            };
                            readonly specialty: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly completed_program: {
                                readonly type: "boolean";
                            };
                            readonly admitting_privileges: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly is_present: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly ecfmg_certificate: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly program_incompletion_reason: {
                                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                            };
                        };
                        readonly required: readonly ["id", "program_type"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMedicalProgramsPartialUpdateMedicalPrograms: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly program_type: {
                readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                readonly type: "string";
            };
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly degree_earned: {
                readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                readonly type: "string";
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly admitting_privileges: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly is_present: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A unique integer value identifying this medical program data.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd` `fellowship` `internship` `residency` `medical_practice`";
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMedicalProgramsRetrieveMedicalPrograms: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A unique integer value identifying this medical program data.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly program_type: {
                    readonly enum: readonly ["high_school", "primary_school", "associates", "undergrad", "masters", "md", "nursing_graduate_program", "phd", "jd", "fellowship", "internship", "residency", "medical_practice"];
                    readonly type: "string";
                    readonly description: "`high_school` `primary_school` `associates` `undergrad` `masters` `md` `nursing_graduate_program` `phd` `jd` `fellowship` `internship` `residency` `medical_practice`";
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly degree_earned: {
                    readonly enum: readonly ["ACSW", "ANP", "APN", "APRN", "ARNP", "AND", "AAS", "AA", "ASN", "AS", "AD", "AUD", "BA", "BASW", "BFA", "BHS", "BMSc", "BMT", "MB", "MBBCH", "BM", "BN", "BPT", "BS", "BSN", "BSW", "CCSW", "CD", "CFNP", "CMFT", "CMP", "CMT", "CMA", "CM", "CNM", "CNP", "CNC", "CN", "CPNP", "CRNA", "CRNFA", "CRNP", "CISW", "CSW", "DT", "DIPL", "DA", "DC", "DMD", "DDS", "DD", "EDD", "MD", "AC", "ACU", "D MIN", "ND", "DNP", "DNS", "OD", "DO", "PHARMD", "PHD", "DPT", "DPM", "PSYD", "SCD", "DSN", "DSW", "FNP", "MBBS", "MRE", "JD", "LMCC", "LAC", "LCSW", "LISW", "LMFT", "LMT", "LMSW", "LM", "LPT", "LPN", "LPCC", "LPCC-S", "LPC", "LPC-C", "LSW", "LPsy", "LMLS", "LMHC", "MFT", "MFCC", "MAO", "MC", "MAC", "MHA", "MCP", "MDIV", "MHS", "MMFT", "MMSc", "MOT", "MPT", "MPAS", "MS", "MSO", "MSC", "MSD", "MS ED", "MSNA", "MSN", "MSPAS", "MSPH", "MSSA", "MSSW", "MSPT", "MSPSY", "MSW", "MSA", "MTS", "MSP", "MAH", "MA", "MBA", "MED", "MHSA", "MN", "MPA", "MPH", "STM", "MS AUD", "MDDO", "MT", "NA", "NP", "OT", "OTA", "OTD", "Other", "OTR/L", "PNP", "PHARM", "PT", "PTA", "PA", "PB", "PM", "PCCC", "PNA", "PCC", "PMHNP", "RD", "RDN", "TMT", "RN", "RNFA", "RPh", "RRT", "RPT", "RCT", "SLP", "SLPA", "SLP-CF", "SLPD", "SW", "associates", "bachelors", "bachelor-of-science", "masters", "doctorate", "certificate", ""];
                    readonly type: "string";
                    readonly description: "`ACSW` `ANP` `APN` `APRN` `ARNP` `AND` `AAS` `AA` `ASN` `AS` `AD` `AUD` `BA` `BASW` `BFA` `BHS` `BMSc` `BMT` `MB` `MBBCH` `BM` `BN` `BPT` `BS` `BSN` `BSW` `CCSW` `CD` `CFNP` `CMFT` `CMP` `CMT` `CMA` `CM` `CNM` `CNP` `CNC` `CN` `CPNP` `CRNA` `CRNFA` `CRNP` `CISW` `CSW` `DT` `DIPL` `DA` `DC` `DMD` `DDS` `DD` `EDD` `MD` `AC` `ACU` `D MIN` `ND` `DNP` `DNS` `OD` `DO` `PHARMD` `PHD` `DPT` `DPM` `PSYD` `SCD` `DSN` `DSW` `FNP` `MBBS` `MRE` `JD` `LMCC` `LAC` `LCSW` `LISW` `LMFT` `LMT` `LMSW` `LM` `LPT` `LPN` `LPCC` `LPCC-S` `LPC` `LPC-C` `LSW` `LPsy` `LMLS` `LMHC` `MFT` `MFCC` `MAO` `MC` `MAC` `MHA` `MCP` `MDIV` `MHS` `MMFT` `MMSc` `MOT` `MPT` `MPAS` `MS` `MSO` `MSC` `MSD` `MS ED` `MSNA` `MSN` `MSPAS` `MSPH` `MSSA` `MSSW` `MSPT` `MSPSY` `MSW` `MSA` `MTS` `MSP` `MAH` `MA` `MBA` `MED` `MHSA` `MN` `MPA` `MPH` `STM` `MS AUD` `MDDO` `MT` `NA` `NP` `OT` `OTA` `OTD` `Other` `OTR/L` `PNP` `PHARM` `PT` `PTA` `PA` `PB` `PM` `PCCC` `PNA` `PCC` `PMHNP` `RD` `RDN` `TMT` `RN` `RNFA` `RPh` `RRT` `RPT` `RCT` `SLP` `SLPA` `SLP-CF` `SLPD` `SW` `associates` `bachelors` `bachelor-of-science` `masters` `doctorate` `certificate`";
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMilitaryHistoryRecordsCreateMilitaryHistoryRecords: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly branch: {
                readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                readonly type: "string";
            };
            readonly discharge_type: {
                readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                readonly type: "string";
            };
            readonly rank: {
                readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                readonly type: "string";
            };
            readonly role: {
                readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                readonly type: "string";
            };
            readonly service_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly currently_serving: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_spouse: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly required: readonly ["branch"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly branch: {
                    readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                    readonly type: "string";
                    readonly description: "`air_force` `air_national_guard` `army` `army_national_guard` `coast_guard` `marine_corps` `navy` `noaa` `public_health_service`";
                };
                readonly discharge_type: {
                    readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                    readonly type: "string";
                    readonly description: "`General Discharge` `honorable_discharge` `dishonorable_discharge` `bad_conduct_discharge` `other_than_honorable_discharge`";
                };
                readonly rank: {
                    readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                    readonly type: "string";
                    readonly description: "`second_lieutenant` `ensign` `first_lieutenant` `lieutenant_junior_grade` `captain` `lieutenant` `major` `lieutenant_commander` `lieutenant_colonel` `commander` `colonel` `brigadier_general` `rear_admiral` `major_general` `lieutenant_general` `vice_admiral` `general` `admiral` `warrant_officer` `chief_warrant_officer` `private` `seaman_recruit` `recruit` `army_private` `marine_private_first_class` `seaman_apprentice` `airman` `army_private_first_class` `marine_lance_corporal` `seaman` `airman_first_class` `corporal` `petty_officer_third_class` `senior_airman` `sergeant` `petty_officer_second_class` `staff_sergeant` `petty_officer_first_class` `technical_sergeant` `army_sergeant_first_class` `marine_gunnery_sergeant` `chief_petty_officer` `master_sergeant` `senior_chief_petty_officer` `senior_master_sergeant` `sergeant_major` `master_chief_petty_officer` `chief_master_sergeant`";
                };
                readonly role: {
                    readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                    readonly type: "string";
                    readonly description: "`active_duty` `select_reserve` `veteran`";
                };
                readonly service_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly currently_serving: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_spouse: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_past_two_years: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["branch", "id", "is_past_two_years"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMilitaryHistoryRecordsDestroyMilitaryHistoryRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersMilitaryHistoryRecordsListMilitaryHistoryRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly branch: {
                                readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                                readonly type: "string";
                                readonly description: "`air_force` `air_national_guard` `army` `army_national_guard` `coast_guard` `marine_corps` `navy` `noaa` `public_health_service`";
                            };
                            readonly discharge_type: {
                                readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                                readonly type: "string";
                                readonly description: "`General Discharge` `honorable_discharge` `dishonorable_discharge` `bad_conduct_discharge` `other_than_honorable_discharge`";
                            };
                            readonly rank: {
                                readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                                readonly type: "string";
                                readonly description: "`second_lieutenant` `ensign` `first_lieutenant` `lieutenant_junior_grade` `captain` `lieutenant` `major` `lieutenant_commander` `lieutenant_colonel` `commander` `colonel` `brigadier_general` `rear_admiral` `major_general` `lieutenant_general` `vice_admiral` `general` `admiral` `warrant_officer` `chief_warrant_officer` `private` `seaman_recruit` `recruit` `army_private` `marine_private_first_class` `seaman_apprentice` `airman` `army_private_first_class` `marine_lance_corporal` `seaman` `airman_first_class` `corporal` `petty_officer_third_class` `senior_airman` `sergeant` `petty_officer_second_class` `staff_sergeant` `petty_officer_first_class` `technical_sergeant` `army_sergeant_first_class` `marine_gunnery_sergeant` `chief_petty_officer` `master_sergeant` `senior_chief_petty_officer` `senior_master_sergeant` `sergeant_major` `master_chief_petty_officer` `chief_master_sergeant`";
                            };
                            readonly role: {
                                readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                                readonly type: "string";
                                readonly description: "`active_duty` `select_reserve` `veteran`";
                            };
                            readonly service_number: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly currently_serving: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_spouse: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly is_past_two_years: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["branch", "id", "is_past_two_years"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMilitaryHistoryRecordsPartialUpdateMilitaryHistoryRecords: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly branch: {
                readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                readonly type: "string";
            };
            readonly discharge_type: {
                readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                readonly type: "string";
            };
            readonly rank: {
                readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                readonly type: "string";
            };
            readonly role: {
                readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                readonly type: "string";
            };
            readonly service_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly currently_serving: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_spouse: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly branch: {
                    readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                    readonly type: "string";
                    readonly description: "`air_force` `air_national_guard` `army` `army_national_guard` `coast_guard` `marine_corps` `navy` `noaa` `public_health_service`";
                };
                readonly discharge_type: {
                    readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                    readonly type: "string";
                    readonly description: "`General Discharge` `honorable_discharge` `dishonorable_discharge` `bad_conduct_discharge` `other_than_honorable_discharge`";
                };
                readonly rank: {
                    readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                    readonly type: "string";
                    readonly description: "`second_lieutenant` `ensign` `first_lieutenant` `lieutenant_junior_grade` `captain` `lieutenant` `major` `lieutenant_commander` `lieutenant_colonel` `commander` `colonel` `brigadier_general` `rear_admiral` `major_general` `lieutenant_general` `vice_admiral` `general` `admiral` `warrant_officer` `chief_warrant_officer` `private` `seaman_recruit` `recruit` `army_private` `marine_private_first_class` `seaman_apprentice` `airman` `army_private_first_class` `marine_lance_corporal` `seaman` `airman_first_class` `corporal` `petty_officer_third_class` `senior_airman` `sergeant` `petty_officer_second_class` `staff_sergeant` `petty_officer_first_class` `technical_sergeant` `army_sergeant_first_class` `marine_gunnery_sergeant` `chief_petty_officer` `master_sergeant` `senior_chief_petty_officer` `senior_master_sergeant` `sergeant_major` `master_chief_petty_officer` `chief_master_sergeant`";
                };
                readonly role: {
                    readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                    readonly type: "string";
                    readonly description: "`active_duty` `select_reserve` `veteran`";
                };
                readonly service_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly currently_serving: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_spouse: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_past_two_years: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["branch", "id", "is_past_two_years"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersMilitaryHistoryRecordsRetrieveMilitaryHistoryRecords: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly branch: {
                    readonly enum: readonly ["air_force", "air_national_guard", "army", "army_national_guard", "coast_guard", "marine_corps", "navy", "noaa", "public_health_service"];
                    readonly type: "string";
                    readonly description: "`air_force` `air_national_guard` `army` `army_national_guard` `coast_guard` `marine_corps` `navy` `noaa` `public_health_service`";
                };
                readonly discharge_type: {
                    readonly enum: readonly ["General Discharge", "honorable_discharge", "dishonorable_discharge", "bad_conduct_discharge", "other_than_honorable_discharge", ""];
                    readonly type: "string";
                    readonly description: "`General Discharge` `honorable_discharge` `dishonorable_discharge` `bad_conduct_discharge` `other_than_honorable_discharge`";
                };
                readonly rank: {
                    readonly enum: readonly ["second_lieutenant", "ensign", "first_lieutenant", "lieutenant_junior_grade", "captain", "lieutenant", "major", "lieutenant_commander", "lieutenant_colonel", "commander", "colonel", "brigadier_general", "rear_admiral", "major_general", "lieutenant_general", "vice_admiral", "general", "admiral", "warrant_officer", "chief_warrant_officer", "private", "seaman_recruit", "recruit", "army_private", "marine_private_first_class", "seaman_apprentice", "airman", "army_private_first_class", "marine_lance_corporal", "seaman", "airman_first_class", "corporal", "petty_officer_third_class", "senior_airman", "sergeant", "petty_officer_second_class", "staff_sergeant", "petty_officer_first_class", "technical_sergeant", "army_sergeant_first_class", "marine_gunnery_sergeant", "chief_petty_officer", "master_sergeant", "senior_chief_petty_officer", "senior_master_sergeant", "sergeant_major", "master_chief_petty_officer", "chief_master_sergeant", ""];
                    readonly type: "string";
                    readonly description: "`second_lieutenant` `ensign` `first_lieutenant` `lieutenant_junior_grade` `captain` `lieutenant` `major` `lieutenant_commander` `lieutenant_colonel` `commander` `colonel` `brigadier_general` `rear_admiral` `major_general` `lieutenant_general` `vice_admiral` `general` `admiral` `warrant_officer` `chief_warrant_officer` `private` `seaman_recruit` `recruit` `army_private` `marine_private_first_class` `seaman_apprentice` `airman` `army_private_first_class` `marine_lance_corporal` `seaman` `airman_first_class` `corporal` `petty_officer_third_class` `senior_airman` `sergeant` `petty_officer_second_class` `staff_sergeant` `petty_officer_first_class` `technical_sergeant` `army_sergeant_first_class` `marine_gunnery_sergeant` `chief_petty_officer` `master_sergeant` `senior_chief_petty_officer` `senior_master_sergeant` `sergeant_major` `master_chief_petty_officer` `chief_master_sergeant`";
                };
                readonly role: {
                    readonly enum: readonly ["active_duty", "select_reserve", "veteran", ""];
                    readonly type: "string";
                    readonly description: "`active_duty` `select_reserve` `veteran`";
                };
                readonly service_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly currently_serving: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_spouse: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly is_past_two_years: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["branch", "id", "is_past_two_years"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersPartialUpdateProviders: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly user: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                        readonly maxLength: 255;
                    };
                    readonly is_staff: {
                        readonly type: "boolean";
                        readonly description: "Designates whether the user can log into this admin site.";
                    };
                    readonly date_joined: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                };
                readonly description: "";
            };
            readonly first_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly middle_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly preferred_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly last_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly profession: {
                readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                readonly type: "string";
            };
            readonly states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly suffix: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly age: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly height: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly preferred_pronoun: {
                readonly enum: readonly ["he_him", "she_her", "they_them", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly gender: {
                readonly enum: readonly ["male", "female", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly ethnicity: {
                readonly enum: readonly ["hispanic_latino", "not_hispanic_latino", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly race: {
                readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly race_selections: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", ""];
                    readonly type: "string";
                };
            };
            readonly date_of_birth: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly us_citizen: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly accepting_new_patients: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly accepting_ages_from: {
                readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly accepting_ages_to: {
                readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly is_solo_provider: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly medicaid_id: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly medicare_ptan: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly primary_care_type: {
                readonly enum: readonly ["primary_care_manager", "primary_care_specialist", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly is_hospital_based_provider: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly hospital_affiliation: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly hospital_affiliation_names: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly minLength: 1;
                    readonly maxLength: 255;
                };
            };
            readonly practice_restrictions: {
                readonly type: readonly ["string", "null"];
            };
            readonly is_prescribing: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_dea_eligable: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly has_dea_certificate: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly how_are_controlled_substances_handled_description: {
                readonly type: readonly ["string", "null"];
            };
            readonly has_collaborative_agreements: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly has_ce_tracking: {
                readonly type: "boolean";
            };
            readonly is_nlc_active: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_imlc_active: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_imlc_eligible: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly loq_status: {
                readonly enum: readonly ["active", "inactive", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly loq_spl: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly loq_issue_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly loq_document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly primary_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly dea_waiver: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly ssn: {
                readonly type: "string";
                readonly writeOnly: true;
                readonly maxLength: 16;
            };
            readonly primary_phone: {
                readonly type: readonly ["string", "null"];
            };
            readonly communication_preference: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["EMAIL", "PHONE", "TEXT"];
                    readonly type: "string";
                };
                readonly default: readonly [];
            };
            readonly work_phone: {
                readonly type: readonly ["string", "null"];
            };
            readonly npi: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 9223372036854776000;
                readonly minimum: -9223372036854776000;
                readonly format: "int64";
            };
            readonly primary_taxonomy: {
                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly secondary_taxonomy: {
                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly additional_taxonomies: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                    readonly type: "string";
                };
                readonly default: readonly [];
            };
            readonly fluent_languages: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["en", "es", "01", "aa", "ab", "af", "ak", "sq", "am", "ar", "an", "hy", "as", "av", "ae", "ay", "az", "ba", "bm", "eu", "be", "bn", "bh", "bi", "bs", "br", "bg", "my", "ca", "ch", "ce", "zh", "cc", "cm", "cu", "cv", "kw", "co", "cr", "cs", "da", "dv", "nl", "dz", "ed", "eo", "et", "ee", "fo", "fj", "fil", "fi", "fr", "fy", "ff", "ka", "de", "gd", "ga", "gl", "gv", "el", "gn", "gu", "ht", "ha", "he", "hz", "hl", "hi", "ho", "hr", "hf", "hu", "ig", "is", "io", "ii", "iu", "ie", "ia", "id", "ik", "it", "jv", "ja", "kl", "kn", "ks", "kr", "kk", "km", "ki", "rw", "ky", "kv", "kg", "ko", "kj", "ku", "lo", "la", "lv", "lr", "li", "ln", "lt", "lb", "lu", "lg", "mk", "mh", "ml", "mi", "mr", "ms", "mg", "mt", "mn", "na", "nv", "nr", "nd", "ng", "ne", "nn", "nb", "no", "ny", "oc", "oj", "ryu", "or", "om", "os", "pa", "fa", "pi", "pl", "pt", "ps", "qu", "rm", "ro", "rn", "ru", "sg", "sa", "si", "sk", "sl", "se", "sm", "sn", "sd", "so", "st", "sc", "sr", "ss", "sp", "su", "sw", "sv", "sy", "ty", "ta", "tt", "te", "tg", "tl", "th", "bo", "ti", "to", "tn", "ts", "tk", "tr", "tw", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "cy", "wa", "wo", "xh", "yi", "yo", "za", "zu"];
                    readonly type: "string";
                };
                readonly default: readonly [];
            };
            readonly primary_specialty: {
                readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly secondary_specialty: {
                readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly cv_url: {
                readonly type: readonly ["string", "null"];
                readonly format: "uri";
                readonly maxLength: 200;
            };
            readonly diploma_url: {
                readonly type: readonly ["string", "null"];
                readonly format: "uri";
                readonly maxLength: 200;
            };
            readonly using_fcvs: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly birth_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly birth_state: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 24;
            };
            readonly birth_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly birth_country_other: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly work_history_gaps: {
                readonly type: readonly ["string", "null"];
            };
            readonly credentialing_status: {
                readonly enum: readonly ["in_progress", "approved", "not_requested"];
                readonly type: "string";
            };
            readonly credentialing_committee_status: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly us_graduated: {
                readonly type: "boolean";
            };
            readonly esignature_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly esignature_consent: {
                readonly type: "boolean";
            };
            readonly caqh_esignature_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly caqh_esignature_consent: {
                readonly type: "boolean";
            };
            readonly onboarding_consent: {
                readonly type: "boolean";
            };
            readonly caqh_number: {
                readonly type: "string";
                readonly maxLength: 24;
            };
            readonly employment_title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly percent_complete: {
                readonly type: "integer";
                readonly maximum: 32767;
                readonly minimum: 0;
            };
            readonly percent_complete_last_checked: {
                readonly type: readonly ["string", "null"];
                readonly format: "date-time";
            };
            readonly secondary_contact_email: {
                readonly type: "string";
                readonly format: "email";
                readonly maxLength: 255;
            };
            readonly personal_website: {
                readonly type: readonly ["string", "null"];
                readonly pattern: ".+\\..+";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly termination_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly employment_offer_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly caqh_attestation_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly caqh_profile: {
                readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly medallion_email: {
                readonly type: readonly ["string", "null"];
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly behavioral_health_expertises: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["add_adhd", "alcohol_substance_use_disorders", "anger_stress_management", "anxiety_and_panic_disorders", "autism_and_autism_spectrum_disorders", "bariatric_weight_loss_surgery_evaluation_and_counseling", "bipolar_other_mood_disorders", "chronic_illness_chronic_pain", "conversion_disorder", "cultural_ethnic_issues", "depression", "dialectical_behvaioral_therapy", "dissociative_identity_disorder", "domestic_violence_and_abuse", "eating_disorders", "end_of_life_issues", "gambling_disorder", "gender_reassignment_counseling", "geriatric_issues_dementia_cognitive_impairment", "grief_bereavement", "hiv_aids_related_issues", "infertility_fertility_counseling", "lgbtq2_issues", "obsessive_compulsive_disorders", "occupational_therapy", "pain_management", "personality_disorders", "phobias", "pregnancy_menopause", "relationship_separation_divorce_issues", "schizophrenic_disorders", "sexual_disorders_dysfunctions_compulsions", "sleep_disorders", "survivor_counseling_rape_and_violent_crime", "trauma_post_traumatic_stress", "speech_language"];
                    readonly type: "string";
                };
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly primary_board_certification: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly profile_completion_state: {
                readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                readonly type: "string";
            };
            readonly employment_type: {
                readonly enum: readonly ["full_time", "part_time", "contractor", "privileged", "prn", "intern", "ptl", "ssnl", "temp", "agency", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly employee_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly employee_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly metadata_s1: {
                readonly type: readonly ["string", "null"];
                readonly description: "Additional string field for provider metadata";
                readonly maxLength: 255;
            };
            readonly metadata_s2: {
                readonly type: readonly ["string", "null"];
                readonly description: "Additional string field for provider metadata";
                readonly maxLength: 255;
            };
            readonly metadata_s3: {
                readonly type: readonly ["string", "null"];
                readonly description: "Additional string field for provider metadata";
                readonly maxLength: 255;
            };
            readonly metadata_n1: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "Additional integer field for provider metadata";
            };
            readonly metadata_n2: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "Additional integer field for provider metadata";
            };
            readonly metadata_n3: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 2147483647;
                readonly minimum: -2147483648;
                readonly description: "Additional integer field for provider metadata";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly user: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "integer";
                            readonly readOnly: true;
                        };
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                            readonly readOnly: true;
                            readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                        };
                        readonly picture: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly is_staff: {
                            readonly type: "boolean";
                            readonly description: "Designates whether the user can log into this admin site.";
                        };
                        readonly date_joined: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly is_sso: {
                            readonly type: "boolean";
                            readonly readOnly: true;
                        };
                        readonly is_pii_access_restricted: {
                            readonly type: "boolean";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                    readonly description: "";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly middle_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly preferred_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly full_name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly profession: {
                    readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                    readonly type: "string";
                    readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                };
                readonly states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly suffix: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly age: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly height: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly preferred_pronoun: {
                    readonly enum: readonly ["he_him", "she_her", "they_them", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`he_him` `she_her` `they_them`";
                };
                readonly gender: {
                    readonly enum: readonly ["male", "female", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`male` `female`";
                };
                readonly ethnicity: {
                    readonly enum: readonly ["hispanic_latino", "not_hispanic_latino", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`hispanic_latino` `not_hispanic_latino`";
                };
                readonly race: {
                    readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`american_indian_or_alaska_native` `asian` `black_or_african_american` `native_hawaiian_or_other_pacific_islander` `white_caucasian` `other` `prefer_not_to_say`";
                };
                readonly race_selections: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", ""];
                        readonly type: "string";
                        readonly description: "`american_indian_or_alaska_native` `asian` `black_or_african_american` `native_hawaiian_or_other_pacific_islander` `white_caucasian` `other` `prefer_not_to_say`";
                    };
                };
                readonly date_of_birth: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly us_citizen: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_ages_from: {
                    readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                };
                readonly accepting_ages_to: {
                    readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                };
                readonly is_solo_provider: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly medicare_ptan: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly primary_care_type: {
                    readonly enum: readonly ["primary_care_manager", "primary_care_specialist", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary_care_manager` `primary_care_specialist`";
                };
                readonly is_hospital_based_provider: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly hospital_affiliation: {
                    readonly type: "string";
                };
                readonly hospital_affiliation_names: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly maxLength: 255;
                    };
                };
                readonly practice_restrictions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly is_prescribing: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_dea_eligable: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly has_dea_certificate: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly how_are_controlled_substances_handled_description: {
                    readonly type: readonly ["string", "null"];
                };
                readonly has_collaborative_agreements: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly has_ce_tracking: {
                    readonly type: "boolean";
                };
                readonly is_nlc_active: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_imlc_active: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_imlc_eligible: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly loq_status: {
                    readonly enum: readonly ["active", "inactive", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive` `in_process`";
                };
                readonly loq_spl: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly primary_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly dea_waiver: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ssn_masked: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly primary_phone: {
                    readonly type: readonly ["string", "null"];
                };
                readonly communication_preference: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["EMAIL", "PHONE", "TEXT"];
                        readonly type: "string";
                        readonly description: "`EMAIL` `PHONE` `TEXT`";
                    };
                    readonly default: readonly [];
                };
                readonly work_phone: {
                    readonly type: readonly ["string", "null"];
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 9223372036854776000;
                    readonly minimum: -9223372036854776000;
                    readonly format: "int64";
                };
                readonly primary_taxonomy: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly secondary_taxonomy: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly additional_taxonomies: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                        readonly type: "string";
                        readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                    };
                    readonly default: readonly [];
                };
                readonly fluent_languages: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["en", "es", "01", "aa", "ab", "af", "ak", "sq", "am", "ar", "an", "hy", "as", "av", "ae", "ay", "az", "ba", "bm", "eu", "be", "bn", "bh", "bi", "bs", "br", "bg", "my", "ca", "ch", "ce", "zh", "cc", "cm", "cu", "cv", "kw", "co", "cr", "cs", "da", "dv", "nl", "dz", "ed", "eo", "et", "ee", "fo", "fj", "fil", "fi", "fr", "fy", "ff", "ka", "de", "gd", "ga", "gl", "gv", "el", "gn", "gu", "ht", "ha", "he", "hz", "hl", "hi", "ho", "hr", "hf", "hu", "ig", "is", "io", "ii", "iu", "ie", "ia", "id", "ik", "it", "jv", "ja", "kl", "kn", "ks", "kr", "kk", "km", "ki", "rw", "ky", "kv", "kg", "ko", "kj", "ku", "lo", "la", "lv", "lr", "li", "ln", "lt", "lb", "lu", "lg", "mk", "mh", "ml", "mi", "mr", "ms", "mg", "mt", "mn", "na", "nv", "nr", "nd", "ng", "ne", "nn", "nb", "no", "ny", "oc", "oj", "ryu", "or", "om", "os", "pa", "fa", "pi", "pl", "pt", "ps", "qu", "rm", "ro", "rn", "ru", "sg", "sa", "si", "sk", "sl", "se", "sm", "sn", "sd", "so", "st", "sc", "sr", "ss", "sp", "su", "sw", "sv", "sy", "ty", "ta", "tt", "te", "tg", "tl", "th", "bo", "ti", "to", "tn", "ts", "tk", "tr", "tw", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "cy", "wa", "wo", "xh", "yi", "yo", "za", "zu"];
                        readonly type: "string";
                        readonly description: "`en` `es` `01` `aa` `ab` `af` `ak` `sq` `am` `ar` `an` `hy` `as` `av` `ae` `ay` `az` `ba` `bm` `eu` `be` `bn` `bh` `bi` `bs` `br` `bg` `my` `ca` `ch` `ce` `zh` `cc` `cm` `cu` `cv` `kw` `co` `cr` `cs` `da` `dv` `nl` `dz` `ed` `eo` `et` `ee` `fo` `fj` `fil` `fi` `fr` `fy` `ff` `ka` `de` `gd` `ga` `gl` `gv` `el` `gn` `gu` `ht` `ha` `he` `hz` `hl` `hi` `ho` `hr` `hf` `hu` `ig` `is` `io` `ii` `iu` `ie` `ia` `id` `ik` `it` `jv` `ja` `kl` `kn` `ks` `kr` `kk` `km` `ki` `rw` `ky` `kv` `kg` `ko` `kj` `ku` `lo` `la` `lv` `lr` `li` `ln` `lt` `lb` `lu` `lg` `mk` `mh` `ml` `mi` `mr` `ms` `mg` `mt` `mn` `na` `nv` `nr` `nd` `ng` `ne` `nn` `nb` `no` `ny` `oc` `oj` `ryu` `or` `om` `os` `pa` `fa` `pi` `pl` `pt` `ps` `qu` `rm` `ro` `rn` `ru` `sg` `sa` `si` `sk` `sl` `se` `sm` `sn` `sd` `so` `st` `sc` `sr` `ss` `sp` `su` `sw` `sv` `sy` `ty` `ta` `tt` `te` `tg` `tl` `th` `bo` `ti` `to` `tn` `ts` `tk` `tr` `tw` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `cy` `wa` `wo` `xh` `yi` `yo` `za` `zu`";
                    };
                    readonly default: readonly [];
                };
                readonly primary_specialty: {
                    readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                };
                readonly secondary_specialty: {
                    readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                };
                readonly cv_url: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly maxLength: 200;
                };
                readonly diploma_url: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly maxLength: 200;
                };
                readonly using_fcvs: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly birth_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly birth_state: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 24;
                };
                readonly birth_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly birth_country_other: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly work_history_gaps: {
                    readonly type: readonly ["string", "null"];
                };
                readonly initial_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                    readonly description: "Date of initial/first-known credentialing request approved for provider";
                };
                readonly latest_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                    readonly description: "Date of last credentialing request approved for provider";
                };
                readonly credentialing_status: {
                    readonly enum: readonly ["in_progress", "approved", "not_requested"];
                    readonly type: "string";
                    readonly description: "`in_progress` `approved` `not_requested`";
                };
                readonly credentialing_committee: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly initialcredentialingservicerequest: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly recredentialingservicerequest: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly credentialing_committee: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly credentialing_committee_details: {
                            readonly type: "object";
                            readonly required: readonly ["id", "members", "name"];
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly maxLength: 265;
                                };
                                readonly members: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                        readonly description: "";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "integer";
                                                readonly readOnly: true;
                                            };
                                            readonly email: {
                                                readonly type: "string";
                                                readonly format: "email";
                                                readonly readOnly: true;
                                                readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                            };
                                            readonly picture: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly is_staff: {
                                                readonly type: "boolean";
                                                readonly description: "Designates whether the user can log into this admin site.";
                                            };
                                            readonly date_joined: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "date-time";
                                            };
                                            readonly is_sso: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                            readonly is_pii_access_restricted: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                };
                                readonly is_default_committee: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly provider: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly created: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly status: {
                            readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                            readonly type: "string";
                            readonly readOnly: true;
                            readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                        };
                        readonly votes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["approval_request", "created", "id", "voter"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly decision: {
                                        readonly enum: readonly [0, 1, any];
                                        readonly type: readonly ["integer", "null"];
                                        readonly minimum: -2147483648;
                                        readonly maximum: 2147483647;
                                        readonly description: "`1`";
                                    };
                                    readonly result: {
                                        readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                        readonly type: "string";
                                        readonly description: "`approved` `disapproved` `ignored`";
                                    };
                                    readonly voter: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly readOnly: true;
                                    };
                                    readonly approval_request: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly format: "date-time";
                                        readonly readOnly: true;
                                    };
                                    readonly voted_on: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "date-time";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly credentialing_committee_status: {
                    readonly type: "string";
                };
                readonly us_graduated: {
                    readonly type: "boolean";
                };
                readonly esignature_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly esignature_consent: {
                    readonly type: "boolean";
                };
                readonly caqh_esignature_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly caqh_esignature_consent: {
                    readonly type: "boolean";
                };
                readonly onboarding_consent: {
                    readonly type: "boolean";
                };
                readonly caqh_number: {
                    readonly type: "string";
                    readonly maxLength: 24;
                };
                readonly employment_status: {
                    readonly enum: readonly ["active", "inactive", "onboarding"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`active` `inactive` `onboarding`";
                };
                readonly employment_title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly percent_complete: {
                    readonly type: "integer";
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly percent_complete_last_checked: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlicensed_states: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly readOnly: true;
                };
                readonly secondary_contact_email: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 255;
                };
                readonly personal_website: {
                    readonly type: readonly ["string", "null"];
                    readonly pattern: ".+\\..+";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly termination_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly employment_offer_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly caqh_attestation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly caqh_profile: {
                    readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                };
                readonly has_uploaded_resume: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly medallion_email: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly last_updated: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly last_completed: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly remaining_todos: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly attestation: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["created", "format", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly format: {
                            readonly type: readonly ["string", "null"];
                            readonly readOnly: true;
                        };
                        readonly created: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly is_auto_imported: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly link_description: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly behavioral_health_expertises: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["add_adhd", "alcohol_substance_use_disorders", "anger_stress_management", "anxiety_and_panic_disorders", "autism_and_autism_spectrum_disorders", "bariatric_weight_loss_surgery_evaluation_and_counseling", "bipolar_other_mood_disorders", "chronic_illness_chronic_pain", "conversion_disorder", "cultural_ethnic_issues", "depression", "dialectical_behvaioral_therapy", "dissociative_identity_disorder", "domestic_violence_and_abuse", "eating_disorders", "end_of_life_issues", "gambling_disorder", "gender_reassignment_counseling", "geriatric_issues_dementia_cognitive_impairment", "grief_bereavement", "hiv_aids_related_issues", "infertility_fertility_counseling", "lgbtq2_issues", "obsessive_compulsive_disorders", "occupational_therapy", "pain_management", "personality_disorders", "phobias", "pregnancy_menopause", "relationship_separation_divorce_issues", "schizophrenic_disorders", "sexual_disorders_dysfunctions_compulsions", "sleep_disorders", "survivor_counseling_rape_and_violent_crime", "trauma_post_traumatic_stress", "speech_language"];
                        readonly type: "string";
                        readonly description: "`add_adhd` `alcohol_substance_use_disorders` `anger_stress_management` `anxiety_and_panic_disorders` `autism_and_autism_spectrum_disorders` `bariatric_weight_loss_surgery_evaluation_and_counseling` `bipolar_other_mood_disorders` `chronic_illness_chronic_pain` `conversion_disorder` `cultural_ethnic_issues` `depression` `dialectical_behvaioral_therapy` `dissociative_identity_disorder` `domestic_violence_and_abuse` `eating_disorders` `end_of_life_issues` `gambling_disorder` `gender_reassignment_counseling` `geriatric_issues_dementia_cognitive_impairment` `grief_bereavement` `hiv_aids_related_issues` `infertility_fertility_counseling` `lgbtq2_issues` `obsessive_compulsive_disorders` `occupational_therapy` `pain_management` `personality_disorders` `phobias` `pregnancy_menopause` `relationship_separation_divorce_issues` `schizophrenic_disorders` `sexual_disorders_dysfunctions_compulsions` `sleep_disorders` `survivor_counseling_rape_and_violent_crime` `trauma_post_traumatic_stress` `speech_language`";
                    };
                };
                readonly additional_names: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly certifications: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly military_history: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly hospital_affiliations: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly earliest_agreements: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly description: "";
                    readonly properties: {
                        readonly release_form: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly caqh_agreement: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly agreement_to_update: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly attestation: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                };
                readonly primary_board_certification: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly profile_completion_state: {
                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                    readonly type: "string";
                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                };
                readonly employment_type: {
                    readonly enum: readonly ["full_time", "part_time", "contractor", "privileged", "prn", "intern", "ptl", "ssnl", "temp", "agency", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`full_time` `part_time` `contractor` `privileged` `prn` `intern` `ptl` `ssnl` `temp` `agency`";
                };
                readonly employee_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly employee_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly metadata_s1: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_s2: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_s3: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_n1: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly metadata_n2: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly metadata_n3: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["additional_names", "attestation", "certifications", "credentialing_committee", "earliest_agreements", "employment_status", "full_name", "has_uploaded_resume", "hospital_affiliations", "id", "initial_credentialing_date", "is_auto_imported", "last_completed", "last_updated", "latest_credentialing_date", "link_description", "military_history", "notes", "remaining_todos", "ssn_masked", "unlicensed_states"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersRetrieveProviders: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly user: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "integer";
                            readonly readOnly: true;
                        };
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                            readonly readOnly: true;
                            readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                        };
                        readonly picture: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly is_staff: {
                            readonly type: "boolean";
                            readonly description: "Designates whether the user can log into this admin site.";
                        };
                        readonly date_joined: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                        };
                        readonly is_sso: {
                            readonly type: "boolean";
                            readonly readOnly: true;
                        };
                        readonly is_pii_access_restricted: {
                            readonly type: "boolean";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                    readonly description: "";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly middle_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly preferred_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly full_name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly profession: {
                    readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                    readonly type: "string";
                    readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                };
                readonly states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly suffix: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly age: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly height: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly preferred_pronoun: {
                    readonly enum: readonly ["he_him", "she_her", "they_them", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`he_him` `she_her` `they_them`";
                };
                readonly gender: {
                    readonly enum: readonly ["male", "female", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`male` `female`";
                };
                readonly ethnicity: {
                    readonly enum: readonly ["hispanic_latino", "not_hispanic_latino", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`hispanic_latino` `not_hispanic_latino`";
                };
                readonly race: {
                    readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`american_indian_or_alaska_native` `asian` `black_or_african_american` `native_hawaiian_or_other_pacific_islander` `white_caucasian` `other` `prefer_not_to_say`";
                };
                readonly race_selections: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["american_indian_or_alaska_native", "asian", "black_or_african_american", "native_hawaiian_or_other_pacific_islander", "white_caucasian", "other", "prefer_not_to_say", ""];
                        readonly type: "string";
                        readonly description: "`american_indian_or_alaska_native` `asian` `black_or_african_american` `native_hawaiian_or_other_pacific_islander` `white_caucasian` `other` `prefer_not_to_say`";
                    };
                };
                readonly date_of_birth: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly us_citizen: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_ages_from: {
                    readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                };
                readonly accepting_ages_to: {
                    readonly enum: readonly ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "No limit", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`0` `1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11` `12` `13` `14` `15` `16` `17` `18` `19` `20` `21` `22` `23` `24` `25` `26` `27` `28` `29` `30` `31` `32` `33` `34` `35` `36` `37` `38` `39` `40` `41` `42` `43` `44` `45` `46` `47` `48` `49` `50` `51` `52` `53` `54` `55` `56` `57` `58` `59` `60` `61` `62` `63` `64` `65` `66` `67` `68` `69` `70` `71` `72` `73` `74` `75` `76` `77` `78` `79` `80` `81` `82` `83` `84` `85` `86` `87` `88` `89` `90` `91` `92` `93` `94` `95` `96` `97` `98` `99` `100` `No limit`";
                };
                readonly is_solo_provider: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly medicare_ptan: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly primary_care_type: {
                    readonly enum: readonly ["primary_care_manager", "primary_care_specialist", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary_care_manager` `primary_care_specialist`";
                };
                readonly is_hospital_based_provider: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly hospital_affiliation: {
                    readonly type: "string";
                };
                readonly hospital_affiliation_names: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly maxLength: 255;
                    };
                };
                readonly practice_restrictions: {
                    readonly type: readonly ["string", "null"];
                };
                readonly is_prescribing: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_dea_eligable: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly has_dea_certificate: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly how_are_controlled_substances_handled_description: {
                    readonly type: readonly ["string", "null"];
                };
                readonly has_collaborative_agreements: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly has_ce_tracking: {
                    readonly type: "boolean";
                };
                readonly is_nlc_active: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_imlc_active: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_imlc_eligible: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly loq_status: {
                    readonly enum: readonly ["active", "inactive", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive` `in_process`";
                };
                readonly loq_spl: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly loq_issue_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly loq_document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly primary_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly dea_waiver: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ssn_masked: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly primary_phone: {
                    readonly type: readonly ["string", "null"];
                };
                readonly communication_preference: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["EMAIL", "PHONE", "TEXT"];
                        readonly type: "string";
                        readonly description: "`EMAIL` `PHONE` `TEXT`";
                    };
                    readonly default: readonly [];
                };
                readonly work_phone: {
                    readonly type: readonly ["string", "null"];
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 9223372036854776000;
                    readonly minimum: -9223372036854776000;
                    readonly format: "int64";
                };
                readonly primary_taxonomy: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly secondary_taxonomy: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly additional_taxonomies: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "193200000X", "193400000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                        readonly type: "string";
                        readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `193200000X` `193400000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                    };
                    readonly default: readonly [];
                };
                readonly fluent_languages: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["en", "es", "01", "aa", "ab", "af", "ak", "sq", "am", "ar", "an", "hy", "as", "av", "ae", "ay", "az", "ba", "bm", "eu", "be", "bn", "bh", "bi", "bs", "br", "bg", "my", "ca", "ch", "ce", "zh", "cc", "cm", "cu", "cv", "kw", "co", "cr", "cs", "da", "dv", "nl", "dz", "ed", "eo", "et", "ee", "fo", "fj", "fil", "fi", "fr", "fy", "ff", "ka", "de", "gd", "ga", "gl", "gv", "el", "gn", "gu", "ht", "ha", "he", "hz", "hl", "hi", "ho", "hr", "hf", "hu", "ig", "is", "io", "ii", "iu", "ie", "ia", "id", "ik", "it", "jv", "ja", "kl", "kn", "ks", "kr", "kk", "km", "ki", "rw", "ky", "kv", "kg", "ko", "kj", "ku", "lo", "la", "lv", "lr", "li", "ln", "lt", "lb", "lu", "lg", "mk", "mh", "ml", "mi", "mr", "ms", "mg", "mt", "mn", "na", "nv", "nr", "nd", "ng", "ne", "nn", "nb", "no", "ny", "oc", "oj", "ryu", "or", "om", "os", "pa", "fa", "pi", "pl", "pt", "ps", "qu", "rm", "ro", "rn", "ru", "sg", "sa", "si", "sk", "sl", "se", "sm", "sn", "sd", "so", "st", "sc", "sr", "ss", "sp", "su", "sw", "sv", "sy", "ty", "ta", "tt", "te", "tg", "tl", "th", "bo", "ti", "to", "tn", "ts", "tk", "tr", "tw", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "cy", "wa", "wo", "xh", "yi", "yo", "za", "zu"];
                        readonly type: "string";
                        readonly description: "`en` `es` `01` `aa` `ab` `af` `ak` `sq` `am` `ar` `an` `hy` `as` `av` `ae` `ay` `az` `ba` `bm` `eu` `be` `bn` `bh` `bi` `bs` `br` `bg` `my` `ca` `ch` `ce` `zh` `cc` `cm` `cu` `cv` `kw` `co` `cr` `cs` `da` `dv` `nl` `dz` `ed` `eo` `et` `ee` `fo` `fj` `fil` `fi` `fr` `fy` `ff` `ka` `de` `gd` `ga` `gl` `gv` `el` `gn` `gu` `ht` `ha` `he` `hz` `hl` `hi` `ho` `hr` `hf` `hu` `ig` `is` `io` `ii` `iu` `ie` `ia` `id` `ik` `it` `jv` `ja` `kl` `kn` `ks` `kr` `kk` `km` `ki` `rw` `ky` `kv` `kg` `ko` `kj` `ku` `lo` `la` `lv` `lr` `li` `ln` `lt` `lb` `lu` `lg` `mk` `mh` `ml` `mi` `mr` `ms` `mg` `mt` `mn` `na` `nv` `nr` `nd` `ng` `ne` `nn` `nb` `no` `ny` `oc` `oj` `ryu` `or` `om` `os` `pa` `fa` `pi` `pl` `pt` `ps` `qu` `rm` `ro` `rn` `ru` `sg` `sa` `si` `sk` `sl` `se` `sm` `sn` `sd` `so` `st` `sc` `sr` `ss` `sp` `su` `sw` `sv` `sy` `ty` `ta` `tt` `te` `tg` `tl` `th` `bo` `ti` `to` `tn` `ts` `tk` `tr` `tw` `ug` `uk` `ur` `uz` `ve` `vi` `vo` `cy` `wa` `wo` `xh` `yi` `yo` `za` `zu`";
                    };
                    readonly default: readonly [];
                };
                readonly primary_specialty: {
                    readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                };
                readonly secondary_specialty: {
                    readonly enum: readonly ["acupuncture", "addiction", "adolescent_medicine", "applied_behavior_analyst", "adult_intensivist", "allergy", "anesthesia", "athletic_training", "audiology", "bariatric_medicine_surgery", "blood_banking_transfusion_medicine", "brain_injury_medicine", "burn_trauma", "cardiac_catheterization", "cardiology", "cardiovascular_surgery", "clinical", "clinical_biochemical_genetics", "clinical_cardiac_electrophysiology", "clinical_genetics_and_genomics_md", "colon_and_rectal_surgery", "colorectal_surgery", "complex_family_planning", "complex_pediatric_otolaryngology", "congenital_cardiac_surgery", "consultation_liaison_psychiatry", "dermatology", "dietary_&_nutrition", "electrophysiology", "emergency_medicine", "endocrinology", "family_practice", "gastroenterology", "general_surgery", "geriatrics", "gynecologic_oncology", "health_care_administration_leadership_and_management", "hematology_oncology", "hepatobiliary", "hospitalist", "infectious_disease", "internal_medicine", "internal_medicine_critical_care_medicine", "interventional_radiology", "interventional_radiology_and_diagnostic_radiology", "laboratory_genetics_and_genomics", "massage_therapy", "maternal_fetal_medicine", "medical_biochemical_genetics", "medical_genetics", "medical_physics_diagnostic_nuclear_therapeutic", "medical_toxicology", "mental_health", "molecular_genetic_pathology", "neonatology", "nephrology", "neurodevelopmental_disabilities", "neurological_surgery", "neurology_with_special_qualification_in_child_neurology", "neuroradiology", "neurology", "neurosurgery", "neurotology", "nuclear_medicine", "obstetrics_&_gynecology", "occupational_and_environmental_medicine", "occupational_medicine", "occupational_therapy", "ophthalmology", "optometry", "oral_surgery", "orthopedics", "orthopedic_manual_physical_therapy", "orthopaedic_sports_medicine", "orthotics_&_prosthetics", "otolaryngology___head_&_neck_surgery", "pain_management", "palliative_care", "pastoral", "pathology_chemical", "pathology_clinical", "pathology_anatomic", "pathology_forensic", "pathology_medical_microbiology", "pathology_molecular_genetic", "pathology_pediatric", "pediatric_intensivist", "pediatrics", "pediatric_hospital_medicine", "pediatric_surgery", "physical_medicine", "physical_medicine_&_rehabilitation", "physical_therapy", "physician_assistant", "plastic_surgery_within_the_head_and_neck", "plastic_&_reconstructive_surgery", "professional", "podiatric_surgery", "pulmonary_disease", "psychiatry", "pulmonary_medicine", "radiation_oncology", "radiology", "registered_dietitian", "reproductive_endocrinology_and_infertility", "rheumatology", "school", "speech_language_pathology", "spinal_cord_injury_medicine", "sports_medicine", "surgery_of_the_hand", "surgical_oncology", "thoracic_surgery", "transplant_surgery", "undersea_and_hyperbaric_medicine", "urogynecology_and_reconstructive_pelvic_surgery", "urology", "vascular_surgery", "wound_care", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`acupuncture` `addiction` `adolescent_medicine` `applied_behavior_analyst` `adult_intensivist` `allergy` `anesthesia` `athletic_training` `audiology` `bariatric_medicine_surgery` `blood_banking_transfusion_medicine` `brain_injury_medicine` `burn_trauma` `cardiac_catheterization` `cardiology` `cardiovascular_surgery` `clinical` `clinical_biochemical_genetics` `clinical_cardiac_electrophysiology` `clinical_genetics_and_genomics_md` `colon_and_rectal_surgery` `colorectal_surgery` `complex_family_planning` `complex_pediatric_otolaryngology` `congenital_cardiac_surgery` `consultation_liaison_psychiatry` `dermatology` `dietary_&_nutrition` `electrophysiology` `emergency_medicine` `endocrinology` `family_practice` `gastroenterology` `general_surgery` `geriatrics` `gynecologic_oncology` `health_care_administration_leadership_and_management` `hematology_oncology` `hepatobiliary` `hospitalist` `infectious_disease` `internal_medicine` `internal_medicine_critical_care_medicine` `interventional_radiology` `interventional_radiology_and_diagnostic_radiology` `laboratory_genetics_and_genomics` `massage_therapy` `maternal_fetal_medicine` `medical_biochemical_genetics` `medical_genetics` `medical_physics_diagnostic_nuclear_therapeutic` `medical_toxicology` `mental_health` `molecular_genetic_pathology` `neonatology` `nephrology` `neurodevelopmental_disabilities` `neurological_surgery` `neurology_with_special_qualification_in_child_neurology` `neuroradiology` `neurology` `neurosurgery` `neurotology` `nuclear_medicine` `obstetrics_&_gynecology` `occupational_and_environmental_medicine` `occupational_medicine` `occupational_therapy` `ophthalmology` `optometry` `oral_surgery` `orthopedics` `orthopedic_manual_physical_therapy` `orthopaedic_sports_medicine` `orthotics_&_prosthetics` `otolaryngology___head_&_neck_surgery` `pain_management` `palliative_care` `pastoral` `pathology_chemical` `pathology_clinical` `pathology_anatomic` `pathology_forensic` `pathology_medical_microbiology` `pathology_molecular_genetic` `pathology_pediatric` `pediatric_intensivist` `pediatrics` `pediatric_hospital_medicine` `pediatric_surgery` `physical_medicine` `physical_medicine_&_rehabilitation` `physical_therapy` `physician_assistant` `plastic_surgery_within_the_head_and_neck` `plastic_&_reconstructive_surgery` `professional` `podiatric_surgery` `pulmonary_disease` `psychiatry` `pulmonary_medicine` `radiation_oncology` `radiology` `registered_dietitian` `reproductive_endocrinology_and_infertility` `rheumatology` `school` `speech_language_pathology` `spinal_cord_injury_medicine` `sports_medicine` `surgery_of_the_hand` `surgical_oncology` `thoracic_surgery` `transplant_surgery` `undersea_and_hyperbaric_medicine` `urogynecology_and_reconstructive_pelvic_surgery` `urology` `vascular_surgery` `wound_care`";
                };
                readonly cv_url: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly maxLength: 200;
                };
                readonly diploma_url: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly maxLength: 200;
                };
                readonly using_fcvs: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly birth_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly birth_state: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 24;
                };
                readonly birth_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly birth_country_other: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly work_history_gaps: {
                    readonly type: readonly ["string", "null"];
                };
                readonly initial_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                    readonly description: "Date of initial/first-known credentialing request approved for provider";
                };
                readonly latest_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                    readonly description: "Date of last credentialing request approved for provider";
                };
                readonly credentialing_status: {
                    readonly enum: readonly ["in_progress", "approved", "not_requested"];
                    readonly type: "string";
                    readonly description: "`in_progress` `approved` `not_requested`";
                };
                readonly credentialing_committee: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly initialcredentialingservicerequest: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly recredentialingservicerequest: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly credentialing_committee: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly credentialing_committee_details: {
                            readonly type: "object";
                            readonly required: readonly ["id", "members", "name"];
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly maxLength: 265;
                                };
                                readonly members: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                        readonly description: "";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "integer";
                                                readonly readOnly: true;
                                            };
                                            readonly email: {
                                                readonly type: "string";
                                                readonly format: "email";
                                                readonly readOnly: true;
                                                readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                            };
                                            readonly picture: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly is_staff: {
                                                readonly type: "boolean";
                                                readonly description: "Designates whether the user can log into this admin site.";
                                            };
                                            readonly date_joined: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "date-time";
                                            };
                                            readonly is_sso: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                            readonly is_pii_access_restricted: {
                                                readonly type: "boolean";
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                };
                                readonly is_default_committee: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly provider: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uuid";
                        };
                        readonly created: {
                            readonly type: "string";
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly status: {
                            readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                            readonly type: "string";
                            readonly readOnly: true;
                            readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                        };
                        readonly votes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["approval_request", "created", "id", "voter"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly decision: {
                                        readonly enum: readonly [0, 1, any];
                                        readonly type: readonly ["integer", "null"];
                                        readonly minimum: -2147483648;
                                        readonly maximum: 2147483647;
                                        readonly description: "`1`";
                                    };
                                    readonly result: {
                                        readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                        readonly type: "string";
                                        readonly description: "`approved` `disapproved` `ignored`";
                                    };
                                    readonly voter: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly readOnly: true;
                                    };
                                    readonly approval_request: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly created: {
                                        readonly type: "string";
                                        readonly format: "date-time";
                                        readonly readOnly: true;
                                    };
                                    readonly voted_on: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "date-time";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly credentialing_committee_status: {
                    readonly type: "string";
                };
                readonly us_graduated: {
                    readonly type: "boolean";
                };
                readonly esignature_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly esignature_consent: {
                    readonly type: "boolean";
                };
                readonly caqh_esignature_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly caqh_esignature_consent: {
                    readonly type: "boolean";
                };
                readonly onboarding_consent: {
                    readonly type: "boolean";
                };
                readonly caqh_number: {
                    readonly type: "string";
                    readonly maxLength: 24;
                };
                readonly employment_status: {
                    readonly enum: readonly ["active", "inactive", "onboarding"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`active` `inactive` `onboarding`";
                };
                readonly employment_title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly percent_complete: {
                    readonly type: "integer";
                    readonly maximum: 32767;
                    readonly minimum: 0;
                };
                readonly percent_complete_last_checked: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                };
                readonly unlicensed_states: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly readOnly: true;
                };
                readonly secondary_contact_email: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 255;
                };
                readonly personal_website: {
                    readonly type: readonly ["string", "null"];
                    readonly pattern: ".+\\..+";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly termination_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly employment_offer_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly caqh_attestation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly caqh_profile: {
                    readonly enum: readonly ["needs_attention", "in_progress", "verified", "manually_verified", "not_requested", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`needs_attention` `in_progress` `verified` `manually_verified` `not_requested`";
                };
                readonly has_uploaded_resume: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly medallion_email: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly last_updated: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly last_completed: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly remaining_todos: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly attestation: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["created", "format", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly format: {
                            readonly type: readonly ["string", "null"];
                            readonly readOnly: true;
                        };
                        readonly created: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "date-time";
                            readonly readOnly: true;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly is_auto_imported: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly link_description: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly behavioral_health_expertises: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["add_adhd", "alcohol_substance_use_disorders", "anger_stress_management", "anxiety_and_panic_disorders", "autism_and_autism_spectrum_disorders", "bariatric_weight_loss_surgery_evaluation_and_counseling", "bipolar_other_mood_disorders", "chronic_illness_chronic_pain", "conversion_disorder", "cultural_ethnic_issues", "depression", "dialectical_behvaioral_therapy", "dissociative_identity_disorder", "domestic_violence_and_abuse", "eating_disorders", "end_of_life_issues", "gambling_disorder", "gender_reassignment_counseling", "geriatric_issues_dementia_cognitive_impairment", "grief_bereavement", "hiv_aids_related_issues", "infertility_fertility_counseling", "lgbtq2_issues", "obsessive_compulsive_disorders", "occupational_therapy", "pain_management", "personality_disorders", "phobias", "pregnancy_menopause", "relationship_separation_divorce_issues", "schizophrenic_disorders", "sexual_disorders_dysfunctions_compulsions", "sleep_disorders", "survivor_counseling_rape_and_violent_crime", "trauma_post_traumatic_stress", "speech_language"];
                        readonly type: "string";
                        readonly description: "`add_adhd` `alcohol_substance_use_disorders` `anger_stress_management` `anxiety_and_panic_disorders` `autism_and_autism_spectrum_disorders` `bariatric_weight_loss_surgery_evaluation_and_counseling` `bipolar_other_mood_disorders` `chronic_illness_chronic_pain` `conversion_disorder` `cultural_ethnic_issues` `depression` `dialectical_behvaioral_therapy` `dissociative_identity_disorder` `domestic_violence_and_abuse` `eating_disorders` `end_of_life_issues` `gambling_disorder` `gender_reassignment_counseling` `geriatric_issues_dementia_cognitive_impairment` `grief_bereavement` `hiv_aids_related_issues` `infertility_fertility_counseling` `lgbtq2_issues` `obsessive_compulsive_disorders` `occupational_therapy` `pain_management` `personality_disorders` `phobias` `pregnancy_menopause` `relationship_separation_divorce_issues` `schizophrenic_disorders` `sexual_disorders_dysfunctions_compulsions` `sleep_disorders` `survivor_counseling_rape_and_violent_crime` `trauma_post_traumatic_stress` `speech_language`";
                    };
                };
                readonly additional_names: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly certifications: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly military_history: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly hospital_affiliations: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly earliest_agreements: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly description: "";
                    readonly properties: {
                        readonly release_form: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly caqh_agreement: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly agreement_to_update: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                        readonly attestation: {
                            readonly type: "string";
                            readonly format: "date-time";
                        };
                    };
                };
                readonly primary_board_certification: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly profile_completion_state: {
                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                    readonly type: "string";
                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                };
                readonly employment_type: {
                    readonly enum: readonly ["full_time", "part_time", "contractor", "privileged", "prn", "intern", "ptl", "ssnl", "temp", "agency", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`full_time` `part_time` `contractor` `privileged` `prn` `intern` `ptl` `ssnl` `temp` `agency`";
                };
                readonly employee_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly employee_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly metadata_s1: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_s2: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_s3: {
                    readonly type: readonly ["string", "null"];
                    readonly description: "Additional string field for provider metadata";
                    readonly maxLength: 255;
                };
                readonly metadata_n1: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly metadata_n2: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly metadata_n3: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 2147483647;
                    readonly minimum: -2147483648;
                    readonly description: "Additional integer field for provider metadata";
                };
                readonly notes: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["additional_names", "attestation", "certifications", "credentialing_committee", "earliest_agreements", "employment_status", "full_name", "has_uploaded_resume", "hospital_affiliations", "id", "initial_credentialing_date", "is_auto_imported", "last_completed", "last_updated", "latest_credentialing_date", "link_description", "military_history", "notes", "remaining_todos", "ssn_masked", "unlicensed_states"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersStatusRetrieveProviderStatus: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly attestation_signed: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly caqh_profile_update_authorization_signed: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly information_release_authorization_signed: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly medallion_profile_update_agreement_signed: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
                readonly profile_completion_state: {
                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                };
                readonly profile_percent_complete: {
                    readonly type: "integer";
                };
                readonly profile_percent_complete_last_checked: {
                    readonly type: "string";
                    readonly format: "date-time";
                };
                readonly tasks_count: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["attestation_signed", "caqh_profile_update_authorization_signed", "information_release_authorization_signed", "medallion_profile_update_agreement_signed", "profile_completion_state", "profile_percent_complete", "profile_percent_complete_last_checked", "tasks_count"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersSupervisorsCreateSupervisors: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly contact_email: {
                readonly type: "string";
                readonly format: "email";
                readonly maxLength: 255;
            };
            readonly contact_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly supervision_start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly license_npi: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly individual_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly group_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly total_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly collaborative_agreement_status: {
                readonly enum: readonly ["active", "inactive", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_type: {
                readonly enum: readonly ["primary", "backup", "", any];
                readonly type: readonly ["string", "null"];
            };
        };
        readonly required: readonly ["name"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_email: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 255;
                };
                readonly contact_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly license_npi: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly individual_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly group_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly total_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersSupervisorsDestroySupervisors: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersSupervisorsListSupervisors: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly contact_email: {
                                readonly type: "string";
                                readonly format: "email";
                                readonly maxLength: 255;
                            };
                            readonly contact_phone: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly supervision_start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly supervision_end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly supervision_state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly license_state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly license_number: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly license_npi: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly individual_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                            };
                            readonly group_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                            };
                            readonly total_hours: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                            };
                            readonly document: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly collaborative_agreement_status: {
                                readonly enum: readonly ["active", "inactive", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`active` `inactive`";
                            };
                            readonly collaborative_agreement_type: {
                                readonly enum: readonly ["primary", "backup", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`primary` `backup`";
                            };
                        };
                        readonly required: readonly ["id", "name"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersSupervisorsPartialUpdateSupervisors: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly contact_email: {
                readonly type: "string";
                readonly format: "email";
                readonly maxLength: 255;
            };
            readonly contact_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly supervision_start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly supervision_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly license_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly license_npi: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly individual_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly group_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly total_hours: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
            };
            readonly document: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly collaborative_agreement_status: {
                readonly enum: readonly ["active", "inactive", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly collaborative_agreement_type: {
                readonly enum: readonly ["primary", "backup", "", any];
                readonly type: readonly ["string", "null"];
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_email: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 255;
                };
                readonly contact_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly license_npi: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly individual_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly group_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly total_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersSupervisorsRetrieveSupervisors: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this supervision relationship.";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_email: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 255;
                };
                readonly contact_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly supervision_start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly supervision_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly license_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly license_npi: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly individual_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly group_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly total_hours: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,5}(?:\\.\\d{0,2})?$";
                };
                readonly document: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly collaborative_agreement_status: {
                    readonly enum: readonly ["active", "inactive", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`active` `inactive`";
                };
                readonly collaborative_agreement_type: {
                    readonly enum: readonly ["primary", "backup", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`primary` `backup`";
                };
            };
            readonly required: readonly ["id", "name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersTrainingsCreateTrainings: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly program_type: {
                readonly enum: readonly ["fellowship", "internship", "residency"];
                readonly type: "string";
            };
        };
        readonly required: readonly ["program_type"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["fellowship", "internship", "residency"];
                    readonly type: "string";
                    readonly description: "`fellowship` `internship` `residency`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersTrainingsDestroyTrainings: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersTrainingsListTrainings: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly completed_program: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly program_incompletion_reason: {
                    readonly type: readonly ["string", "null"];
                    readonly enum: readonly ["in_process", "incomplete_other", "incomplete_transferred"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly program_type: {
                    readonly type: "string";
                    readonly enum: readonly ["associates", "fellowship", "high_school", "internship", "jd", "masters", "md", "medical_practice", "nursing_graduate_program", "phd", "primary_school", "residency", "undergrad"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly state: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly institution_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly specialty: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly completed_program: {
                                readonly type: "boolean";
                            };
                            readonly ecfmg_certificate: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly secure_content: {
                                        readonly type: readonly ["object", "null"];
                                        readonly readOnly: true;
                                        readonly properties: {
                                            readonly public_id: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly resource_type: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                            readonly url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                            readonly format: {
                                                readonly type: readonly ["string", "null"];
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                    readonly time_limited_url: {
                                        readonly type: readonly ["string", "null"];
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "title"];
                            };
                            readonly ecfmg_identifier: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly program_incompletion_reason: {
                                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                            };
                            readonly program_type: {
                                readonly enum: readonly ["fellowship", "internship", "residency"];
                                readonly type: "string";
                                readonly description: "`fellowship` `internship` `residency`";
                            };
                        };
                        readonly required: readonly ["id", "program_type"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersTrainingsPartialUpdateTrainings: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly completed_program: {
                readonly type: "boolean";
            };
            readonly ecfmg_certificate: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly ecfmg_identifier: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly program_incompletion_reason: {
                readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly program_type: {
                readonly enum: readonly ["fellowship", "internship", "residency"];
                readonly type: "string";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["fellowship", "internship", "residency"];
                    readonly type: "string";
                    readonly description: "`fellowship` `internship` `residency`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersTrainingsRetrieveTrainings: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly completed_program: {
                    readonly type: "boolean";
                };
                readonly ecfmg_certificate: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly secure_content: {
                            readonly type: readonly ["object", "null"];
                            readonly readOnly: true;
                            readonly properties: {
                                readonly public_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly resource_type: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly url: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uri";
                                    readonly readOnly: true;
                                };
                                readonly format: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                            };
                        };
                        readonly time_limited_url: {
                            readonly type: readonly ["string", "null"];
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "title"];
                };
                readonly ecfmg_identifier: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly program_incompletion_reason: {
                    readonly enum: readonly ["incomplete_transferred", "incomplete_other", "in_process", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`incomplete_transferred` `incomplete_other` `in_process`";
                };
                readonly program_type: {
                    readonly enum: readonly ["fellowship", "internship", "residency"];
                    readonly type: "string";
                    readonly description: "`fellowship` `internship` `residency`";
                };
            };
            readonly required: readonly ["id", "program_type"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersWorkExperienceCreateWorkExperience: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly admitting_privileges: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly is_present: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersWorkExperienceDestroyWorkExperience: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
};
declare const ApiV1OrgProvidersWorkExperienceListWorkExperience: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["provider_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly admitting_privileges: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly is_present: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly institution_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly notes: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly admitting_privileges: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly specialty: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly is_present: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersWorkExperiencePartialUpdateWorkExperience: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly institution_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly start_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly notes: {
                readonly type: readonly ["string", "null"];
            };
            readonly country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly state: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly admitting_privileges: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly specialty: {
                readonly type: "string";
                readonly maxLength: 254;
            };
            readonly is_present: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly title: {
                readonly type: "string";
                readonly maxLength: 255;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1OrgProvidersWorkExperienceRetrieveWorkExperience: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "provider_pk"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly institution_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly notes: {
                    readonly type: readonly ["string", "null"];
                };
                readonly country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly state: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly admitting_privileges: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly specialty: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly is_present: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly title: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1StaffServiceRequestsDestroyServiceRequests: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly app_expiration_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Expiration Date";
                };
                readonly app_expiration_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Expiration Date";
                };
                readonly app_sla_seconds: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "number";
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Multiple values may be separated by commas.";
                };
                readonly app_submission_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Submission Date";
                };
                readonly app_submission_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Submission Date";
                };
                readonly approval_request__credentialing_committee__id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly approval_request__decision: {
                    readonly type: "string";
                    readonly enum: readonly ["", "approved", "closed_without_decision", "pending", "rejected"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Credentialing Committee Decision";
                };
                readonly assignment_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly assignment_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly certificate_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD", "dea", "state", "state_controlled"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly completed_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Completed Date";
                };
                readonly completed_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Completed Date";
                };
                readonly coordinator: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly duration_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autonomous_registration", "limited", "multistate", "permanent", "prescriptive_authority", "telemedicine", "temporary", "training"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Duration Type";
                };
                readonly efficiency_level: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly expiration_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Expiration Date";
                };
                readonly expiration_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Expiration Date";
                };
                readonly followup_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Follow-up Date";
                };
                readonly followup_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Follow-up Date";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly intake_complete_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Intake Complete Date";
                };
                readonly intake_complete_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Intake Complete Date";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly last_staff_note_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Last Staff Note Date";
                };
                readonly last_staff_note_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Last Staff Note Date";
                };
                readonly license_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license_state: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly organization: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly organization__has_churned: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly organization__is_demo_account: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider__license_state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "License States";
                };
                readonly provider__percent_complete: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                        readonly enum: readonly ["0_50", "50_70", "70_90", "90_100", "outstanding_tasks"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider__profession: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_id: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly psv_sla_seconds: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "number";
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Multiple values may be separated by commas.";
                };
                readonly psv_submitted_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "PSV Submitted Date";
                };
                readonly psv_submitted_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "PSV Submitted Date";
                };
                readonly requested_by: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly requested_by__email: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly requested_by__name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly resourcetype: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["CAQHManagementRequest", "FacilityDemographicUpdateServiceRequest", "FacilityInitialCredentialingServiceRequest", "FacilityReCredentialingServiceRequest", "FacilityRevalidationServiceRequest", "GroupDemographicUpdateServiceRequest", "GroupRevalidationServiceRequest", "InitialAppointmentServiceRequest", "InitialCredentialingServiceRequest", "IntakeServiceRequest", "LicenseExpirationMonitoringServiceRequest", "LicenseLOQServiceRequest", "LicenseNewServiceRequest", "LicenseReinstatementServiceRequest", "LicenseRenewalServiceRequest", "NewFacilityPayerEnrollmentServiceRequest", "NewGroupPayerEnrollmentServiceRequest", "NewPayerContractServiceRequest", "NewProviderPayerEnrollmentServiceRequest", "ProviderDemographicUpdateServiceRequest", "ProviderRevalidationServiceRequest", "ReCredentialingServiceRequest"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Type";
                };
                readonly rx_authority: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autonomous_registration", "checkbox_selected", "prescriptive_authority", "rx_included"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly sent_to_provider_for_review_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Sent to Provider For Review Date";
                };
                readonly sent_to_provider_for_review_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Sent to Provider For Review Date";
                };
                readonly state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["active", "all_prerequisites_met", "applciation_sent_to_provider_for_review", "application_assigned", "application_in_process_with_state_board", "application_in_progress", "application_qc_completed", "application_qc_required", "application_qc_returned", "application_ready", "application_resubmitted", "application_sent", "application_submitted", "assigned", "backlog", "closed", "completed", "dependencies_met", "enrollment_denied", "enrollment_stopped", "external_block", "follow_up_in_progress", "has_prerequisite_enrollments", "imlc_issued_addendums_required", "in_committee", "in_progress", "inactive", "info_needed_from_provider", "intake", "intake_complete", "intake_in_progress", "intake_on_hold", "intake_over_21_days", "intake_pending_admin", "intake_pending_provider", "intake_prep", "license_issued_pending_qc", "license_issued_qc_failed", "loq_in_process", "on_hold", "panel_closed", "paper_app_mailed_to_provider", "pending", "pending_autonomous_registration", "pending_contract", "pending_csr", "pending_customer_response", "pending_dependencies", "pending_group_enrollment", "pending_imlc_approval", "pending_imlc_loq", "pending_prescriptive_authority", "pending_provider_enrollment", "pending_renewal_window", "pending_rn", "pending_state_license_issuance", "provider_input_requested", "psv_assigned", "psv_pending_provider", "psv_qc_completed", "psv_qc_required", "psv_qc_returned", "psv_request_pending", "psv_review", "psv_submitted", "ready", "ready_for_intake", "ready_for_medallion_review", "renewal_in_process_with_the_board", "requested", "roster_submitted", "scheduled", "sent_request_for_enrollment", "task_over_21_days", "tasks_over_21_days"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly within_app_sla: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["missed_sla", "na", "nearing_sla", "within_sla"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly within_psv_sla: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["missed_sla", "na", "nearing_sla", "within_sla"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
};
declare const ApiV1StaffServiceRequestsDetailDelete: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const ApiV1StaffServiceRequestsListServiceRequests: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly app_expiration_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Expiration Date";
                };
                readonly app_expiration_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Expiration Date";
                };
                readonly app_sla_seconds: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "number";
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Multiple values may be separated by commas.";
                };
                readonly app_submission_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Submission Date";
                };
                readonly app_submission_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Submission Date";
                };
                readonly approval_request__credentialing_committee__id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly approval_request__decision: {
                    readonly type: "string";
                    readonly enum: readonly ["", "approved", "closed_without_decision", "pending", "rejected"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Credentialing Committee Decision";
                };
                readonly assignment_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly assignment_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly certificate_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD", "dea", "state", "state_controlled"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly completed_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Completed Date";
                };
                readonly completed_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Completed Date";
                };
                readonly coordinator: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly duration_type: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autonomous_registration", "limited", "multistate", "permanent", "prescriptive_authority", "telemedicine", "temporary", "training"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Duration Type";
                };
                readonly efficiency_level: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly expiration_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Expiration Date";
                };
                readonly expiration_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Expiration Date";
                };
                readonly followup_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Follow-up Date";
                };
                readonly followup_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Follow-up Date";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly intake_complete_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Intake Complete Date";
                };
                readonly intake_complete_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "App Intake Complete Date";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly last_staff_note_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Last Staff Note Date";
                };
                readonly last_staff_note_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Last Staff Note Date";
                };
                readonly license_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license_number: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license_state: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly organization: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly organization__has_churned: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly organization__is_demo_account: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider__license_state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "License States";
                };
                readonly provider__percent_complete: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                        readonly enum: readonly ["0_50", "50_70", "70_90", "90_100", "outstanding_tasks"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider__profession: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["ACMHC", "ACSW", "ACU", "ALC", "APCC", "APSW", "AT", "ATC", "AUD", "BCBA", "BCaBA", "BHA", "BHARI", "CCS", "CISW", "CMHC", "CMSW", "CNM", "COTA", "COUNSELOR", "CP-A", "CRNA", "CSW", "CSW-PIP", "DA", "DC", "DDS", "DEH", "DMD", "DO", "DPM", "DPT", "DT", "EMR", "EMT", "EMT-A", "FITNESS-PROFESSI", "ISW", "LAC", "LACMH", "LADC", "LAPC", "LASW", "LAc", "LCADC", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LCSW-C", "LCSWA", "LGPC", "LGSW", "LICSW", "LIMHP", "LIMHP-CMSW", "LIMHP-CPC", "LIMHP-CSW", "LISW", "LISW-CP", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMHCA", "LMPC", "LMSW", "LMT", "LN", "LPC", "LPC-C", "LPC-MH", "LPC/MHSP", "LPCA", "LPCC", "LPCI", "LPCMH", "LPN", "LSCSW", "LSW", "LVN", "MA", "MD", "MFTA", "MHCA", "MHT", "MLADC", "MLSW", "MLT", "MOT", "MPT", "MT", "MT-BC", "ND", "NMT", "NP", "OD", "OMS", "OPA", "OPT", "OPTHAMOLOGIST", "ORT", "ORTH", "OT", "OTA", "OTD", "OTHER", "OTHER-ALLIED-HEA", "OTR/L", "PA", "PAR", "PBT", "PHARMACY-ASSISTA", "PI", "PMHNP", "PODIATRIC-ASSIST", "PT", "PTA", "PhD", "PhT", "PsyD", "RADIOLOGY-TECH", "RBT", "RCSWI", "RD", "RDN", "RHMCI", "RN", "RNFA", "RPh", "RT", "SLP", "SLP-CF", "SLPA", "SLPD"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider_id: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly psv_sla_seconds: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "number";
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Multiple values may be separated by commas.";
                };
                readonly psv_submitted_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "PSV Submitted Date";
                };
                readonly psv_submitted_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "PSV Submitted Date";
                };
                readonly requested_by: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly requested_by__email: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly requested_by__name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly resourcetype: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["CAQHManagementRequest", "FacilityDemographicUpdateServiceRequest", "FacilityInitialCredentialingServiceRequest", "FacilityReCredentialingServiceRequest", "FacilityRevalidationServiceRequest", "GroupDemographicUpdateServiceRequest", "GroupRevalidationServiceRequest", "InitialAppointmentServiceRequest", "InitialCredentialingServiceRequest", "IntakeServiceRequest", "LicenseExpirationMonitoringServiceRequest", "LicenseLOQServiceRequest", "LicenseNewServiceRequest", "LicenseReinstatementServiceRequest", "LicenseRenewalServiceRequest", "NewFacilityPayerEnrollmentServiceRequest", "NewGroupPayerEnrollmentServiceRequest", "NewPayerContractServiceRequest", "NewProviderPayerEnrollmentServiceRequest", "ProviderDemographicUpdateServiceRequest", "ProviderRevalidationServiceRequest", "ReCredentialingServiceRequest"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Type";
                };
                readonly rx_authority: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["autonomous_registration", "checkbox_selected", "prescriptive_authority", "rx_included"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly sent_to_provider_for_review_date_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Sent to Provider For Review Date";
                };
                readonly sent_to_provider_for_review_date_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Sent to Provider For Review Date";
                };
                readonly state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly status: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["active", "all_prerequisites_met", "applciation_sent_to_provider_for_review", "application_assigned", "application_in_process_with_state_board", "application_in_progress", "application_qc_completed", "application_qc_required", "application_qc_returned", "application_ready", "application_resubmitted", "application_sent", "application_submitted", "assigned", "backlog", "closed", "completed", "dependencies_met", "enrollment_denied", "enrollment_stopped", "external_block", "follow_up_in_progress", "has_prerequisite_enrollments", "imlc_issued_addendums_required", "in_committee", "in_progress", "inactive", "info_needed_from_provider", "intake", "intake_complete", "intake_in_progress", "intake_on_hold", "intake_over_21_days", "intake_pending_admin", "intake_pending_provider", "intake_prep", "license_issued_pending_qc", "license_issued_qc_failed", "loq_in_process", "on_hold", "panel_closed", "paper_app_mailed_to_provider", "pending", "pending_autonomous_registration", "pending_contract", "pending_csr", "pending_customer_response", "pending_dependencies", "pending_group_enrollment", "pending_imlc_approval", "pending_imlc_loq", "pending_prescriptive_authority", "pending_provider_enrollment", "pending_renewal_window", "pending_rn", "pending_state_license_issuance", "provider_input_requested", "psv_assigned", "psv_pending_provider", "psv_qc_completed", "psv_qc_required", "psv_qc_returned", "psv_request_pending", "psv_review", "psv_submitted", "ready", "ready_for_intake", "ready_for_medallion_review", "renewal_in_process_with_the_board", "requested", "roster_submitted", "scheduled", "sent_request_for_enrollment", "task_over_21_days", "tasks_over_21_days"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly within_app_sla: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["missed_sla", "na", "nearing_sla", "within_sla"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly within_psv_sla: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["missed_sla", "na", "nearing_sla", "within_sla"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                                readonly certificate_type: {
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly duration_type: {
                                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                                    readonly type: "string";
                                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                                };
                                readonly registration: {
                                    readonly enum: readonly ["state", "dea", "state_controlled"];
                                    readonly type: "string";
                                    readonly description: "`state` `dea` `state_controlled`";
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_resubmission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly using_compact: {
                                    readonly type: "boolean";
                                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                                };
                                readonly is_spl: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                                };
                                readonly app_expiration_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly sent_to_provider_for_review_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly psv_submitted_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly completed_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly rx_authority: {
                                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                                    readonly type: "string";
                                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                                };
                                readonly licensing_info: {
                                    readonly type: readonly ["object", "null"];
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly compact: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["compact", "id"];
                                    readonly readOnly: true;
                                };
                                readonly app_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly psv_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly organization_profile_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly business_days_since_app_submitted: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly text: {
                                    readonly type: "string";
                                };
                                readonly is_public: {
                                    readonly type: "boolean";
                                };
                                readonly recipients: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "integer";
                                    };
                                };
                                readonly should_auto_renew: {
                                    readonly type: "boolean";
                                };
                                readonly organization_auto_pilot_status: {
                                    readonly enum: readonly ["all", "opt_in", "none"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`all` `opt_in` `none`";
                                };
                            };
                            readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_auto_pilot_status", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                                readonly certificate_type: {
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly duration_type: {
                                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                                    readonly type: "string";
                                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                                };
                                readonly registration: {
                                    readonly enum: readonly ["state", "dea", "state_controlled"];
                                    readonly type: "string";
                                    readonly description: "`state` `dea` `state_controlled`";
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_resubmission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly using_compact: {
                                    readonly type: "boolean";
                                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                                };
                                readonly is_spl: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                                };
                                readonly app_expiration_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly sent_to_provider_for_review_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly psv_submitted_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly completed_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly rx_authority: {
                                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                                    readonly type: "string";
                                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                                };
                                readonly licensing_info: {
                                    readonly type: readonly ["object", "null"];
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly compact: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["compact", "id"];
                                    readonly readOnly: true;
                                };
                                readonly app_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly psv_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly organization_profile_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly business_days_since_app_submitted: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly text: {
                                    readonly type: "string";
                                };
                                readonly is_public: {
                                    readonly type: "boolean";
                                };
                                readonly recipients: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "integer";
                                    };
                                };
                            };
                            readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                                readonly certificate_type: {
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly duration_type: {
                                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                                    readonly type: "string";
                                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                                };
                                readonly registration: {
                                    readonly enum: readonly ["state", "dea", "state_controlled"];
                                    readonly type: "string";
                                    readonly description: "`state` `dea` `state_controlled`";
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_resubmission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly using_compact: {
                                    readonly type: "boolean";
                                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                                };
                                readonly is_spl: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                                };
                                readonly app_expiration_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly sent_to_provider_for_review_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly psv_submitted_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly completed_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly rx_authority: {
                                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                                    readonly type: "string";
                                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                                };
                                readonly licensing_info: {
                                    readonly type: readonly ["object", "null"];
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly compact: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["compact", "id"];
                                    readonly readOnly: true;
                                };
                                readonly app_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly psv_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly organization_profile_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly business_days_since_app_submitted: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly text: {
                                    readonly type: "string";
                                };
                                readonly is_public: {
                                    readonly type: "boolean";
                                };
                                readonly recipients: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "integer";
                                    };
                                };
                                readonly license_number: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly issue_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly expiration_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                            };
                            readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                };
                                readonly certificate_type: {
                                    readonly type: readonly ["string", "null"];
                                };
                                readonly duration_type: {
                                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                                    readonly type: "string";
                                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                                };
                                readonly registration: {
                                    readonly enum: readonly ["state", "dea", "state_controlled"];
                                    readonly type: "string";
                                    readonly description: "`state` `dea` `state_controlled`";
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_resubmission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly using_compact: {
                                    readonly type: "boolean";
                                    readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                                };
                                readonly is_spl: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                                };
                                readonly app_expiration_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly sent_to_provider_for_review_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly psv_submitted_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly completed_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly rx_authority: {
                                    readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                                    readonly type: "string";
                                    readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                                };
                                readonly licensing_info: {
                                    readonly type: readonly ["object", "null"];
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly compact: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["compact", "id"];
                                    readonly readOnly: true;
                                };
                                readonly app_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly psv_sla_seconds: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly organization_profile_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly business_days_since_app_submitted: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly text: {
                                    readonly type: "string";
                                };
                                readonly is_public: {
                                    readonly type: "boolean";
                                };
                                readonly recipients: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "integer";
                                    };
                                };
                            };
                            readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "intake_msa_hold", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `intake_msa_hold`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly text: {
                                    readonly type: "string";
                                };
                                readonly is_public: {
                                    readonly type: "boolean";
                                };
                                readonly recipients: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "integer";
                                    };
                                };
                                readonly oldest_request: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly newest_request: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly last_intake: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly description: "When latest intake request became completed?";
                                };
                                readonly provider__profession: {
                                    readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                                };
                                readonly related_license_count: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly related_license_intake_complete_count: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly related_loq_license_count: {
                                    readonly type: "integer";
                                    readonly maximum: 2147483647;
                                    readonly minimum: 0;
                                };
                                readonly related_loq_license_intake_complete_count: {
                                    readonly type: "integer";
                                    readonly maximum: 2147483647;
                                    readonly minimum: 0;
                                };
                                readonly related_payor_enrollments_count: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly related_payor_enrollments_intake_complete_count: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly related_new_license_requests: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly readOnly: true;
                                };
                                readonly related_loq_requests: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly readOnly: true;
                                };
                                readonly related_payer_enrollment_requests: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly readOnly: true;
                                };
                                readonly last_login: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["id", "last_login", "name", "organization_name", "percent_complete", "profile_completion_state", "provider__profession", "related_loq_requests", "related_new_license_requests", "related_payer_enrollment_requests", "remaining_todos"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "in_progress", "ready", "in_committee", "closed", "scheduled", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `in_progress` `ready` `in_committee` `closed` `scheduled`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly transition_status: {
                                    readonly enum: readonly ["processing", "done", "failed", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`processing` `done` `failed`";
                                };
                                readonly transition_error: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly credentialing_file: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly approval_request: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly initialcredentialingservicerequest: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly recredentialingservicerequest: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly credentialing_committee: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly credentialing_committee_details: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                    readonly readOnly: true;
                                                };
                                                readonly name: {
                                                    readonly type: "string";
                                                    readonly maxLength: 265;
                                                };
                                                readonly members: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly type: "integer";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly email: {
                                                                readonly type: "string";
                                                                readonly format: "email";
                                                                readonly readOnly: true;
                                                                readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                                            };
                                                            readonly picture: {
                                                                readonly type: "string";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly maxLength: 255;
                                                            };
                                                            readonly is_staff: {
                                                                readonly type: "boolean";
                                                                readonly description: "Designates whether the user can log into this admin site.";
                                                            };
                                                            readonly date_joined: {
                                                                readonly type: readonly ["string", "null"];
                                                                readonly format: "date-time";
                                                            };
                                                            readonly is_sso: {
                                                                readonly type: "boolean";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly is_pii_access_restricted: {
                                                                readonly type: "boolean";
                                                                readonly readOnly: true;
                                                            };
                                                        };
                                                        readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                                        readonly description: "";
                                                    };
                                                };
                                                readonly is_default_committee: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                            readonly required: readonly ["id", "members", "name"];
                                            readonly description: "";
                                        };
                                        readonly provider: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly format: "date-time";
                                            readonly readOnly: true;
                                        };
                                        readonly status: {
                                            readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                                        };
                                        readonly votes: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly format: "uuid";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly decision: {
                                                        readonly enum: readonly [0, 1, any];
                                                        readonly type: readonly ["integer", "null"];
                                                        readonly minimum: -2147483648;
                                                        readonly maximum: 2147483647;
                                                        readonly description: "`1`";
                                                    };
                                                    readonly result: {
                                                        readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                                        readonly type: "string";
                                                        readonly description: "`approved` `disapproved` `ignored`";
                                                    };
                                                    readonly voter: {
                                                        readonly type: readonly ["integer", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly approval_request: {
                                                        readonly type: "string";
                                                        readonly format: "uuid";
                                                    };
                                                    readonly created: {
                                                        readonly type: "string";
                                                        readonly format: "date-time";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly voted_on: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly format: "date-time";
                                                    };
                                                };
                                                readonly required: readonly ["approval_request", "created", "id", "voter"];
                                                readonly description: "";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                                    readonly description: "";
                                };
                                readonly application_completed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly credentials_ready_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly closed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                            };
                            readonly required: readonly ["credentialing_file", "id", "name", "organization_name", "percent_complete", "profile_completion_state", "remaining_todos"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "in_progress", "ready", "in_committee", "closed", "scheduled", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`requested` `in_progress` `ready` `in_committee` `closed` `scheduled`";
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly requested_by: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly percent_complete: {
                                    readonly type: readonly ["integer", "null"];
                                    readonly readOnly: true;
                                };
                                readonly profile_completion_state: {
                                    readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                                };
                                readonly remaining_todos: {
                                    readonly oneOf: readonly [{
                                        readonly type: "boolean";
                                    }, {
                                        readonly type: "integer";
                                    }];
                                    readonly readOnly: true;
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly organization_name: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly coordinator: {
                                    readonly type: readonly ["integer", "null"];
                                };
                                readonly assignment_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly followup_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                };
                                readonly last_staff_note_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly efficiency_level: {
                                    readonly type: "integer";
                                    readonly maximum: 32767;
                                    readonly minimum: 0;
                                };
                                readonly efficiency_violations: {
                                    readonly type: readonly ["array", "null"];
                                    readonly items: {
                                        readonly type: "string";
                                        readonly maxLength: 254;
                                    };
                                };
                                readonly efficiency_last_checked: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                };
                                readonly transition_status: {
                                    readonly enum: readonly ["processing", "done", "failed", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`processing` `done` `failed`";
                                };
                                readonly transition_error: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly credentialing_file: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly approval_request: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly initialcredentialingservicerequest: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly recredentialingservicerequest: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly credentialing_committee: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly credentialing_committee_details: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                    readonly readOnly: true;
                                                };
                                                readonly name: {
                                                    readonly type: "string";
                                                    readonly maxLength: 265;
                                                };
                                                readonly members: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly type: "integer";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly email: {
                                                                readonly type: "string";
                                                                readonly format: "email";
                                                                readonly readOnly: true;
                                                                readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                                            };
                                                            readonly picture: {
                                                                readonly type: "string";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly name: {
                                                                readonly type: "string";
                                                                readonly maxLength: 255;
                                                            };
                                                            readonly is_staff: {
                                                                readonly type: "boolean";
                                                                readonly description: "Designates whether the user can log into this admin site.";
                                                            };
                                                            readonly date_joined: {
                                                                readonly type: readonly ["string", "null"];
                                                                readonly format: "date-time";
                                                            };
                                                            readonly is_sso: {
                                                                readonly type: "boolean";
                                                                readonly readOnly: true;
                                                            };
                                                            readonly is_pii_access_restricted: {
                                                                readonly type: "boolean";
                                                                readonly readOnly: true;
                                                            };
                                                        };
                                                        readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                                        readonly description: "";
                                                    };
                                                };
                                                readonly is_default_committee: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                            readonly required: readonly ["id", "members", "name"];
                                            readonly description: "";
                                        };
                                        readonly provider: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "uuid";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly format: "date-time";
                                            readonly readOnly: true;
                                        };
                                        readonly status: {
                                            readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                                        };
                                        readonly votes: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly format: "uuid";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly decision: {
                                                        readonly enum: readonly [0, 1, any];
                                                        readonly type: readonly ["integer", "null"];
                                                        readonly minimum: -2147483648;
                                                        readonly maximum: 2147483647;
                                                        readonly description: "`1`";
                                                    };
                                                    readonly result: {
                                                        readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                                        readonly type: "string";
                                                        readonly description: "`approved` `disapproved` `ignored`";
                                                    };
                                                    readonly voter: {
                                                        readonly type: readonly ["integer", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly approval_request: {
                                                        readonly type: "string";
                                                        readonly format: "uuid";
                                                    };
                                                    readonly created: {
                                                        readonly type: "string";
                                                        readonly format: "date-time";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly voted_on: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly format: "date-time";
                                                    };
                                                };
                                                readonly required: readonly ["approval_request", "created", "id", "voter"];
                                                readonly description: "";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                                    readonly description: "";
                                };
                                readonly application_completed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly credentials_ready_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly closed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly recredentialing_deadline: {
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                                readonly recredentialing_start_date: {
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                            };
                            readonly required: readonly ["credentialing_file", "id", "name", "organization_name", "percent_complete", "profile_completion_state", "recredentialing_deadline", "recredentialing_start_date", "remaining_todos"];
                            readonly description: "";
                        }];
                        readonly discriminator: {
                            readonly propertyName: "resourcetype";
                            readonly mapping: {
                                readonly LicenseNewServiceRequest: "#/components/schemas/LicenseNewServiceRequestSerializerV1";
                                readonly LicenseReinstatementServiceRequest: "#/components/schemas/LicenseReinstatementServiceRequestSerializerrV1";
                                readonly LicenseRenewalServiceRequest: "#/components/schemas/LicenseRenewalServiceRequestSerializerV1";
                                readonly LicenseLOQServiceRequest: "#/components/schemas/LicenseLOQServiceRequestSerializerV1";
                                readonly IntakeServiceRequest: "#/components/schemas/IntakeServiceRequestSerializerV1";
                                readonly InitialCredentialingServiceRequest: "#/components/schemas/InitialCredentialingServiceRequestSerializerV1";
                                readonly ReCredentialingServiceRequest: "#/components/schemas/ReCredentialingServiceRequestSerializerV1";
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ApiV1StaffServiceRequestsRetrieveServiceRequests: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                    readonly certificate_type: {
                        readonly type: readonly ["string", "null"];
                    };
                    readonly duration_type: {
                        readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                        readonly type: "string";
                        readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                    };
                    readonly registration: {
                        readonly enum: readonly ["state", "dea", "state_controlled"];
                        readonly type: "string";
                        readonly description: "`state` `dea` `state_controlled`";
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_resubmission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly using_compact: {
                        readonly type: "boolean";
                        readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                    };
                    readonly is_spl: {
                        readonly type: readonly ["boolean", "null"];
                        readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                    };
                    readonly app_expiration_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly sent_to_provider_for_review_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly psv_submitted_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly completed_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly rx_authority: {
                        readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                        readonly type: "string";
                        readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                    };
                    readonly licensing_info: {
                        readonly type: "object";
                        readonly properties: {
                            readonly state: {
                                readonly type: "string";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly medallion_email: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly application_portal: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly compact: {
                                readonly type: "string";
                            };
                            readonly state_board_external_account: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly account_type: {
                                        readonly type: "string";
                                    };
                                    readonly account_type_other: {
                                        readonly type: "string";
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["account_type", "account_type_other", "id", "password", "state", "username"];
                            };
                        };
                        readonly readOnly: true;
                    };
                    readonly app_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly psv_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly organization_profile_id: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly business_days_since_app_submitted: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                    readonly certificate_type: {
                        readonly type: readonly ["string", "null"];
                    };
                    readonly duration_type: {
                        readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                        readonly type: "string";
                        readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                    };
                    readonly registration: {
                        readonly enum: readonly ["state", "dea", "state_controlled"];
                        readonly type: "string";
                        readonly description: "`state` `dea` `state_controlled`";
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_resubmission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly using_compact: {
                        readonly type: "boolean";
                        readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                    };
                    readonly is_spl: {
                        readonly type: readonly ["boolean", "null"];
                        readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                    };
                    readonly app_expiration_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly sent_to_provider_for_review_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly psv_submitted_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly completed_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly rx_authority: {
                        readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                        readonly type: "string";
                        readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                    };
                    readonly licensing_info: {
                        readonly type: "object";
                        readonly properties: {
                            readonly state: {
                                readonly type: "string";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly medallion_email: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly application_portal: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly compact: {
                                readonly type: "string";
                            };
                            readonly state_board_external_account: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly account_type: {
                                        readonly type: "string";
                                    };
                                    readonly account_type_other: {
                                        readonly type: "string";
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["account_type", "account_type_other", "id", "password", "state", "username"];
                            };
                        };
                        readonly readOnly: true;
                    };
                    readonly app_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly psv_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly organization_profile_id: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly business_days_since_app_submitted: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                    readonly certificate_type: {
                        readonly type: readonly ["string", "null"];
                    };
                    readonly duration_type: {
                        readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                        readonly type: "string";
                        readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                    };
                    readonly registration: {
                        readonly enum: readonly ["state", "dea", "state_controlled"];
                        readonly type: "string";
                        readonly description: "`state` `dea` `state_controlled`";
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_resubmission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly using_compact: {
                        readonly type: "boolean";
                        readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                    };
                    readonly is_spl: {
                        readonly type: readonly ["boolean", "null"];
                        readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                    };
                    readonly app_expiration_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly sent_to_provider_for_review_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly psv_submitted_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly completed_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly rx_authority: {
                        readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                        readonly type: "string";
                        readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                    };
                    readonly licensing_info: {
                        readonly type: "object";
                        readonly properties: {
                            readonly state: {
                                readonly type: "string";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly medallion_email: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly application_portal: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly compact: {
                                readonly type: "string";
                            };
                            readonly state_board_external_account: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly account_type: {
                                        readonly type: "string";
                                    };
                                    readonly account_type_other: {
                                        readonly type: "string";
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["account_type", "account_type_other", "id", "password", "state", "username"];
                            };
                        };
                        readonly readOnly: true;
                    };
                    readonly app_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly psv_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly organization_profile_id: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly business_days_since_app_submitted: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly license_number: {
                        readonly type: "string";
                        readonly maxLength: 255;
                    };
                    readonly issue_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly expiration_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                };
                readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "application_assigned", "applciation_sent_to_provider_for_review", "application_ready", "paper_app_mailed_to_provider", "application_sent", "renewal_in_process_with_the_board", "psv_assigned", "application_in_process_with_state_board", "psv_qc_required", "psv_qc_completed", "psv_qc_returned", "psv_pending_provider", "psv_request_pending", "psv_review", "psv_submitted", "application_qc_required", "application_qc_completed", "application_qc_returned", "completed", "info_needed_from_provider", "tasks_over_21_days", "pending", "pending_state_license_issuance", "pending_csr", "pending_rn", "pending_imlc_approval", "imlc_issued_addendums_required", "pending_imlc_loq", "loq_in_process", "pending_prescriptive_authority", "pending_autonomous_registration", "license_issued_pending_qc", "license_issued_qc_failed", "pending_renewal_window", "external_block", "backlog", "on_hold", "inactive", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `application_assigned` `applciation_sent_to_provider_for_review` `application_ready` `paper_app_mailed_to_provider` `application_sent` `renewal_in_process_with_the_board` `psv_assigned` `application_in_process_with_state_board` `psv_qc_required` `psv_qc_completed` `psv_qc_returned` `psv_pending_provider` `psv_request_pending` `psv_review` `psv_submitted` `application_qc_required` `application_qc_completed` `application_qc_returned` `completed` `info_needed_from_provider` `tasks_over_21_days` `pending` `pending_state_license_issuance` `pending_csr` `pending_rn` `pending_imlc_approval` `imlc_issued_addendums_required` `pending_imlc_loq` `loq_in_process` `pending_prescriptive_authority` `pending_autonomous_registration` `license_issued_pending_qc` `license_issued_qc_failed` `pending_renewal_window` `external_block` `backlog` `on_hold` `inactive`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                    readonly certificate_type: {
                        readonly type: readonly ["string", "null"];
                    };
                    readonly duration_type: {
                        readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                        readonly type: "string";
                        readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                    };
                    readonly registration: {
                        readonly enum: readonly ["state", "dea", "state_controlled"];
                        readonly type: "string";
                        readonly description: "`state` `dea` `state_controlled`";
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_resubmission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly using_compact: {
                        readonly type: "boolean";
                        readonly description: "Boolean that states whether this license is active through IMLC/NLC";
                    };
                    readonly is_spl: {
                        readonly type: readonly ["boolean", "null"];
                        readonly description: "Boolean that states whether this license is the SPL (State of Principal Licensure)";
                    };
                    readonly app_expiration_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly sent_to_provider_for_review_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly psv_submitted_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly completed_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly rx_authority: {
                        readonly enum: readonly ["prescriptive_authority", "autonomous_registration", "rx_included", "checkbox_selected"];
                        readonly type: "string";
                        readonly description: "`prescriptive_authority` `autonomous_registration` `rx_included` `checkbox_selected`";
                    };
                    readonly licensing_info: {
                        readonly type: "object";
                        readonly properties: {
                            readonly state: {
                                readonly type: "string";
                            };
                            readonly provider: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly medallion_email: {
                                readonly type: "string";
                            };
                            readonly id: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly application_portal: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly compact: {
                                readonly type: "string";
                            };
                            readonly state_board_external_account: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly account_type: {
                                        readonly type: "string";
                                    };
                                    readonly account_type_other: {
                                        readonly type: "string";
                                    };
                                    readonly state: {
                                        readonly type: "string";
                                    };
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["account_type", "account_type_other", "id", "password", "state", "username"];
                            };
                        };
                        readonly readOnly: true;
                    };
                    readonly app_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly psv_sla_seconds: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly organization_profile_id: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly business_days_since_app_submitted: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_sla_seconds", "business_days_since_app_submitted", "id", "licensing_info", "name", "organization_name", "organization_profile_id", "percent_complete", "profile_completion_state", "psv_sla_seconds", "remaining_todos", "requested_by", "state"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_over_21_days", "intake_on_hold", "intake_complete", "intake_msa_hold", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_over_21_days` `intake_on_hold` `intake_complete` `intake_msa_hold`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly text: {
                        readonly type: "string";
                    };
                    readonly is_public: {
                        readonly type: "boolean";
                    };
                    readonly recipients: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "integer";
                        };
                    };
                    readonly oldest_request: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly newest_request: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly last_intake: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly description: "When latest intake request became completed?";
                    };
                    readonly provider__profession: {
                        readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                    };
                    readonly related_license_count: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly related_license_intake_complete_count: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly related_loq_license_count: {
                        readonly type: "integer";
                        readonly maximum: 2147483647;
                        readonly minimum: 0;
                    };
                    readonly related_loq_license_intake_complete_count: {
                        readonly type: "integer";
                        readonly maximum: 2147483647;
                        readonly minimum: 0;
                    };
                    readonly related_payor_enrollments_count: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly related_payor_enrollments_intake_complete_count: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly related_new_license_requests: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly readOnly: true;
                    };
                    readonly related_loq_requests: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly readOnly: true;
                    };
                    readonly related_payer_enrollment_requests: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly readOnly: true;
                    };
                    readonly last_login: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["id", "last_login", "name", "organization_name", "percent_complete", "profile_completion_state", "provider__profession", "related_loq_requests", "related_new_license_requests", "related_payer_enrollment_requests", "remaining_todos"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "in_progress", "ready", "in_committee", "closed", "scheduled", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `in_progress` `ready` `in_committee` `closed` `scheduled`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly transition_status: {
                        readonly enum: readonly ["processing", "done", "failed", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`processing` `done` `failed`";
                    };
                    readonly transition_error: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly credentialing_file: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly approval_request: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly initialcredentialingservicerequest: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly recredentialingservicerequest: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly credentialing_committee: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly credentialing_committee_details: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 265;
                                    };
                                    readonly members: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "integer";
                                                    readonly readOnly: true;
                                                };
                                                readonly email: {
                                                    readonly type: "string";
                                                    readonly format: "email";
                                                    readonly readOnly: true;
                                                    readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                                };
                                                readonly picture: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                };
                                                readonly name: {
                                                    readonly type: "string";
                                                    readonly maxLength: 255;
                                                };
                                                readonly is_staff: {
                                                    readonly type: "boolean";
                                                    readonly description: "Designates whether the user can log into this admin site.";
                                                };
                                                readonly date_joined: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly format: "date-time";
                                                };
                                                readonly is_sso: {
                                                    readonly type: "boolean";
                                                    readonly readOnly: true;
                                                };
                                                readonly is_pii_access_restricted: {
                                                    readonly type: "boolean";
                                                    readonly readOnly: true;
                                                };
                                            };
                                            readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                            readonly description: "";
                                        };
                                    };
                                    readonly is_default_committee: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly required: readonly ["id", "members", "name"];
                                readonly description: "";
                            };
                            readonly provider: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly status: {
                                readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                            };
                            readonly votes: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly decision: {
                                            readonly enum: readonly [0, 1, any];
                                            readonly type: readonly ["integer", "null"];
                                            readonly minimum: -2147483648;
                                            readonly maximum: 2147483647;
                                            readonly description: "`1`";
                                        };
                                        readonly result: {
                                            readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                            readonly type: "string";
                                            readonly description: "`approved` `disapproved` `ignored`";
                                        };
                                        readonly voter: {
                                            readonly type: readonly ["integer", "null"];
                                            readonly readOnly: true;
                                        };
                                        readonly approval_request: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly format: "date-time";
                                            readonly readOnly: true;
                                        };
                                        readonly voted_on: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "date-time";
                                        };
                                    };
                                    readonly required: readonly ["approval_request", "created", "id", "voter"];
                                    readonly description: "";
                                };
                            };
                        };
                        readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                        readonly description: "";
                    };
                    readonly application_completed_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly credentials_ready_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly closed_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                };
                readonly required: readonly ["credentialing_file", "id", "name", "organization_name", "percent_complete", "profile_completion_state", "remaining_todos"];
                readonly description: "";
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "in_progress", "ready", "in_committee", "closed", "scheduled", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`requested` `in_progress` `ready` `in_committee` `closed` `scheduled`";
                    };
                    readonly organization: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly requested_by: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly percent_complete: {
                        readonly type: readonly ["integer", "null"];
                        readonly readOnly: true;
                    };
                    readonly profile_completion_state: {
                        readonly enum: readonly ["complete", "incomplete", "new_fields", "new_request", "new_service", "new_request_and_service"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`complete` `incomplete` `new_fields` `new_request` `new_service` `new_request_and_service`";
                    };
                    readonly remaining_todos: {
                        readonly oneOf: readonly [{
                            readonly type: "boolean";
                        }, {
                            readonly type: "integer";
                        }];
                        readonly readOnly: true;
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly organization_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly coordinator: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly assignment_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly followup_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                    };
                    readonly last_staff_note_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly efficiency_level: {
                        readonly type: "integer";
                        readonly maximum: 32767;
                        readonly minimum: 0;
                    };
                    readonly efficiency_violations: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "string";
                            readonly maxLength: 254;
                        };
                    };
                    readonly efficiency_last_checked: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                    };
                    readonly transition_status: {
                        readonly enum: readonly ["processing", "done", "failed", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`processing` `done` `failed`";
                    };
                    readonly transition_error: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly credentialing_file: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly approval_request: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly initialcredentialingservicerequest: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly recredentialingservicerequest: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly credentialing_committee: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly credentialing_committee_details: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 265;
                                    };
                                    readonly members: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "integer";
                                                    readonly readOnly: true;
                                                };
                                                readonly email: {
                                                    readonly type: "string";
                                                    readonly format: "email";
                                                    readonly readOnly: true;
                                                    readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                                };
                                                readonly picture: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                };
                                                readonly name: {
                                                    readonly type: "string";
                                                    readonly maxLength: 255;
                                                };
                                                readonly is_staff: {
                                                    readonly type: "boolean";
                                                    readonly description: "Designates whether the user can log into this admin site.";
                                                };
                                                readonly date_joined: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly format: "date-time";
                                                };
                                                readonly is_sso: {
                                                    readonly type: "boolean";
                                                    readonly readOnly: true;
                                                };
                                                readonly is_pii_access_restricted: {
                                                    readonly type: "boolean";
                                                    readonly readOnly: true;
                                                };
                                            };
                                            readonly required: readonly ["email", "id", "is_pii_access_restricted", "is_sso", "picture"];
                                            readonly description: "";
                                        };
                                    };
                                    readonly is_default_committee: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly required: readonly ["id", "members", "name"];
                                readonly description: "";
                            };
                            readonly provider: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly status: {
                                readonly enum: readonly ["pending", "approved", "rejected", "closed_without_decision"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`pending` `approved` `rejected` `closed_without_decision`";
                            };
                            readonly votes: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly decision: {
                                            readonly enum: readonly [0, 1, any];
                                            readonly type: readonly ["integer", "null"];
                                            readonly minimum: -2147483648;
                                            readonly maximum: 2147483647;
                                            readonly description: "`1`";
                                        };
                                        readonly result: {
                                            readonly enum: readonly ["approved", "disapproved", "ignored", ""];
                                            readonly type: "string";
                                            readonly description: "`approved` `disapproved` `ignored`";
                                        };
                                        readonly voter: {
                                            readonly type: readonly ["integer", "null"];
                                            readonly readOnly: true;
                                        };
                                        readonly approval_request: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly created: {
                                            readonly type: "string";
                                            readonly format: "date-time";
                                            readonly readOnly: true;
                                        };
                                        readonly voted_on: {
                                            readonly type: readonly ["string", "null"];
                                            readonly format: "date-time";
                                        };
                                    };
                                    readonly required: readonly ["approval_request", "created", "id", "voter"];
                                    readonly description: "";
                                };
                            };
                        };
                        readonly required: readonly ["created", "credentialing_committee", "id", "status"];
                        readonly description: "";
                    };
                    readonly application_completed_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly credentials_ready_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly closed_on: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                    };
                    readonly recredentialing_deadline: {
                        readonly type: "string";
                        readonly format: "date";
                    };
                    readonly recredentialing_start_date: {
                        readonly type: "string";
                        readonly format: "date";
                    };
                };
                readonly required: readonly ["credentialing_file", "id", "name", "organization_name", "percent_complete", "profile_completion_state", "recredentialing_deadline", "recredentialing_start_date", "remaining_todos"];
                readonly description: "";
            }];
            readonly discriminator: {
                readonly propertyName: "resourcetype";
                readonly mapping: {
                    readonly LicenseNewServiceRequest: "#/components/schemas/LicenseNewServiceRequestDetailSerializerV1";
                    readonly LicenseReinstatementServiceRequest: "#/components/schemas/LicenseReinstatementServiceRequestDetailSerializerV1";
                    readonly LicenseRenewalServiceRequest: "#/components/schemas/LicenseRenewalServiceRequestDetailSerializerV1";
                    readonly LicenseLOQServiceRequest: "#/components/schemas/LicenseLOQServiceRequestDetailSerializerV1";
                    readonly IntakeServiceRequest: "#/components/schemas/IntakeServiceRequestSerializerV1";
                    readonly InitialCredentialingServiceRequest: "#/components/schemas/InitialCredentialingServiceRequestSerializerV1";
                    readonly ReCredentialingServiceRequest: "#/components/schemas/ReCredentialingServiceRequestSerializerV1";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1CaqhDataRequestCreateCaqhDataRequest: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
                readonly format: "uuid";
            };
            readonly status: {
                readonly enum: readonly ["init", "in_progress", "complete", "failed", "unauthorized"];
                readonly type: "string";
            };
        };
        readonly required: readonly ["provider"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly status: {
                    readonly enum: readonly ["init", "in_progress", "complete", "failed", "unauthorized"];
                    readonly type: "string";
                    readonly description: "`init` `in_progress` `complete` `failed` `unauthorized`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "provider"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1DocumentsRetrieveDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this doc file.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly time_limited_url: {
                    readonly type: "string";
                    readonly format: "uri";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["id", "time_limited_url"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesActivationCreateEmployees: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly format: "uuid";
                    readonly title: "Id";
                    readonly type: "string";
                };
                readonly first_name: {
                    readonly title: "First Name";
                    readonly type: "string";
                };
                readonly last_name: {
                    readonly title: "Last Name";
                    readonly type: "string";
                };
                readonly is_active: {
                    readonly title: "Is Active";
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["id", "first_name", "last_name", "is_active"];
            readonly title: "EmployeeActivationResponse";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesBulkOnboardingCreateEmployees: {
    readonly body: {
        readonly type: "array";
        readonly items: {
            readonly type: "object";
            readonly properties: {
                readonly first_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly ssn: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly date_of_birth: {
                    readonly type: "string";
                    readonly format: "date";
                };
                readonly employee_number: {
                    readonly type: readonly ["string", "null"];
                    readonly minLength: 1;
                };
                readonly email: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "email";
                    readonly minLength: 1;
                };
            };
            readonly required: readonly ["date_of_birth", "first_name", "last_name", "ssn"];
            readonly description: "";
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "400": {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly item_number: {
                        readonly type: readonly ["integer", "null"];
                    };
                    readonly error_message: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["error_message", "item_number"];
                readonly description: "";
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesDeactivationCreateEmployees: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly format: "uuid";
                    readonly title: "Id";
                    readonly type: "string";
                };
                readonly first_name: {
                    readonly title: "First Name";
                    readonly type: "string";
                };
                readonly last_name: {
                    readonly title: "Last Name";
                    readonly type: "string";
                };
                readonly is_active: {
                    readonly title: "Is Active";
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["id", "first_name", "last_name", "is_active"];
            readonly title: "EmployeeDeactivationResponse";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesListEmployees: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly date_of_birth: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly email: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly employee_number: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly first_name: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly last_name: {
                                readonly type: "string";
                                readonly readOnly: true;
                            };
                            readonly date_of_birth: {
                                readonly type: "string";
                                readonly format: "date";
                                readonly readOnly: true;
                            };
                            readonly employee_number: {
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                            };
                            readonly email: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "email";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["date_of_birth", "email", "employee_number", "first_name", "id", "last_name"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesOngoingMonitoringAlertSuppressionCreateEmployees: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly format: "uuid";
                    readonly title: "Id";
                    readonly type: "string";
                };
                readonly first_name: {
                    readonly title: "First Name";
                    readonly type: "string";
                };
                readonly last_name: {
                    readonly title: "Last Name";
                    readonly type: "string";
                };
                readonly ongoing_monitoring_alerts_suppressed: {
                    readonly format: "date-time";
                    readonly title: "Ongoing Monitoring Alerts Suppressed";
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["id", "first_name", "last_name", "ongoing_monitoring_alerts_suppressed"];
            readonly title: "OngoingMonitoringAlertSuppressionResponse";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesOngoingMonitoringAlertUnsuppressionCreateEmployees: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly format: "uuid";
                    readonly title: "Id";
                    readonly type: "string";
                };
                readonly first_name: {
                    readonly title: "First Name";
                    readonly type: "string";
                };
                readonly last_name: {
                    readonly title: "Last Name";
                    readonly type: "string";
                };
                readonly ongoing_monitoring_alerts_suppressed: {
                    readonly format: "date-time";
                    readonly title: "Ongoing Monitoring Alerts Suppressed";
                    readonly type: readonly ["string", "null"];
                };
            };
            readonly required: readonly ["id", "first_name", "last_name", "ongoing_monitoring_alerts_suppressed"];
            readonly title: "OngoingMonitoringAlertUnsuppressionResponse";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1EmployeesPartialUpdateEmployees: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly first_name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly last_name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly date_of_birth: {
                readonly type: "string";
                readonly format: "date";
            };
            readonly employee_number: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly email: {
                readonly type: "string";
                readonly format: "email";
                readonly minLength: 1;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly first_name: {
                    readonly type: "string";
                };
                readonly last_name: {
                    readonly type: "string";
                };
                readonly date_of_birth: {
                    readonly type: "string";
                    readonly format: "date";
                };
                readonly employee_number: {
                    readonly type: "string";
                };
                readonly email: {
                    readonly type: "string";
                    readonly format: "email";
                };
            };
            readonly required: readonly ["date_of_birth", "email", "employee_number", "first_name", "last_name"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1FacilitiesCreateFacilities: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly npi: {
                readonly type: "string";
                readonly maxLength: 10;
            };
            readonly phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly tax_id_number: {
                readonly type: "string";
                readonly maxLength: 10;
            };
            readonly facility_types: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                    readonly type: "string";
                };
            };
            readonly other_type: {
                readonly type: "string";
                readonly maxLength: 64;
            };
            readonly facility_owner: {
                readonly type: "string";
                readonly maxLength: 64;
            };
            readonly primary_taxonomy: {
                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly secondary_taxonomy: {
                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly additional_taxonomies: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                    readonly type: "string";
                };
                readonly default: readonly [];
            };
            readonly facility_specialty_info: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly medicare_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly medicaid_id: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly is_medicare_part_a: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_medicare_part_b: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly w9_form: {
                readonly type: readonly ["object", "null"];
                readonly required: readonly ["id"];
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly title: {
                        readonly type: "string";
                        readonly title: "Title (optional)";
                        readonly maxLength: 254;
                    };
                };
            };
            readonly organizational_chart: {
                readonly type: readonly ["object", "null"];
                readonly required: readonly ["id"];
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly title: {
                        readonly type: "string";
                        readonly title: "Title (optional)";
                        readonly maxLength: 254;
                    };
                };
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly county: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly tax_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_line_1: {
                readonly type: readonly ["string", "null"];
                readonly title: "Tax Address Line 1";
                readonly maxLength: 255;
            };
            readonly tax_line_2: {
                readonly type: readonly ["string", "null"];
                readonly title: "Tax Address Line 2";
                readonly maxLength: 255;
            };
            readonly tax_city: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_address_state: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_postal_code: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly has_accreditation: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
            };
            readonly has_laboratory: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "If true, the facility requires CLIA for profile completion.";
            };
            readonly has_med_sanctions_within_3_years: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly accepting_new_patients: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_ownership_up_to_date_with_irs: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly delegated_credentialing_status_type: {
                readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly delegated_credentialing_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly directory_section: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly delegated_credentialing_group: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly required: readonly ["name"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly npi: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly facility_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                        readonly type: "string";
                        readonly description: "`acute_inpatient_hospital` `ambulatory_surgery_center` `cardiac_catheterization_service` `cardiac_surgery_program` `convenient_care_clinic` `icu` `diagnostic_radiology` `durable_medical_equipment` `freestanding_emergency_room` `home_health` `hospice` `infusion_center` `inpatient_psychiatric_service` `laboratory` `laboratory_draw_station` `mammography` `outpatient_infusion_chemotherapy` `outpatient_therapy` `rehabilitation_hospital` `skilled_nursing_facility` `substance_abuse_treatment_facility` `surgical_service` `urgent_care_center` `other`";
                    };
                };
                readonly other_type: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly facility_owner: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly primary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly secondary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly additional_taxonomies: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                        readonly type: "string";
                        readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                    };
                    readonly default: readonly [];
                };
                readonly facility_specialty_info: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicare_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_medicare_part_a: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_medicare_part_b: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly w9_form: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly organizational_chart: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly tax_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 1";
                    readonly maxLength: 255;
                };
                readonly tax_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 2";
                    readonly maxLength: 255;
                };
                readonly tax_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly has_accreditation: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
                };
                readonly has_laboratory: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires CLIA for profile completion.";
                };
                readonly has_med_sanctions_within_3_years: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_ownership_up_to_date_with_irs: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly delegated_credentialing_status_type: {
                    readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`initial_credentialing` `re_credentialing`";
                };
                readonly delegated_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly directory_section: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly delegated_credentialing_group: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id", "name"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1FacilitiesDestroyFacilities: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1FacilitiesListFacilities: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly address_state: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: readonly ["string", "null"];
                        readonly title: "State";
                        readonly enum: readonly ["AK", "AL", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MP", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly organization: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly maxLength: 254;
                            };
                            readonly npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly phone: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly fax: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly tax_id_number: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly facility_types: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                                    readonly type: "string";
                                    readonly description: "`acute_inpatient_hospital` `ambulatory_surgery_center` `cardiac_catheterization_service` `cardiac_surgery_program` `convenient_care_clinic` `icu` `diagnostic_radiology` `durable_medical_equipment` `freestanding_emergency_room` `home_health` `hospice` `infusion_center` `inpatient_psychiatric_service` `laboratory` `laboratory_draw_station` `mammography` `outpatient_infusion_chemotherapy` `outpatient_therapy` `rehabilitation_hospital` `skilled_nursing_facility` `substance_abuse_treatment_facility` `surgical_service` `urgent_care_center` `other`";
                                };
                            };
                            readonly other_type: {
                                readonly type: "string";
                                readonly maxLength: 64;
                            };
                            readonly facility_owner: {
                                readonly type: "string";
                                readonly maxLength: 64;
                            };
                            readonly primary_taxonomy: {
                                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                            };
                            readonly secondary_taxonomy: {
                                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                            };
                            readonly additional_taxonomies: {
                                readonly type: "array";
                                readonly items: {
                                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                                    readonly type: "string";
                                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                                };
                                readonly default: readonly [];
                            };
                            readonly facility_specialty_info: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly medicare_id: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly medicaid_id: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly is_medicare_part_a: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_medicare_part_b: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly w9_form: {
                                readonly type: readonly ["object", "null"];
                                readonly required: readonly ["id", "time_limited_url"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly title: "Title (optional)";
                                        readonly maxLength: 254;
                                    };
                                    readonly time_limited_url: {
                                        readonly type: "string";
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                            };
                            readonly organizational_chart: {
                                readonly type: readonly ["object", "null"];
                                readonly required: readonly ["id", "time_limited_url"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                        readonly title: "Title (optional)";
                                        readonly maxLength: 254;
                                    };
                                    readonly time_limited_url: {
                                        readonly type: "string";
                                        readonly format: "uri";
                                        readonly readOnly: true;
                                    };
                                };
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly tax_name: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly tax_line_1: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "Tax Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly tax_line_2: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "Tax Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly tax_city: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly tax_address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly tax_postal_code: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly tax_postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly has_accreditation: {
                                readonly type: readonly ["boolean", "null"];
                                readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
                            };
                            readonly has_laboratory: {
                                readonly type: readonly ["boolean", "null"];
                                readonly description: "If true, the facility requires CLIA for profile completion.";
                            };
                            readonly has_med_sanctions_within_3_years: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly accepting_new_patients: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly is_ownership_up_to_date_with_irs: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly effective_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly delegated_credentialing_status_type: {
                                readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`initial_credentialing` `re_credentialing`";
                            };
                            readonly delegated_credentialing_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly directory_section: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly delegated_credentialing_group: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id", "name"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1FacilitiesPartialUpdateFacilities: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 254;
            };
            readonly npi: {
                readonly type: "string";
                readonly maxLength: 10;
            };
            readonly phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly tax_id_number: {
                readonly type: "string";
                readonly maxLength: 10;
            };
            readonly facility_types: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                    readonly type: "string";
                };
            };
            readonly other_type: {
                readonly type: "string";
                readonly maxLength: 64;
            };
            readonly facility_owner: {
                readonly type: "string";
                readonly maxLength: 64;
            };
            readonly primary_taxonomy: {
                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly secondary_taxonomy: {
                readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly additional_taxonomies: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                    readonly type: "string";
                };
                readonly default: readonly [];
            };
            readonly facility_specialty_info: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly medicare_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly medicaid_id: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly is_medicare_part_a: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_medicare_part_b: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly w9_form: {
                readonly type: readonly ["object", "null"];
                readonly required: readonly ["id"];
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly title: {
                        readonly type: "string";
                        readonly title: "Title (optional)";
                        readonly maxLength: 254;
                    };
                };
            };
            readonly organizational_chart: {
                readonly type: readonly ["object", "null"];
                readonly required: readonly ["id"];
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly title: {
                        readonly type: "string";
                        readonly title: "Title (optional)";
                        readonly maxLength: 254;
                    };
                };
            };
            readonly line_1: {
                readonly type: "string";
                readonly title: "Street Address Line 1";
                readonly maxLength: 255;
            };
            readonly line_2: {
                readonly type: "string";
                readonly title: "Street Address Line 2";
                readonly maxLength: 255;
            };
            readonly city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly county: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly address_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly tax_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_line_1: {
                readonly type: readonly ["string", "null"];
                readonly title: "Tax Address Line 1";
                readonly maxLength: 255;
            };
            readonly tax_line_2: {
                readonly type: readonly ["string", "null"];
                readonly title: "Tax Address Line 2";
                readonly maxLength: 255;
            };
            readonly tax_city: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_address_state: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_postal_code: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly tax_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly has_accreditation: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
            };
            readonly has_laboratory: {
                readonly type: readonly ["boolean", "null"];
                readonly description: "If true, the facility requires CLIA for profile completion.";
            };
            readonly has_med_sanctions_within_3_years: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly accepting_new_patients: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly is_ownership_up_to_date_with_irs: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly delegated_credentialing_status_type: {
                readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly delegated_credentialing_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly directory_section: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly delegated_credentialing_group: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly npi: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly facility_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                        readonly type: "string";
                        readonly description: "`acute_inpatient_hospital` `ambulatory_surgery_center` `cardiac_catheterization_service` `cardiac_surgery_program` `convenient_care_clinic` `icu` `diagnostic_radiology` `durable_medical_equipment` `freestanding_emergency_room` `home_health` `hospice` `infusion_center` `inpatient_psychiatric_service` `laboratory` `laboratory_draw_station` `mammography` `outpatient_infusion_chemotherapy` `outpatient_therapy` `rehabilitation_hospital` `skilled_nursing_facility` `substance_abuse_treatment_facility` `surgical_service` `urgent_care_center` `other`";
                    };
                };
                readonly other_type: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly facility_owner: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly primary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly secondary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly additional_taxonomies: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                        readonly type: "string";
                        readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                    };
                    readonly default: readonly [];
                };
                readonly facility_specialty_info: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicare_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_medicare_part_a: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_medicare_part_b: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly w9_form: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly organizational_chart: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly tax_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 1";
                    readonly maxLength: 255;
                };
                readonly tax_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 2";
                    readonly maxLength: 255;
                };
                readonly tax_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly has_accreditation: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
                };
                readonly has_laboratory: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires CLIA for profile completion.";
                };
                readonly has_med_sanctions_within_3_years: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_ownership_up_to_date_with_irs: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly delegated_credentialing_status_type: {
                    readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`initial_credentialing` `re_credentialing`";
                };
                readonly delegated_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly directory_section: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly delegated_credentialing_group: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id", "name"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1FacilitiesRetrieveFacilities: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 254;
                };
                readonly npi: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly facility_types: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["acute_inpatient_hospital", "ambulatory_surgery_center", "cardiac_catheterization_service", "cardiac_surgery_program", "convenient_care_clinic", "icu", "diagnostic_radiology", "durable_medical_equipment", "freestanding_emergency_room", "home_health", "hospice", "infusion_center", "inpatient_psychiatric_service", "laboratory", "laboratory_draw_station", "mammography", "outpatient_infusion_chemotherapy", "outpatient_therapy", "rehabilitation_hospital", "skilled_nursing_facility", "substance_abuse_treatment_facility", "surgical_service", "urgent_care_center", "other"];
                        readonly type: "string";
                        readonly description: "`acute_inpatient_hospital` `ambulatory_surgery_center` `cardiac_catheterization_service` `cardiac_surgery_program` `convenient_care_clinic` `icu` `diagnostic_radiology` `durable_medical_equipment` `freestanding_emergency_room` `home_health` `hospice` `infusion_center` `inpatient_psychiatric_service` `laboratory` `laboratory_draw_station` `mammography` `outpatient_infusion_chemotherapy` `outpatient_therapy` `rehabilitation_hospital` `skilled_nursing_facility` `substance_abuse_treatment_facility` `surgical_service` `urgent_care_center` `other`";
                    };
                };
                readonly other_type: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly facility_owner: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly primary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly secondary_taxonomy: {
                    readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                };
                readonly additional_taxonomies: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["174200000X", "177F00000X", "251E00000X", "251G00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X"];
                        readonly type: "string";
                        readonly description: "`174200000X` `177F00000X` `251E00000X` `251G00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X`";
                    };
                    readonly default: readonly [];
                };
                readonly facility_specialty_info: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicare_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly medicaid_id: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly is_medicare_part_a: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_medicare_part_b: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly w9_form: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly organizational_chart: {
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id", "time_limited_url"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly title: {
                            readonly type: "string";
                            readonly title: "Title (optional)";
                            readonly maxLength: 254;
                        };
                        readonly time_limited_url: {
                            readonly type: "string";
                            readonly format: "uri";
                            readonly readOnly: true;
                        };
                    };
                };
                readonly line_1: {
                    readonly type: "string";
                    readonly title: "Street Address Line 1";
                    readonly maxLength: 255;
                };
                readonly line_2: {
                    readonly type: "string";
                    readonly title: "Street Address Line 2";
                    readonly maxLength: 255;
                };
                readonly city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly county: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly tax_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 1";
                    readonly maxLength: 255;
                };
                readonly tax_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "Tax Address Line 2";
                    readonly maxLength: 255;
                };
                readonly tax_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_address_state: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly tax_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly has_accreditation: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires Accreditation for profile completion. Otherwise, the facility requires a Site Visit for profile completion.";
                };
                readonly has_laboratory: {
                    readonly type: readonly ["boolean", "null"];
                    readonly description: "If true, the facility requires CLIA for profile completion.";
                };
                readonly has_med_sanctions_within_3_years: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly accepting_new_patients: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly is_ownership_up_to_date_with_irs: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly delegated_credentialing_status_type: {
                    readonly enum: readonly ["initial_credentialing", "re_credentialing", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`initial_credentialing` `re_credentialing`";
                };
                readonly delegated_credentialing_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly directory_section: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly delegated_credentialing_group: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
            };
            readonly required: readonly ["id", "name"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesCreateGroupProfiles: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly npi: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 9223372036854776000;
                readonly minimum: -9223372036854776000;
                readonly format: "int64";
            };
            readonly tax_id_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly tax_classification: {
                readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                readonly type: readonly ["string", "null"];
            };
            readonly group_specialty_info: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly incorporation_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly incorporation_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly has_legal_claims: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly legal_claims: {
                readonly type: "string";
            };
            readonly has_liability_insurance: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly billing_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ehr_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly telehealth_group_percentage: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
            };
            readonly telemedicine_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly dba_name: {
                readonly type: "string";
                readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                readonly maxLength: 255;
            };
            readonly service_types: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                    readonly type: "string";
                };
            };
            readonly taxonomy: {
                readonly enum: readonly ["193200000X", "193400000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly primary_specialty: {
                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly additional_specialties: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                    readonly type: "string";
                };
            };
            readonly mailing_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly mailing_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly mailing_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly mailing_phone: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly billing_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly billing_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_email: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly agent_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly agent_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly agent_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly agent_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly agent_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly agent_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly bank_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly contact_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly routing_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly account_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly bank_line_1: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_line_2: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_postal_code: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_city: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly bank_phone_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly required: readonly ["incorporation_state", "name", "npi", "tax_id_number"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 9223372036854776000;
                    readonly minimum: -9223372036854776000;
                    readonly format: "int64";
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_classification: {
                    readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`sole_proprietorship` `partnership` `corporation` `s_corporation` `c_corporation` `llc` `pllc` `professional_association` `trust_estate` `local_government_agency` `501c3`";
                };
                readonly group_specialty_info: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly incorporation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly incorporation_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_legal_claims: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly legal_claims: {
                    readonly type: "string";
                };
                readonly has_liability_insurance: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly billing_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ehr_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly telehealth_group_percentage: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                };
                readonly telemedicine_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                    readonly maxLength: 255;
                };
                readonly service_types: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                        readonly type: "string";
                        readonly description: "`medical` `behavioral` `dental` `vision`";
                    };
                };
                readonly taxonomy: {
                    readonly enum: readonly ["193200000X", "193400000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`193200000X` `193400000X`";
                };
                readonly primary_specialty: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly additional_specialties: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                        readonly type: "string";
                        readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                    };
                };
                readonly mailing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly mailing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly mailing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly mailing_phone: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly billing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_email: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly agent_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly agent_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly agent_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly agent_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly agent_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly agent_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly bank_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly routing_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly account_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly bank_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly bank_phone_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "incorporation_state", "name", "npi", "tax_id_number"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesDestroyGroupProfiles: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this group profile.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1GroupProfilesDocumentsCreateGroupProfileDocuments: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly title: {
                readonly type: "string";
                readonly title: "Title (optional)";
                readonly maxLength: 254;
            };
            readonly kind: {
                readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                readonly type: "string";
            };
            readonly content: {
                readonly type: "string";
                readonly format: "binary";
                readonly writeOnly: true;
            };
        };
        readonly required: readonly ["content", "kind", "title"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["group_profile_pk"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                    readonly type: "string";
                    readonly description: "`malpractice_coi` `w9_form` `irs_letter` `business_license` `fictitious_business_name_statement` `voided_check` `bank_letter` `other` `articles_of_incorporation` `org_chart` `medicaid_notices_of_approval` `medicare_notices_of_approval` `completion_document`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesDocumentsDestroyGroupProfileDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["group_profile_pk", "id"];
        }];
    };
};
declare const PApiV1GroupProfilesDocumentsListGroupProfileDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["group_profile_pk"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly kind: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                        readonly enum: readonly ["articles_of_incorporation", "bank_letter", "business_license", "completion_document", "fictitious_business_name_statement", "irs_letter", "malpractice_coi", "medicaid_notices_of_approval", "medicare_notices_of_approval", "org_chart", "other", "voided_check", "w9_form"];
                    };
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly title: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly title: {
                                readonly type: "string";
                                readonly title: "Title (optional)";
                                readonly maxLength: 254;
                            };
                            readonly kind: {
                                readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                                readonly type: "string";
                                readonly description: "`malpractice_coi` `w9_form` `irs_letter` `business_license` `fictitious_business_name_statement` `voided_check` `bank_letter` `other` `articles_of_incorporation` `org_chart` `medicaid_notices_of_approval` `medicare_notices_of_approval` `completion_document`";
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "id", "kind", "title"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesDocumentsPartialUpdateGroupProfileDocuments: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly title: {
                readonly type: "string";
                readonly title: "Title (optional)";
                readonly maxLength: 254;
            };
            readonly kind: {
                readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                readonly type: "string";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["group_profile_pk", "id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                    readonly type: "string";
                    readonly description: "`malpractice_coi` `w9_form` `irs_letter` `business_license` `fictitious_business_name_statement` `voided_check` `bank_letter` `other` `articles_of_incorporation` `org_chart` `medicaid_notices_of_approval` `medicare_notices_of_approval` `completion_document`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesDocumentsRetrieveGroupProfileDocuments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile_pk: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["group_profile_pk", "id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly title: {
                    readonly type: "string";
                    readonly title: "Title (optional)";
                    readonly maxLength: 254;
                };
                readonly kind: {
                    readonly enum: readonly ["malpractice_coi", "w9_form", "irs_letter", "business_license", "fictitious_business_name_statement", "voided_check", "bank_letter", "other", "articles_of_incorporation", "org_chart", "medicaid_notices_of_approval", "medicare_notices_of_approval", "completion_document"];
                    readonly type: "string";
                    readonly description: "`malpractice_coi` `w9_form` `irs_letter` `business_license` `fictitious_business_name_statement` `voided_check` `bank_letter` `other` `articles_of_incorporation` `org_chart` `medicaid_notices_of_approval` `medicare_notices_of_approval` `completion_document`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "kind", "title"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesListGroupProfiles: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly name: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly npi: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly npi: {
                                readonly type: readonly ["integer", "null"];
                                readonly maximum: 9223372036854776000;
                                readonly minimum: -9223372036854776000;
                                readonly format: "int64";
                            };
                            readonly tax_id_number: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly tax_classification: {
                                readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`sole_proprietorship` `partnership` `corporation` `s_corporation` `c_corporation` `llc` `pllc` `professional_association` `trust_estate` `local_government_agency` `501c3`";
                            };
                            readonly group_specialty_info: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly incorporation_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly incorporation_state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                            };
                            readonly has_legal_claims: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly legal_claims: {
                                readonly type: "string";
                            };
                            readonly has_liability_insurance: {
                                readonly type: readonly ["boolean", "null"];
                            };
                            readonly billing_platform: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly ehr_platform: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly telehealth_group_percentage: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "decimal";
                                readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                            };
                            readonly telemedicine_platform: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly dba_name: {
                                readonly type: "string";
                                readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                                readonly maxLength: 255;
                            };
                            readonly service_types: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                                    readonly type: "string";
                                    readonly description: "`medical` `behavioral` `dental` `vision`";
                                };
                            };
                            readonly taxonomy: {
                                readonly enum: readonly ["193200000X", "193400000X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`193200000X` `193400000X`";
                            };
                            readonly primary_specialty: {
                                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                            };
                            readonly additional_specialties: {
                                readonly type: readonly ["array", "null"];
                                readonly items: {
                                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                                    readonly type: "string";
                                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                                };
                            };
                            readonly mailing_country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                                readonly type: "string";
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly mailing_city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly mailing_line_1: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly mailing_line_2: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly mailing_postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly mailing_postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly mailing_address_state: {
                                readonly type: "string";
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly mailing_phone: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly billing_country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                                readonly type: "string";
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly billing_city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_line_1: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_line_2: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly billing_address_state: {
                                readonly type: "string";
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly billing_phone: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_fax: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly billing_name: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly billing_email: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly agent_country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                                readonly type: "string";
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly agent_city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly agent_line_1: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly agent_line_2: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly agent_postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly agent_address_state: {
                                readonly type: "string";
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly bank_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly contact_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly routing_number: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly account_number: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly bank_line_1: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly bank_line_2: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly bank_postal_code: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly bank_postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly bank_city: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly bank_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                            readonly bank_phone_number: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "id", "incorporation_state", "name", "npi", "tax_id_number"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesPartialUpdateGroupProfiles: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly minLength: 1;
                readonly maxLength: 255;
            };
            readonly npi: {
                readonly type: readonly ["integer", "null"];
                readonly maximum: 9223372036854776000;
                readonly minimum: -9223372036854776000;
                readonly format: "int64";
            };
            readonly tax_id_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly tax_classification: {
                readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                readonly type: readonly ["string", "null"];
            };
            readonly group_specialty_info: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly incorporation_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly incorporation_state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly has_legal_claims: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly legal_claims: {
                readonly type: "string";
            };
            readonly has_liability_insurance: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly billing_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly ehr_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly telehealth_group_percentage: {
                readonly type: readonly ["string", "null"];
                readonly format: "decimal";
                readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
            };
            readonly telemedicine_platform: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly dba_name: {
                readonly type: "string";
                readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                readonly maxLength: 255;
            };
            readonly service_types: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                    readonly type: "string";
                };
            };
            readonly taxonomy: {
                readonly enum: readonly ["193200000X", "193400000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly primary_specialty: {
                readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly additional_specialties: {
                readonly type: readonly ["array", "null"];
                readonly items: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                    readonly type: "string";
                };
            };
            readonly mailing_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly mailing_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly mailing_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly mailing_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly mailing_phone: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_country: {
                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                readonly type: "string";
            };
            readonly billing_city: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_line_1: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_line_2: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_postal_code: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_address_state: {
                readonly type: "string";
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly billing_phone: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_fax: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly billing_name: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly billing_email: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly contact_name: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly routing_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly account_number: {
                readonly type: "string";
                readonly maxLength: 255;
            };
            readonly bank_line_1: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_line_2: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_postal_code: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_postal_code_plus_4: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_city: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly bank_state: {
                readonly type: readonly ["string", "null"];
                readonly title: "State";
                readonly maxLength: 255;
            };
            readonly bank_phone_number: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this group profile.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 9223372036854776000;
                    readonly minimum: -9223372036854776000;
                    readonly format: "int64";
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_classification: {
                    readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`sole_proprietorship` `partnership` `corporation` `s_corporation` `c_corporation` `llc` `pllc` `professional_association` `trust_estate` `local_government_agency` `501c3`";
                };
                readonly group_specialty_info: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly incorporation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly incorporation_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_legal_claims: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly legal_claims: {
                    readonly type: "string";
                };
                readonly has_liability_insurance: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly billing_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ehr_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly telehealth_group_percentage: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                };
                readonly telemedicine_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                    readonly maxLength: 255;
                };
                readonly service_types: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                        readonly type: "string";
                        readonly description: "`medical` `behavioral` `dental` `vision`";
                    };
                };
                readonly taxonomy: {
                    readonly enum: readonly ["193200000X", "193400000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`193200000X` `193400000X`";
                };
                readonly primary_specialty: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly additional_specialties: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                        readonly type: "string";
                        readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                    };
                };
                readonly mailing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly mailing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly mailing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly mailing_phone: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly billing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_email: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly routing_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly account_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly bank_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly bank_phone_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "incorporation_state", "name", "npi", "tax_id_number"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1GroupProfilesRetrieveGroupProfiles: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this group profile.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly npi: {
                    readonly type: readonly ["integer", "null"];
                    readonly maximum: 9223372036854776000;
                    readonly minimum: -9223372036854776000;
                    readonly format: "int64";
                };
                readonly tax_id_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly tax_classification: {
                    readonly enum: readonly ["sole_proprietorship", "partnership", "corporation", "s_corporation", "c_corporation", "llc", "pllc", "professional_association", "trust_estate", "local_government_agency", "501c3", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`sole_proprietorship` `partnership` `corporation` `s_corporation` `c_corporation` `llc` `pllc` `professional_association` `trust_estate` `local_government_agency` `501c3`";
                };
                readonly group_specialty_info: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly incorporation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly incorporation_state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                };
                readonly has_legal_claims: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly legal_claims: {
                    readonly type: "string";
                };
                readonly has_liability_insurance: {
                    readonly type: readonly ["boolean", "null"];
                };
                readonly billing_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly ehr_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly telehealth_group_percentage: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "decimal";
                    readonly pattern: "^-?\\d{0,1}(?:\\.\\d{0,2})?$";
                };
                readonly telemedicine_platform: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly dba_name: {
                    readonly type: "string";
                    readonly description: "DBA stands for 'Doing Business As', equivalent to Fictitious Business Name";
                    readonly maxLength: 255;
                };
                readonly service_types: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["medical", "behavioral", "dental", "vision"];
                        readonly type: "string";
                        readonly description: "`medical` `behavioral` `dental` `vision`";
                    };
                };
                readonly taxonomy: {
                    readonly enum: readonly ["193200000X", "193400000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`193200000X` `193400000X`";
                };
                readonly primary_specialty: {
                    readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                };
                readonly additional_specialties: {
                    readonly type: readonly ["array", "null"];
                    readonly items: {
                        readonly enum: readonly ["101Y00000X", "101YA0400X", "101YM0800X", "101YP1600X", "101YP2500X", "101YS0200X", "101200000X", "102L00000X", "102X00000X", "103G00000X", "103GC0700X", "103K00000X", "103T00000X", "103TA0400X", "103TA0700X", "103TB0200X", "103TC0700X", "103TC1900X", "103TC2200X", "103TE1000X", "103TE1100X", "103TF0000X", "103TF0200X", "103TH0004X", "103TH0100X", "103TM1700X", "103TM1800X", "103TP0016X", "103TP0814X", "103TP2700X", "103TP2701X", "103TR0400X", "103TS0200X", "103TW0100X", "104100000X", "1041C0700X", "1041S0200X", "106E00000X", "106H00000X", "106S00000X", "111N00000X", "111NI0013X", "111NI0900X", "111NN0400X", "111NN1001X", "111NP0017X", "111NR0200X", "111NR0400X", "111NS0005X", "111NT0100X", "111NX0100X", "111NX0800X", "122300000X", "1223D0001X", "1223D0004X", "1223E0200X", "1223G0001X", "1223P0106X", "1223P0221X", "1223P0300X", "1223P0700X", "1223S0112X", "1223X0008X", "1223X0400X", "1223X2210X", "122400000X", "124Q00000X", "125J00000X", "125K00000X", "125Q00000X", "126800000X", "126900000X", "132700000X", "133N00000X", "133NN1002X", "133V00000X", "133VN1004X", "133VN1005X", "133VN1006X", "133VN1101X", "133VN1201X", "133VN1301X", "133VN1401X", "133VN1501X", "136A00000X", "146D00000X", "146L00000X", "146M00000X", "146N00000X", "152W00000X", "152WC0802X", "152WL0500X", "152WP0200X", "152WS0006X", "152WV0400X", "152WX0102X", "156F00000X", "156FC0800X", "156FC0801X", "156FX1100X", "156FX1101X", "156FX1201X", "156FX1202X", "156FX1700X", "156FX1800X", "156FX1900X", "163W00000X", "163WA0400X", "163WA2000X", "163WC0200X", "163WC0400X", "163WC1400X", "163WC1500X", "163WC1600X", "163WC2100X", "163WC3500X", "163WD0400X", "163WD1100X", "163WE0003X", "163WE0900X", "163WF0300X", "163WG0000X", "163WG0100X", "163WG0600X", "163WH0200X", "163WH0500X", "163WH1000X", "163WI0500X", "163WI0600X", "163WL0100X", "163WM0102X", "163WM0705X", "163WM1400X", "163WN0002X", "163WN0003X", "163WN0300X", "163WN0800X", "163WN1003X", "163WP0000X", "163WP0200X", "163WP0218X", "163WP0807X", "163WP0808X", "163WP0809X", "163WP1700X", "163WP2201X", "163WR0006X", "163WR0400X", "163WR1000X", "163WS0121X", "163WS0200X", "163WU0100X", "163WW0000X", "163WW0101X", "163WX0002X", "163WX0003X", "163WX0106X", "163WX0200X", "163WX0601X", "163WX0800X", "163WX1100X", "163WX1500X", "164W00000X", "164X00000X", "167G00000X", "170100000X", "170300000X", "171400000X", "171000000X", "1710I1002X", "1710I1003X", "171100000X", "171M00000X", "171R00000X", "171W00000X", "171WH0202X", "171WV0202X", "172A00000X", "172M00000X", "172P00000X", "172V00000X", "173000000X", "173C00000X", "173F00000X", "174200000X", "174400000X", "1744G0900X", "1744P3200X", "1744R1102X", "1744R1103X", "174H00000X", "174M00000X", "174MM1900X", "174N00000X", "174V00000X", "175F00000X", "175L00000X", "175M00000X", "175T00000X", "176B00000X", "176P00000X", "177F00000X", "183500000X", "1835C0206X", "1835C0207X", "1835C0205X", "1835E0208X", "1835G0000X", "1835G0303X", "1835I0206X", "1835N0905X", "1835N1003X", "1835P0018X", "1835P0200X", "1835P1200X", "1835P1300X", "1835S0206X", "1835P2201X", "1835X0200X", "183700000X", "202C00000X", "202D00000X", "202K00000X", "204C00000X", "204D00000X", "204E00000X", "204F00000X", "204R00000X", "207K00000X", "207KA0200X", "207KI0005X", "207L00000X", "207LA0401X", "207LC0200X", "207LH0002X", "207LP2900X", "207LP3000X", "207N00000X", "207ND0101X", "207ND0900X", "207NI0002X", "207NP0225X", "207NS0135X", "207P00000X", "207PE0004X", "207PE0005X", "207PH0002X", "207PP0204X", "207PS0010X", "207PT0002X", "207Q00000X", "207QA0000X", "207QA0401X", "207QA0505X", "207QB0002X", "207QG0300X", "207QH0002X", "207QS0010X", "207QS1201X", "207R00000X", "207RA0000X", "207RA0001X", "207RA0002X", "207RA0201X", "207RA0401X", "207RB0002X", "207RC0000X", "207RC0001X", "207RC0200X", "207RE0101X", "207RG0100X", "207RG0300X", "207RH0000X", "207RH0002X", "207RH0003X", "207RH0005X", "207RI0001X", "207RI0008X", "207RI0011X", "207RI0200X", "207RM1200X", "207RN0300X", "207RP1001X", "207RR0500X", "207RS0010X", "207RS0012X", "207RT0003X", "207RX0202X", "207SC0300X", "207SG0201X", "207SG0202X", "207SG0203X", "207SG0207X", "207SG0205X", "207SM0001X", "207T00000X", "207U00000X", "207UN0901X", "207UN0902X", "207UN0903X", "207V00000X", "207VC0300X", "207VB0002X", "207VC0200X", "207VE0102X", "207VF0040X", "207VG0400X", "207VH0002X", "207VM0101X", "207VX0000X", "207VX0201X", "207W00000X", "207WX0009X", "207WX0107X", "207WX0108X", "207WX0109X", "207WX0110X", "207WX0120X", "207WX0200X", "207X00000X", "207XP3100X", "207XS0106X", "207XS0114X", "207XS0117X", "207XX0004X", "207XX0005X", "207XX0801X", "207Y00000X", "207YP0228X", "207YS0012X", "207YS0123X", "207YX0007X", "207YX0602X", "207YX0901X", "207YX0905X", "207ZB0001X", "207ZC0006X", "207ZC0008X", "207ZC0500X", "207ZD0900X", "207ZF0201X", "207ZH0000X", "207ZI0100X", "207ZM0300X", "207ZN0500X", "207ZP0007X", "207ZP0101X", "207ZP0102X", "207ZP0104X", "207ZP0105X", "207ZP0213X", "208000000X", "2080A0000X", "2080B0002X", "2080C0008X", "2080H0002X", "2080I0007X", "2080N0001X", "2080P0006X", "2080P0008X", "2080P0201X", "2080P0202X", "2080P0203X", "2080P0204X", "2080P0205X", "2080P0206X", "2080P0207X", "2080P0208X", "2080P0210X", "2080P0214X", "2080P0216X", "2080S0010X", "2080S0012X", "2080T0002X", "2080T0004X", "208100000X", "2081H0002X", "2081N0008X", "2081P0004X", "2081P0010X", "2081P0301X", "2081P2900X", "2081S0010X", "208200000X", "2082S0099X", "2082S0105X", "2083A0100X", "2083A0300X", "2083B0002X", "2083C0008X", "2083P0011X", "2083P0500X", "2083P0901X", "2083S0010X", "2083T0002X", "2083X0100X", "2084A0401X", "2084A2900X", "2084B0002X", "2084B0040X", "2084D0003X", "2084E0001X", "2084F0202X", "2084H0002X", "2084N0008X", "2084N0400X", "2084N0402X", "2084N0600X", "2084P0005X", "2084P0015X", "2084P0301X", "2084P0800X", "2084P0802X", "2084P0804X", "2084P0805X", "2084P2900X", "2084S0010X", "2084S0012X", "2084V0102X", "2085B0100X", "2085D0003X", "2085H0002X", "2085N0700X", "2085N0904X", "2085P0229X", "2085R0001X", "2085R0202X", "2085R0203X", "2085R0204X", "2085R0205X", "2085U0001X", "208600000X", "2086H0002X", "2086S0102X", "2086S0105X", "2086S0120X", "2086S0122X", "2086S0127X", "2086S0129X", "2086X0206X", "208800000X", "2088F0040X", "2088P0231X", "208C00000X", "208D00000X", "208G00000X", "208M00000X", "208U00000X", "208VP0000X", "208VP0014X", "209800000X", "211D00000X", "213E00000X", "213EG0000X", "213EP0504X", "213EP1101X", "213ER0200X", "213ES0000X", "213ES0103X", "213ES0131X", "221700000X", "222Q00000X", "222Z00000X", "224900000X", "224L00000X", "224P00000X", "224Y00000X", "224Z00000X", "224ZE0001X", "224ZF0002X", "224ZL0004X", "224ZR0403X", "225000000X", "225100000X", "2251C2600X", "2251E1200X", "2251E1300X", "2251G0304X", "2251H1200X", "2251H1300X", "2251N0400X", "2251P0200X", "2251S0007X", "2251X0800X", "225200000X", "225400000X", "225500000X", "2255A2300X", "2255R0406X", "225600000X", "225700000X", "225800000X", "225A00000X", "225B00000X", "225C00000X", "225CA2400X", "225CA2500X", "225CX0006X", "225X00000X", "225XE0001X", "225XE1200X", "225XF0002X", "225XG0600X", "225XH1200X", "225XH1300X", "225XL0004X", "225XM0800X", "225XN1300X", "225XP0019X", "225XP0200X", "225XR0403X", "226000000X", "226300000X", "227800000X", "2278C0205X", "2278E0002X", "2278E1000X", "2278G0305X", "2278G1100X", "2278H0200X", "2278P1004X", "2278P1005X", "2278P1006X", "2278P3800X", "2278P3900X", "2278P4000X", "2278S1500X", "227900000X", "2279C0205X", "2279E0002X", "2279E1000X", "2279G0305X", "2279G1100X", "2279H0200X", "2279P1004X", "2279P1005X", "2279P1006X", "2279P3800X", "2279P3900X", "2279P4000X", "2279S1500X", "229N00000X", "231H00000X", "231HA2400X", "231HA2500X", "235500000X", "2355A2700X", "2355S0801X", "235Z00000X", "237600000X", "237700000X", "242T00000X", "243U00000X", "246Q00000X", "246QB0000X", "246QC1000X", "246QC2700X", "246QH0000X", "246QH0401X", "246QH0600X", "246QI0000X", "246QL0900X", "246QL0901X", "246QM0706X", "246QM0900X", "246R00000X", "246RH0600X", "246RM2200X", "246RP1900X", "246W00000X", "246X00000X", "246XC2901X", "246XC2903X", "246XS1301X", "246Y00000X", "246YC3301X", "246YC3302X", "246YR1600X", "246Z00000X", "246ZA2600X", "246ZB0301X", "246ZB0302X", "246ZB0500X", "246ZB0600X", "246ZC0007X", "246ZE0500X", "246ZE0600X", "246ZG0701X", "246ZG1000X", "246ZI1000X", "246ZN0300X", "246ZS0410X", "246ZX2200X", "247000000X", "2470A2800X", "247100000X", "2471B0102X", "2471C1101X", "2471C1106X", "2471C3401X", "2471C3402X", "2471M1202X", "2471M2300X", "2471N0900X", "2471Q0001X", "2471R0002X", "2471S1302X", "2471V0105X", "2471V0106X", "247200000X", "2472B0301X", "2472D0500X", "2472E0500X", "2472R0900X", "2472V0600X", "247ZC0005X", "251300000X", "251B00000X", "251C00000X", "251E00000X", "251F00000X", "251G00000X", "251J00000X", "251K00000X", "251S00000X", "251T00000X", "251V00000X", "251X00000X", "252Y00000X", "253J00000X", "253Z00000X", "261Q00000X", "261QA0005X", "261QA0006X", "261QA0600X", "261QA0900X", "261QA1903X", "261QA3000X", "261QB0400X", "261QC0050X", "261QC1500X", "261QC1800X", "261QD0000X", "261QD1600X", "261QE0002X", "261QE0700X", "261QE0800X", "261QF0050X", "261QF0400X", "261QG0250X", "261QH0100X", "261QH0700X", "261QI0500X", "261QL0400X", "261QM0801X", "261QM0850X", "261QM0855X", "261QM1000X", "261QM1100X", "261QM1101X", "261QM1102X", "261QM1103X", "261QM1200X", "261QM1300X", "261QM2500X", "261QM2800X", "261QM3000X", "261QP0904X", "261QP0905X", "261QP1100X", "261QP2000X", "261QP2300X", "261QP2400X", "261QP3300X", "261QR0200X", "261QR0206X", "261QR0207X", "261QR0208X", "261QR0400X", "261QR0401X", "261QR0404X", "261QR0405X", "261QR0800X", "261QR1100X", "261QR1300X", "261QS0112X", "261QS0132X", "261QS1000X", "261QS1200X", "261QU0200X", "261QV0200X", "261QX0100X", "261QX0200X", "261QX0203X", "273100000X", "273R00000X", "273Y00000X", "275N00000X", "276400000X", "281P00000X", "281PC2000X", "282E00000X", "282J00000X", "282N00000X", "282NC0060X", "282NC2000X", "282NR1301X", "282NW0100X", "283Q00000X", "283X00000X", "283XC2000X", "284300000X", "286500000X", "2865C1500X", "2865M2000X", "2865X1600X", "287300000X", "291900000X", "291U00000X", "292200000X", "293D00000X", "302F00000X", "302R00000X", "305R00000X", "305S00000X", "310400000X", "3104A0625X", "3104A0630X", "310500000X", "311500000X", "311Z00000X", "311ZA0620X", "313M00000X", "314000000X", "3140N1450X", "315D00000X", "315P00000X", "317400000X", "320600000X", "320700000X", "320800000X", "320900000X", "322D00000X", "323P00000X", "324500000X", "3245S0500X", "331L00000X", "332000000X", "332100000X", "332800000X", "332900000X", "332B00000X", "332BC3200X", "332BD1200X", "332BN1400X", "332BP3500X", "332BX2000X", "332G00000X", "332H00000X", "332S00000X", "332U00000X", "333300000X", "333600000X", "3336C0002X", "3336C0003X", "3336C0004X", "3336H0001X", "3336I0012X", "3336L0003X", "3336M0002X", "3336M0003X", "3336N0007X", "3336S0011X", "335E00000X", "335G00000X", "335U00000X", "335V00000X", "341600000X", "3416A0800X", "3416L0300X", "3416S0300X", "341800000X", "3418M1110X", "3418M1120X", "3418M1130X", "343800000X", "343900000X", "344600000X", "344800000X", "347B00000X", "347C00000X", "347D00000X", "347E00000X", "342000000X", "363A00000X", "363AM0700X", "363AS0400X", "363L00000X", "363LA2100X", "363LA2200X", "363LC0200X", "363LC1500X", "363LF0000X", "363LG0600X", "363LN0000X", "363LN0005X", "363LP0200X", "363LP0222X", "363LP0808X", "363LP1700X", "363LP2300X", "363LS0200X", "363LW0102X", "363LX0001X", "363LX0106X", "364S00000X", "364SA2100X", "364SA2200X", "364SC0200X", "364SC1501X", "364SC2300X", "364SE0003X", "364SE1400X", "364SF0001X", "364SG0600X", "364SH0200X", "364SH1100X", "364SI0800X", "364SL0600X", "364SM0705X", "364SN0000X", "364SN0800X", "364SP0200X", "364SP0807X", "364SP0808X", "364SP0809X", "364SP0810X", "364SP0811X", "364SP0812X", "364SP0813X", "364SP1700X", "364SP2800X", "364SR0400X", "364SS0200X", "364ST0500X", "364SW0102X", "364SX0106X", "364SX0200X", "364SX0204X", "367500000X", "367A00000X", "367H00000X", "372500000X", "372600000X", "373H00000X", "374700000X", "3747A0650X", "3747P1801X", "374J00000X", "374K00000X", "374T00000X", "374U00000X", "376G00000X", "376J00000X", "376K00000X", "385H00000X", "385HR2050X", "385HR2055X", "385HR2060X", "385HR2065X", "390200000X", "405300000X"];
                        readonly type: "string";
                        readonly description: "`101Y00000X` `101YA0400X` `101YM0800X` `101YP1600X` `101YP2500X` `101YS0200X` `101200000X` `102L00000X` `102X00000X` `103G00000X` `103GC0700X` `103K00000X` `103T00000X` `103TA0400X` `103TA0700X` `103TB0200X` `103TC0700X` `103TC1900X` `103TC2200X` `103TE1000X` `103TE1100X` `103TF0000X` `103TF0200X` `103TH0004X` `103TH0100X` `103TM1700X` `103TM1800X` `103TP0016X` `103TP0814X` `103TP2700X` `103TP2701X` `103TR0400X` `103TS0200X` `103TW0100X` `104100000X` `1041C0700X` `1041S0200X` `106E00000X` `106H00000X` `106S00000X` `111N00000X` `111NI0013X` `111NI0900X` `111NN0400X` `111NN1001X` `111NP0017X` `111NR0200X` `111NR0400X` `111NS0005X` `111NT0100X` `111NX0100X` `111NX0800X` `122300000X` `1223D0001X` `1223D0004X` `1223E0200X` `1223G0001X` `1223P0106X` `1223P0221X` `1223P0300X` `1223P0700X` `1223S0112X` `1223X0008X` `1223X0400X` `1223X2210X` `122400000X` `124Q00000X` `125J00000X` `125K00000X` `125Q00000X` `126800000X` `126900000X` `132700000X` `133N00000X` `133NN1002X` `133V00000X` `133VN1004X` `133VN1005X` `133VN1006X` `133VN1101X` `133VN1201X` `133VN1301X` `133VN1401X` `133VN1501X` `136A00000X` `146D00000X` `146L00000X` `146M00000X` `146N00000X` `152W00000X` `152WC0802X` `152WL0500X` `152WP0200X` `152WS0006X` `152WV0400X` `152WX0102X` `156F00000X` `156FC0800X` `156FC0801X` `156FX1100X` `156FX1101X` `156FX1201X` `156FX1202X` `156FX1700X` `156FX1800X` `156FX1900X` `163W00000X` `163WA0400X` `163WA2000X` `163WC0200X` `163WC0400X` `163WC1400X` `163WC1500X` `163WC1600X` `163WC2100X` `163WC3500X` `163WD0400X` `163WD1100X` `163WE0003X` `163WE0900X` `163WF0300X` `163WG0000X` `163WG0100X` `163WG0600X` `163WH0200X` `163WH0500X` `163WH1000X` `163WI0500X` `163WI0600X` `163WL0100X` `163WM0102X` `163WM0705X` `163WM1400X` `163WN0002X` `163WN0003X` `163WN0300X` `163WN0800X` `163WN1003X` `163WP0000X` `163WP0200X` `163WP0218X` `163WP0807X` `163WP0808X` `163WP0809X` `163WP1700X` `163WP2201X` `163WR0006X` `163WR0400X` `163WR1000X` `163WS0121X` `163WS0200X` `163WU0100X` `163WW0000X` `163WW0101X` `163WX0002X` `163WX0003X` `163WX0106X` `163WX0200X` `163WX0601X` `163WX0800X` `163WX1100X` `163WX1500X` `164W00000X` `164X00000X` `167G00000X` `170100000X` `170300000X` `171400000X` `171000000X` `1710I1002X` `1710I1003X` `171100000X` `171M00000X` `171R00000X` `171W00000X` `171WH0202X` `171WV0202X` `172A00000X` `172M00000X` `172P00000X` `172V00000X` `173000000X` `173C00000X` `173F00000X` `174200000X` `174400000X` `1744G0900X` `1744P3200X` `1744R1102X` `1744R1103X` `174H00000X` `174M00000X` `174MM1900X` `174N00000X` `174V00000X` `175F00000X` `175L00000X` `175M00000X` `175T00000X` `176B00000X` `176P00000X` `177F00000X` `183500000X` `1835C0206X` `1835C0207X` `1835C0205X` `1835E0208X` `1835G0000X` `1835G0303X` `1835I0206X` `1835N0905X` `1835N1003X` `1835P0018X` `1835P0200X` `1835P1200X` `1835P1300X` `1835S0206X` `1835P2201X` `1835X0200X` `183700000X` `202C00000X` `202D00000X` `202K00000X` `204C00000X` `204D00000X` `204E00000X` `204F00000X` `204R00000X` `207K00000X` `207KA0200X` `207KI0005X` `207L00000X` `207LA0401X` `207LC0200X` `207LH0002X` `207LP2900X` `207LP3000X` `207N00000X` `207ND0101X` `207ND0900X` `207NI0002X` `207NP0225X` `207NS0135X` `207P00000X` `207PE0004X` `207PE0005X` `207PH0002X` `207PP0204X` `207PS0010X` `207PT0002X` `207Q00000X` `207QA0000X` `207QA0401X` `207QA0505X` `207QB0002X` `207QG0300X` `207QH0002X` `207QS0010X` `207QS1201X` `207R00000X` `207RA0000X` `207RA0001X` `207RA0002X` `207RA0201X` `207RA0401X` `207RB0002X` `207RC0000X` `207RC0001X` `207RC0200X` `207RE0101X` `207RG0100X` `207RG0300X` `207RH0000X` `207RH0002X` `207RH0003X` `207RH0005X` `207RI0001X` `207RI0008X` `207RI0011X` `207RI0200X` `207RM1200X` `207RN0300X` `207RP1001X` `207RR0500X` `207RS0010X` `207RS0012X` `207RT0003X` `207RX0202X` `207SC0300X` `207SG0201X` `207SG0202X` `207SG0203X` `207SG0207X` `207SG0205X` `207SM0001X` `207T00000X` `207U00000X` `207UN0901X` `207UN0902X` `207UN0903X` `207V00000X` `207VC0300X` `207VB0002X` `207VC0200X` `207VE0102X` `207VF0040X` `207VG0400X` `207VH0002X` `207VM0101X` `207VX0000X` `207VX0201X` `207W00000X` `207WX0009X` `207WX0107X` `207WX0108X` `207WX0109X` `207WX0110X` `207WX0120X` `207WX0200X` `207X00000X` `207XP3100X` `207XS0106X` `207XS0114X` `207XS0117X` `207XX0004X` `207XX0005X` `207XX0801X` `207Y00000X` `207YP0228X` `207YS0012X` `207YS0123X` `207YX0007X` `207YX0602X` `207YX0901X` `207YX0905X` `207ZB0001X` `207ZC0006X` `207ZC0008X` `207ZC0500X` `207ZD0900X` `207ZF0201X` `207ZH0000X` `207ZI0100X` `207ZM0300X` `207ZN0500X` `207ZP0007X` `207ZP0101X` `207ZP0102X` `207ZP0104X` `207ZP0105X` `207ZP0213X` `208000000X` `2080A0000X` `2080B0002X` `2080C0008X` `2080H0002X` `2080I0007X` `2080N0001X` `2080P0006X` `2080P0008X` `2080P0201X` `2080P0202X` `2080P0203X` `2080P0204X` `2080P0205X` `2080P0206X` `2080P0207X` `2080P0208X` `2080P0210X` `2080P0214X` `2080P0216X` `2080S0010X` `2080S0012X` `2080T0002X` `2080T0004X` `208100000X` `2081H0002X` `2081N0008X` `2081P0004X` `2081P0010X` `2081P0301X` `2081P2900X` `2081S0010X` `208200000X` `2082S0099X` `2082S0105X` `2083A0100X` `2083A0300X` `2083B0002X` `2083C0008X` `2083P0011X` `2083P0500X` `2083P0901X` `2083S0010X` `2083T0002X` `2083X0100X` `2084A0401X` `2084A2900X` `2084B0002X` `2084B0040X` `2084D0003X` `2084E0001X` `2084F0202X` `2084H0002X` `2084N0008X` `2084N0400X` `2084N0402X` `2084N0600X` `2084P0005X` `2084P0015X` `2084P0301X` `2084P0800X` `2084P0802X` `2084P0804X` `2084P0805X` `2084P2900X` `2084S0010X` `2084S0012X` `2084V0102X` `2085B0100X` `2085D0003X` `2085H0002X` `2085N0700X` `2085N0904X` `2085P0229X` `2085R0001X` `2085R0202X` `2085R0203X` `2085R0204X` `2085R0205X` `2085U0001X` `208600000X` `2086H0002X` `2086S0102X` `2086S0105X` `2086S0120X` `2086S0122X` `2086S0127X` `2086S0129X` `2086X0206X` `208800000X` `2088F0040X` `2088P0231X` `208C00000X` `208D00000X` `208G00000X` `208M00000X` `208U00000X` `208VP0000X` `208VP0014X` `209800000X` `211D00000X` `213E00000X` `213EG0000X` `213EP0504X` `213EP1101X` `213ER0200X` `213ES0000X` `213ES0103X` `213ES0131X` `221700000X` `222Q00000X` `222Z00000X` `224900000X` `224L00000X` `224P00000X` `224Y00000X` `224Z00000X` `224ZE0001X` `224ZF0002X` `224ZL0004X` `224ZR0403X` `225000000X` `225100000X` `2251C2600X` `2251E1200X` `2251E1300X` `2251G0304X` `2251H1200X` `2251H1300X` `2251N0400X` `2251P0200X` `2251S0007X` `2251X0800X` `225200000X` `225400000X` `225500000X` `2255A2300X` `2255R0406X` `225600000X` `225700000X` `225800000X` `225A00000X` `225B00000X` `225C00000X` `225CA2400X` `225CA2500X` `225CX0006X` `225X00000X` `225XE0001X` `225XE1200X` `225XF0002X` `225XG0600X` `225XH1200X` `225XH1300X` `225XL0004X` `225XM0800X` `225XN1300X` `225XP0019X` `225XP0200X` `225XR0403X` `226000000X` `226300000X` `227800000X` `2278C0205X` `2278E0002X` `2278E1000X` `2278G0305X` `2278G1100X` `2278H0200X` `2278P1004X` `2278P1005X` `2278P1006X` `2278P3800X` `2278P3900X` `2278P4000X` `2278S1500X` `227900000X` `2279C0205X` `2279E0002X` `2279E1000X` `2279G0305X` `2279G1100X` `2279H0200X` `2279P1004X` `2279P1005X` `2279P1006X` `2279P3800X` `2279P3900X` `2279P4000X` `2279S1500X` `229N00000X` `231H00000X` `231HA2400X` `231HA2500X` `235500000X` `2355A2700X` `2355S0801X` `235Z00000X` `237600000X` `237700000X` `242T00000X` `243U00000X` `246Q00000X` `246QB0000X` `246QC1000X` `246QC2700X` `246QH0000X` `246QH0401X` `246QH0600X` `246QI0000X` `246QL0900X` `246QL0901X` `246QM0706X` `246QM0900X` `246R00000X` `246RH0600X` `246RM2200X` `246RP1900X` `246W00000X` `246X00000X` `246XC2901X` `246XC2903X` `246XS1301X` `246Y00000X` `246YC3301X` `246YC3302X` `246YR1600X` `246Z00000X` `246ZA2600X` `246ZB0301X` `246ZB0302X` `246ZB0500X` `246ZB0600X` `246ZC0007X` `246ZE0500X` `246ZE0600X` `246ZG0701X` `246ZG1000X` `246ZI1000X` `246ZN0300X` `246ZS0410X` `246ZX2200X` `247000000X` `2470A2800X` `247100000X` `2471B0102X` `2471C1101X` `2471C1106X` `2471C3401X` `2471C3402X` `2471M1202X` `2471M2300X` `2471N0900X` `2471Q0001X` `2471R0002X` `2471S1302X` `2471V0105X` `2471V0106X` `247200000X` `2472B0301X` `2472D0500X` `2472E0500X` `2472R0900X` `2472V0600X` `247ZC0005X` `251300000X` `251B00000X` `251C00000X` `251E00000X` `251F00000X` `251G00000X` `251J00000X` `251K00000X` `251S00000X` `251T00000X` `251V00000X` `251X00000X` `252Y00000X` `253J00000X` `253Z00000X` `261Q00000X` `261QA0005X` `261QA0006X` `261QA0600X` `261QA0900X` `261QA1903X` `261QA3000X` `261QB0400X` `261QC0050X` `261QC1500X` `261QC1800X` `261QD0000X` `261QD1600X` `261QE0002X` `261QE0700X` `261QE0800X` `261QF0050X` `261QF0400X` `261QG0250X` `261QH0100X` `261QH0700X` `261QI0500X` `261QL0400X` `261QM0801X` `261QM0850X` `261QM0855X` `261QM1000X` `261QM1100X` `261QM1101X` `261QM1102X` `261QM1103X` `261QM1200X` `261QM1300X` `261QM2500X` `261QM2800X` `261QM3000X` `261QP0904X` `261QP0905X` `261QP1100X` `261QP2000X` `261QP2300X` `261QP2400X` `261QP3300X` `261QR0200X` `261QR0206X` `261QR0207X` `261QR0208X` `261QR0400X` `261QR0401X` `261QR0404X` `261QR0405X` `261QR0800X` `261QR1100X` `261QR1300X` `261QS0112X` `261QS0132X` `261QS1000X` `261QS1200X` `261QU0200X` `261QV0200X` `261QX0100X` `261QX0200X` `261QX0203X` `273100000X` `273R00000X` `273Y00000X` `275N00000X` `276400000X` `281P00000X` `281PC2000X` `282E00000X` `282J00000X` `282N00000X` `282NC0060X` `282NC2000X` `282NR1301X` `282NW0100X` `283Q00000X` `283X00000X` `283XC2000X` `284300000X` `286500000X` `2865C1500X` `2865M2000X` `2865X1600X` `287300000X` `291900000X` `291U00000X` `292200000X` `293D00000X` `302F00000X` `302R00000X` `305R00000X` `305S00000X` `310400000X` `3104A0625X` `3104A0630X` `310500000X` `311500000X` `311Z00000X` `311ZA0620X` `313M00000X` `314000000X` `3140N1450X` `315D00000X` `315P00000X` `317400000X` `320600000X` `320700000X` `320800000X` `320900000X` `322D00000X` `323P00000X` `324500000X` `3245S0500X` `331L00000X` `332000000X` `332100000X` `332800000X` `332900000X` `332B00000X` `332BC3200X` `332BD1200X` `332BN1400X` `332BP3500X` `332BX2000X` `332G00000X` `332H00000X` `332S00000X` `332U00000X` `333300000X` `333600000X` `3336C0002X` `3336C0003X` `3336C0004X` `3336H0001X` `3336I0012X` `3336L0003X` `3336M0002X` `3336M0003X` `3336N0007X` `3336S0011X` `335E00000X` `335G00000X` `335U00000X` `335V00000X` `341600000X` `3416A0800X` `3416L0300X` `3416S0300X` `341800000X` `3418M1110X` `3418M1120X` `3418M1130X` `343800000X` `343900000X` `344600000X` `344800000X` `347B00000X` `347C00000X` `347D00000X` `347E00000X` `342000000X` `363A00000X` `363AM0700X` `363AS0400X` `363L00000X` `363LA2100X` `363LA2200X` `363LC0200X` `363LC1500X` `363LF0000X` `363LG0600X` `363LN0000X` `363LN0005X` `363LP0200X` `363LP0222X` `363LP0808X` `363LP1700X` `363LP2300X` `363LS0200X` `363LW0102X` `363LX0001X` `363LX0106X` `364S00000X` `364SA2100X` `364SA2200X` `364SC0200X` `364SC1501X` `364SC2300X` `364SE0003X` `364SE1400X` `364SF0001X` `364SG0600X` `364SH0200X` `364SH1100X` `364SI0800X` `364SL0600X` `364SM0705X` `364SN0000X` `364SN0800X` `364SP0200X` `364SP0807X` `364SP0808X` `364SP0809X` `364SP0810X` `364SP0811X` `364SP0812X` `364SP0813X` `364SP1700X` `364SP2800X` `364SR0400X` `364SS0200X` `364ST0500X` `364SW0102X` `364SX0106X` `364SX0200X` `364SX0204X` `367500000X` `367A00000X` `367H00000X` `372500000X` `372600000X` `373H00000X` `374700000X` `3747A0650X` `3747P1801X` `374J00000X` `374K00000X` `374T00000X` `374U00000X` `376G00000X` `376J00000X` `376K00000X` `385H00000X` `385HR2050X` `385HR2055X` `385HR2060X` `385HR2065X` `390200000X` `405300000X`";
                    };
                };
                readonly mailing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly mailing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly mailing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly mailing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly mailing_phone: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_country: {
                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", ""];
                    readonly type: "string";
                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                };
                readonly billing_city: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_1: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_line_2: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_address_state: {
                    readonly type: "string";
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly billing_phone: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_fax: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly billing_name: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly billing_email: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly contact_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly routing_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly account_number: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly bank_line_1: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_line_2: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_postal_code_plus_4: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_city: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly bank_state: {
                    readonly type: readonly ["string", "null"];
                    readonly title: "State";
                    readonly maxLength: 255;
                };
                readonly bank_phone_number: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "id", "incorporation_state", "name", "npi", "tax_id_number"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1HospitalAffiliationsListHospitalAffiliations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly kind: {
                    readonly type: "string";
                    readonly enum: readonly ["1_admitting_privilege", "2_admitting_arrangement", "3_non_admitting_affiliation"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly primary_institution_flag: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly status: {
                    readonly type: "string";
                    readonly enum: readonly ["1_active", "2_pending", "3_inactive"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly kind: {
                                readonly enum: readonly ["1_admitting_privilege", "2_admitting_arrangement", "3_non_admitting_affiliation"];
                                readonly type: "string";
                                readonly description: "`1_admitting_privilege` `2_admitting_arrangement` `3_non_admitting_affiliation`";
                            };
                            readonly status: {
                                readonly enum: readonly ["1_active", "2_pending", "3_inactive"];
                                readonly type: "string";
                                readonly description: "`1_active` `2_pending` `3_inactive`";
                            };
                            readonly hospital_details: {
                                readonly readOnly: true;
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly description: "";
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly county: {
                                        readonly type: readonly ["string", "null"];
                                        readonly maxLength: 100;
                                    };
                                    readonly address_state: {
                                        readonly type: readonly ["string", "null"];
                                        readonly title: "State";
                                        readonly maxLength: 255;
                                    };
                                    readonly city: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly line_1: {
                                        readonly type: "string";
                                        readonly title: "Street Address Line 1";
                                        readonly maxLength: 255;
                                    };
                                    readonly line_2: {
                                        readonly type: "string";
                                        readonly title: "Street Address Line 2";
                                        readonly maxLength: 255;
                                    };
                                    readonly fax_number: {
                                        readonly type: "string";
                                        readonly maxLength: 32;
                                    };
                                    readonly phone_number: {
                                        readonly type: "string";
                                        readonly maxLength: 32;
                                    };
                                    readonly postal_code: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                    readonly email_address: {
                                        readonly type: "string";
                                        readonly format: "email";
                                        readonly maxLength: 128;
                                    };
                                    readonly medical_staff_fax_number: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly military_hospital_flag: {
                                        readonly type: "boolean";
                                    };
                                    readonly ambulatory_surgery_center_flag: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                            readonly start_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly department: {
                                readonly type: "string";
                                readonly maxLength: 100;
                            };
                            readonly admitting_privilege_type: {
                                readonly enum: readonly ["full_and_unrestricted", "temporary", "limited", ""];
                                readonly type: "string";
                                readonly description: "`full_and_unrestricted` `temporary` `limited`";
                            };
                            readonly primary_institution_flag: {
                                readonly type: "boolean";
                            };
                            readonly specialty_limitations_at_institution: {
                                readonly type: "string";
                            };
                            readonly unrestricted_privileges_flag: {
                                readonly type: "boolean";
                            };
                            readonly temporary_privileges_flag: {
                                readonly type: "boolean";
                            };
                            readonly admission_percent: {
                                readonly type: "string";
                                readonly maxLength: 100;
                            };
                            readonly privilege_restriction_explanation: {
                                readonly type: "string";
                            };
                            readonly application_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly exit_explanation: {
                                readonly type: "string";
                            };
                            readonly department_telephone_number: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly admits_per_month: {
                                readonly type: "string";
                                readonly maxLength: 50;
                            };
                            readonly associate_first_name: {
                                readonly type: "string";
                                readonly maxLength: 30;
                            };
                            readonly associate_last_name: {
                                readonly type: "string";
                                readonly maxLength: 70;
                            };
                            readonly associate_email_address: {
                                readonly type: "string";
                                readonly format: "email";
                                readonly maxLength: 100;
                            };
                            readonly associate_middle_initial: {
                                readonly type: "string";
                                readonly maxLength: 1;
                            };
                            readonly time_spent_percent_at_this_facility: {
                                readonly type: "string";
                                readonly maxLength: 100;
                            };
                            readonly admit_clients_from_practice_locations: {
                                readonly type: "string";
                                readonly maxLength: 100;
                            };
                            readonly admission_arranged_by: {
                                readonly enum: readonly ["provider_in_my_practice", "provider_not_in_my_practice", "hospitalist_group", "other", ""];
                                readonly type: "string";
                                readonly description: "`provider_in_my_practice` `provider_not_in_my_practice` `hospitalist_group` `other`";
                            };
                            readonly admitting_practitioner_first_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly admitting_practitioner_last_name: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly admitting_practitioner_specialty_match_flag: {
                                readonly type: "boolean";
                            };
                            readonly admitting_practitioner_phone_number: {
                                readonly type: "string";
                                readonly maxLength: 20;
                            };
                            readonly admitting_practitioner_email_address: {
                                readonly type: "string";
                                readonly format: "email";
                                readonly maxLength: 254;
                            };
                            readonly admitting_practitioner_npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly admitting_organization_name: {
                                readonly type: "string";
                                readonly maxLength: 100;
                            };
                            readonly admitting_organization_npi: {
                                readonly type: "string";
                                readonly maxLength: 10;
                            };
                            readonly admitting_organization_phone_number: {
                                readonly type: "string";
                                readonly maxLength: 20;
                            };
                            readonly admitting_organization_email_address: {
                                readonly type: "string";
                                readonly format: "email";
                                readonly maxLength: 254;
                            };
                            readonly admitting_arrangement_detail: {
                                readonly type: "string";
                            };
                            readonly non_admitting_affiliation_description: {
                                readonly type: "string";
                            };
                            readonly discontinuance_reason: {
                                readonly enum: readonly ["voluntary_resignation", "suspension", "termination_with_cause", "hospital_closed", ""];
                                readonly type: "string";
                                readonly description: "`voluntary_resignation` `suspension` `termination_with_cause` `hospital_closed`";
                            };
                        };
                        readonly required: readonly ["hospital_details", "id", "kind", "status"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1HospitalAffiliationsRetrieveHospitalAffiliations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this Hospital Affiliation.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly kind: {
                    readonly enum: readonly ["1_admitting_privilege", "2_admitting_arrangement", "3_non_admitting_affiliation"];
                    readonly type: "string";
                    readonly description: "`1_admitting_privilege` `2_admitting_arrangement` `3_non_admitting_affiliation`";
                };
                readonly status: {
                    readonly enum: readonly ["1_active", "2_pending", "3_inactive"];
                    readonly type: "string";
                    readonly description: "`1_active` `2_pending` `3_inactive`";
                };
                readonly hospital_details: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["name"];
                    readonly description: "";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly county: {
                            readonly type: readonly ["string", "null"];
                            readonly maxLength: 100;
                        };
                        readonly address_state: {
                            readonly type: readonly ["string", "null"];
                            readonly title: "State";
                            readonly maxLength: 255;
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly line_1: {
                            readonly type: "string";
                            readonly title: "Street Address Line 1";
                            readonly maxLength: 255;
                        };
                        readonly line_2: {
                            readonly type: "string";
                            readonly title: "Street Address Line 2";
                            readonly maxLength: 255;
                        };
                        readonly fax_number: {
                            readonly type: "string";
                            readonly maxLength: 32;
                        };
                        readonly phone_number: {
                            readonly type: "string";
                            readonly maxLength: 32;
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly email_address: {
                            readonly type: "string";
                            readonly format: "email";
                            readonly maxLength: 128;
                        };
                        readonly medical_staff_fax_number: {
                            readonly type: "string";
                            readonly maxLength: 10;
                        };
                        readonly military_hospital_flag: {
                            readonly type: "boolean";
                        };
                        readonly ambulatory_surgery_center_flag: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly start_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly department: {
                    readonly type: "string";
                    readonly maxLength: 100;
                };
                readonly admitting_privilege_type: {
                    readonly enum: readonly ["full_and_unrestricted", "temporary", "limited", ""];
                    readonly type: "string";
                    readonly description: "`full_and_unrestricted` `temporary` `limited`";
                };
                readonly primary_institution_flag: {
                    readonly type: "boolean";
                };
                readonly specialty_limitations_at_institution: {
                    readonly type: "string";
                };
                readonly unrestricted_privileges_flag: {
                    readonly type: "boolean";
                };
                readonly temporary_privileges_flag: {
                    readonly type: "boolean";
                };
                readonly admission_percent: {
                    readonly type: "string";
                    readonly maxLength: 100;
                };
                readonly privilege_restriction_explanation: {
                    readonly type: "string";
                };
                readonly application_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly exit_explanation: {
                    readonly type: "string";
                };
                readonly department_telephone_number: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly admits_per_month: {
                    readonly type: "string";
                    readonly maxLength: 50;
                };
                readonly associate_first_name: {
                    readonly type: "string";
                    readonly maxLength: 30;
                };
                readonly associate_last_name: {
                    readonly type: "string";
                    readonly maxLength: 70;
                };
                readonly associate_email_address: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 100;
                };
                readonly associate_middle_initial: {
                    readonly type: "string";
                    readonly maxLength: 1;
                };
                readonly time_spent_percent_at_this_facility: {
                    readonly type: "string";
                    readonly maxLength: 100;
                };
                readonly admit_clients_from_practice_locations: {
                    readonly type: "string";
                    readonly maxLength: 100;
                };
                readonly admission_arranged_by: {
                    readonly enum: readonly ["provider_in_my_practice", "provider_not_in_my_practice", "hospitalist_group", "other", ""];
                    readonly type: "string";
                    readonly description: "`provider_in_my_practice` `provider_not_in_my_practice` `hospitalist_group` `other`";
                };
                readonly admitting_practitioner_first_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly admitting_practitioner_last_name: {
                    readonly type: "string";
                    readonly maxLength: 255;
                };
                readonly admitting_practitioner_specialty_match_flag: {
                    readonly type: "boolean";
                };
                readonly admitting_practitioner_phone_number: {
                    readonly type: "string";
                    readonly maxLength: 20;
                };
                readonly admitting_practitioner_email_address: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 254;
                };
                readonly admitting_practitioner_npi: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly admitting_organization_name: {
                    readonly type: "string";
                    readonly maxLength: 100;
                };
                readonly admitting_organization_npi: {
                    readonly type: "string";
                    readonly maxLength: 10;
                };
                readonly admitting_organization_phone_number: {
                    readonly type: "string";
                    readonly maxLength: 20;
                };
                readonly admitting_organization_email_address: {
                    readonly type: "string";
                    readonly format: "email";
                    readonly maxLength: 254;
                };
                readonly admitting_arrangement_detail: {
                    readonly type: "string";
                };
                readonly non_admitting_affiliation_description: {
                    readonly type: "string";
                };
                readonly discontinuance_reason: {
                    readonly enum: readonly ["voluntary_resignation", "suspension", "termination_with_cause", "hospital_closed", ""];
                    readonly type: "string";
                    readonly description: "`voluntary_resignation` `suspension` `termination_with_cause` `hospital_closed`";
                };
            };
            readonly required: readonly ["hospital_details", "id", "kind", "status"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1LinesOfBusinessListLinesOfBusiness: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly label: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly title: "Line of Business Label";
                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                            };
                        };
                        readonly required: readonly ["id", "label"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsCredentialingFilesListCredentialing: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly credentialing_status: {
                    readonly type: "string";
                    readonly enum: readonly ["clear", "incomplete", "needs_attention", "null"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly organization: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly pdf: {
                                readonly type: "string";
                                readonly format: "uri";
                            };
                            readonly locked_by: {
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["email", "name"];
                                readonly readOnly: true;
                            };
                            readonly provider_credentialing_file_data: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                                readonly readOnly: true;
                            };
                            readonly initial_credentialing_service_request: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly recredentialing_service_request: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly credentialing_status: {
                                readonly enum: readonly ["clear", "needs_attention", "incomplete"];
                                readonly type: readonly ["string", "null"];
                                readonly readOnly: true;
                                readonly description: "`clear` `needs_attention` `incomplete`";
                            };
                        };
                        readonly required: readonly ["credentialing_status", "id", "initial_credentialing_service_request", "locked_by", "organization", "provider_credentialing_file_data", "recredentialing_service_request"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsCredentialingFilesRetrieveCredentialing: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this credentialing file.";
                };
                readonly organization_id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id", "organization_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly organization: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly pdf: {
                    readonly type: "string";
                    readonly format: "uri";
                };
                readonly locked_by: {
                    readonly type: readonly ["object", "null"];
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly email: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["email", "name"];
                    readonly readOnly: true;
                };
                readonly provider_credentialing_file_data: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly readOnly: true;
                };
                readonly initial_credentialing_service_request: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly recredentialing_service_request: {
                    readonly type: "string";
                    readonly format: "uuid";
                };
                readonly credentialing_status: {
                    readonly enum: readonly ["clear", "needs_attention", "incomplete"];
                    readonly type: readonly ["string", "null"];
                    readonly readOnly: true;
                    readonly description: "`clear` `needs_attention` `incomplete`";
                };
            };
            readonly required: readonly ["credentialing_status", "id", "initial_credentialing_service_request", "locked_by", "organization", "provider_credentialing_file_data", "recredentialing_service_request"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsCredentialingServiceRequestsCreateCredentialing: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider_id: {
                readonly type: "string";
                readonly minLength: 1;
            };
        };
        readonly required: readonly ["provider_id"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly provider_id: {
                    readonly type: "string";
                };
            };
            readonly required: readonly ["provider_id"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsCredentialingServiceRequestsListCredentialing: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly credentialing_status: {
                    readonly type: "string";
                    readonly enum: readonly ["clear", "incomplete", "needs_attention", "null"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly provider_id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly request_status: {
                    readonly type: "string";
                    readonly enum: readonly ["closed", "committee_approved", "committee_rejected", "file_expired", "in_committee", "intake_inprogress", "ready_for_committee", "scheduled", "verification_inprogress"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly requested_gte: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly readOnly: true;
                                    readonly type: "object";
                                    readonly required: readonly ["email", "full_name", "id", "profession"];
                                    readonly description: "";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly full_name: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                        };
                                        readonly email: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                        };
                                        readonly profession: {
                                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                                        };
                                    };
                                };
                                readonly request_status: {
                                    readonly enum: readonly ["scheduled", "intake_inprogress", "verification_inprogress", "ready_for_committee", "in_committee", "file_expired", "committee_approved", "committee_rejected", "closed"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`scheduled` `intake_inprogress` `verification_inprogress` `ready_for_committee` `in_committee` `file_expired` `committee_approved` `committee_rejected` `closed`";
                                };
                                readonly credentialing_file: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly requested: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly application_completed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly closed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly credentialing_status: {
                                    readonly enum: readonly ["clear", "needs_attention", "incomplete"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`clear` `needs_attention` `incomplete`";
                                };
                                readonly assignee: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly marked_ready_date: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly requested_states: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly state: {
                                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                            };
                                            readonly is_primary: {
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly is_par_with_medicaid: {
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                        };
                                        readonly description: "";
                                    };
                                };
                            };
                            readonly required: readonly ["assignee", "closed_on", "credentialing_file", "credentialing_status", "id", "marked_ready_date", "provider", "request_status", "requested"];
                            readonly description: "";
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly organization: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly provider: {
                                    readonly readOnly: true;
                                    readonly type: "object";
                                    readonly required: readonly ["email", "full_name", "id", "profession"];
                                    readonly description: "";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                            readonly readOnly: true;
                                        };
                                        readonly full_name: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                        };
                                        readonly email: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                        };
                                        readonly profession: {
                                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                                        };
                                    };
                                };
                                readonly request_status: {
                                    readonly enum: readonly ["scheduled", "intake_inprogress", "verification_inprogress", "ready_for_committee", "in_committee", "file_expired", "committee_approved", "committee_rejected", "closed"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`scheduled` `intake_inprogress` `verification_inprogress` `ready_for_committee` `in_committee` `file_expired` `committee_approved` `committee_rejected` `closed`";
                                };
                                readonly credentialing_file: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly requested: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly application_completed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                };
                                readonly closed_on: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly credentialing_status: {
                                    readonly enum: readonly ["clear", "needs_attention", "incomplete"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`clear` `needs_attention` `incomplete`";
                                };
                                readonly assignee: {
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                };
                                readonly marked_ready_date: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly requested_states: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly state: {
                                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                                            };
                                            readonly is_primary: {
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                            readonly is_par_with_medicaid: {
                                                readonly type: readonly ["boolean", "null"];
                                            };
                                        };
                                        readonly description: "";
                                    };
                                };
                                readonly recredentialing_deadline: {
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                                readonly recredentialing_start_date: {
                                    readonly type: "string";
                                    readonly format: "date";
                                };
                            };
                            readonly required: readonly ["assignee", "closed_on", "credentialing_file", "credentialing_status", "id", "marked_ready_date", "provider", "recredentialing_deadline", "recredentialing_start_date", "request_status", "requested"];
                            readonly description: "";
                        }];
                        readonly discriminator: {
                            readonly propertyName: "resourcetype";
                            readonly mapping: {
                                readonly InitialCredentialingServiceRequest: "#/components/schemas/InitialCredentialingServiceRequest";
                                readonly ReCredentialingServiceRequest: "#/components/schemas/ReCredentialingServiceRequest";
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsInvitesCreateInvites: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly membership_id: {
                readonly type: "string";
                readonly format: "uuid";
            };
        };
        readonly required: readonly ["membership_id"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }];
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly readOnly: true;
                };
                readonly membership: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
                readonly status: {
                    readonly enum: readonly ["in_progress", "completed", "invalid"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`in_progress` `completed` `invalid`";
                };
            };
            readonly required: readonly ["id", "status"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsInvitesListInvites: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "integer";
                                readonly readOnly: true;
                            };
                            readonly membership: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id"];
                                readonly description: "";
                            };
                            readonly status: {
                                readonly enum: readonly ["in_progress", "completed", "invalid"];
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly description: "`in_progress` `completed` `invalid`";
                            };
                        };
                        readonly required: readonly ["id", "status"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsInvitesResendCreateInvites: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1OrganizationsInvitesRevokeCreateInvites: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1OrganizationsMembersChangeEmailCreateMembers: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly new_email: {
                readonly type: "string";
                readonly format: "email";
                readonly minLength: 1;
            };
        };
        readonly required: readonly ["new_email"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1OrganizationsMembersCreateMembers: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly role: {
                readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                readonly type: "string";
            };
            readonly user: {
                readonly type: "object";
                readonly properties: {
                    readonly email: {
                        readonly type: "string";
                        readonly format: "email";
                        readonly minLength: 1;
                    };
                };
                readonly required: readonly ["email"];
                readonly description: "";
            };
            readonly provider: {
                readonly description: "";
                readonly type: "object";
                readonly properties: {
                    readonly profession: {
                        readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                        readonly type: "string";
                    };
                };
            };
        };
        readonly required: readonly ["user"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly role: {
                    readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                    readonly type: "string";
                    readonly description: "`provider` `admin` `super_provider` `auditor` `medical_staff_professional` `team_manager` `team_viewer` `team_manager_provider`";
                };
                readonly user: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                        };
                    };
                    readonly required: readonly ["email"];
                    readonly description: "";
                };
                readonly provider: {
                    readonly description: "";
                    readonly type: "object";
                    readonly required: readonly ["id"];
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly profession: {
                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                            readonly type: "string";
                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                        };
                    };
                };
                readonly is_active: {
                    readonly type: "boolean";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["id", "is_active", "user"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsMembersListMembers: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly is_active: {
                    readonly type: "boolean";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly user__email: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly role: {
                                readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                                readonly type: "string";
                                readonly description: "`provider` `admin` `super_provider` `auditor` `medical_staff_professional` `team_manager` `team_viewer` `team_manager_provider`";
                            };
                            readonly user: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly email: {
                                        readonly type: "string";
                                        readonly format: "email";
                                    };
                                };
                                readonly required: readonly ["email"];
                                readonly description: "";
                            };
                            readonly provider: {
                                readonly description: "";
                                readonly type: "object";
                                readonly required: readonly ["id"];
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                        readonly readOnly: true;
                                    };
                                    readonly profession: {
                                        readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                                        readonly type: "string";
                                        readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                                    };
                                };
                            };
                            readonly is_active: {
                                readonly type: "boolean";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["id", "is_active", "user"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsMembersPartialUpdateMembers: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly is_active: {
                readonly type: "boolean";
            };
        };
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly role: {
                    readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`provider` `admin` `super_provider` `auditor` `medical_staff_professional` `team_manager` `team_viewer` `team_manager_provider`";
                };
                readonly user: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["email"];
                    readonly description: "";
                    readonly properties: {
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                        };
                    };
                };
                readonly provider: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly profession: {
                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                            readonly type: "string";
                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                        };
                    };
                };
                readonly is_active: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["id", "provider", "role", "user"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsMembersRetrieveMembers: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly role: {
                    readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                    readonly type: "string";
                    readonly readOnly: true;
                    readonly description: "`provider` `admin` `super_provider` `auditor` `medical_staff_professional` `team_manager` `team_viewer` `team_manager_provider`";
                };
                readonly user: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["email"];
                    readonly description: "";
                    readonly properties: {
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                        };
                    };
                };
                readonly provider: {
                    readonly readOnly: true;
                    readonly type: readonly ["object", "null"];
                    readonly required: readonly ["id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly profession: {
                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                            readonly type: "string";
                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                        };
                    };
                };
                readonly is_active: {
                    readonly type: "boolean";
                };
            };
            readonly required: readonly ["id", "provider", "role", "user"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsMembershipsCreateMembers: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly role: {
                readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                readonly type: "string";
            };
            readonly user: {
                readonly type: "object";
                readonly properties: {
                    readonly email: {
                        readonly type: "string";
                        readonly format: "email";
                        readonly minLength: 1;
                    };
                };
                readonly required: readonly ["email"];
                readonly description: "";
            };
            readonly provider: {
                readonly type: "object";
                readonly properties: {
                    readonly profession: {
                        readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                        readonly type: "string";
                    };
                };
                readonly description: "";
            };
        };
        readonly required: readonly ["user"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly role: {
                    readonly enum: readonly ["provider", "admin", "super_provider", "auditor", "medical_staff_professional", "team_manager", "team_viewer", "team_manager_provider"];
                    readonly type: "string";
                    readonly description: "`provider` `admin` `super_provider` `auditor` `medical_staff_professional` `team_manager` `team_viewer` `team_manager_provider`";
                };
                readonly user: {
                    readonly type: "object";
                    readonly properties: {
                        readonly email: {
                            readonly type: "string";
                            readonly format: "email";
                        };
                    };
                    readonly required: readonly ["email"];
                    readonly description: "";
                };
                readonly provider: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                            readonly readOnly: true;
                        };
                        readonly profession: {
                            readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC", ""];
                            readonly type: "string";
                            readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly required: readonly ["id", "user"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsNewLicenseRequestCreateOrganizations: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly provider: {
                readonly type: "string";
            };
            readonly certificate_type: {
                readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                readonly type: "string";
            };
            readonly duration_type: {
                readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                readonly type: "string";
                readonly default: "permanent";
                readonly description: "Default: permanent";
            };
            readonly created: {
                readonly type: "string";
                readonly format: "date-time";
            };
            readonly is_medallion_owned: {
                readonly type: "boolean";
            };
            readonly license_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly dea_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly csr_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly prescriptive_authority_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly autonomous_registration_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly prescriptive_authority_checkbox_selected_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly rn_states: {
                readonly type: "array";
                readonly items: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                    readonly type: "string";
                };
            };
            readonly request_via_imlc: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly request_supporting_nlc: {
                readonly type: "boolean";
                readonly default: false;
            };
        };
        readonly required: readonly ["certificate_type", "provider"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: "string";
                };
                readonly certificate_type: {
                    readonly enum: readonly ["DO", "MD", "PA", "RN", "NP", "CNM", "PMHNP", "RNFA", "ACSW", "APCC", "BCBA", "BCaBA", "BHA", "BHARI", "COUNSELOR", "OD", "DPM", "DA", "DDS", "DEH", "DMD", "DPT", "PT", "PTA", "PBT", "LCADC", "MLADC", "LADC", "CCS", "LCAS", "LCAT", "LCMHC", "LCMHC-S", "LCMHCA", "LCPC", "LCSW", "LSW", "LCSWA", "LICSW", "LIMHP-CSW", "LIMHP-CMSW", "LIMHP", "LISW", "LMFT", "LMFT-S", "LMFTA", "LMHC", "LMSW", "LPC", "LPC-C", "LPCA", "LPCC", "LPCI", "LSCSW", "MFTA", "MHCA", "MHT", "OMS", "ORTH", "OT", "OTA", "OTHER", "RD", "RPh", "PhT", "PhD", "PsyD", "RBT", "RCSWI", "RHMCI", "SLP", "LPN", "LAc", "LMT", "DC", "ND", "MA", "LPCMH", "LIMHP-CPC", "LPC-MH", "LPC/MHSP", "CMHC", "ALC", "LAC", "LACMH", "LAPC", "ACMHC", "LMHCA", "LGPC", "CSW", "LCSW-C", "ISW", "LISW-CP", "CSW-PIP", "CISW", "MLSW", "CMSW", "LGSW", "LASW", "APSW", "RT", "AUD", "CRNA", "OPTHAMOLOGIST", "OPA", "CP-A", "AT", "FITNESS-PROFESSI", "EMR", "EMT", "EMT-A", "LVN", "MLT", "NMT", "LN", "OPT", "OTHER-ALLIED-HEA", "PAR", "PHARMACY-ASSISTA", "PI", "PODIATRIC-ASSIST", "RADIOLOGY-TECH", "ACU", "DT", "MOT", "MPT", "MT", "OTD", "OTR/L", "RDN", "SLP-CF", "SLPD", "ATC", "COTA", "LMPC", "ORT", "SLPA", "MT-BC"];
                    readonly type: "string";
                    readonly description: "`DO` `MD` `PA` `RN` `NP` `CNM` `PMHNP` `RNFA` `ACSW` `APCC` `BCBA` `BCaBA` `BHA` `BHARI` `COUNSELOR` `OD` `DPM` `DA` `DDS` `DEH` `DMD` `DPT` `PT` `PTA` `PBT` `LCADC` `MLADC` `LADC` `CCS` `LCAS` `LCAT` `LCMHC` `LCMHC-S` `LCMHCA` `LCPC` `LCSW` `LSW` `LCSWA` `LICSW` `LIMHP-CSW` `LIMHP-CMSW` `LIMHP` `LISW` `LMFT` `LMFT-S` `LMFTA` `LMHC` `LMSW` `LPC` `LPC-C` `LPCA` `LPCC` `LPCI` `LSCSW` `MFTA` `MHCA` `MHT` `OMS` `ORTH` `OT` `OTA` `OTHER` `RD` `RPh` `PhT` `PhD` `PsyD` `RBT` `RCSWI` `RHMCI` `SLP` `LPN` `LAc` `LMT` `DC` `ND` `MA` `LPCMH` `LIMHP-CPC` `LPC-MH` `LPC/MHSP` `CMHC` `ALC` `LAC` `LACMH` `LAPC` `ACMHC` `LMHCA` `LGPC` `CSW` `LCSW-C` `ISW` `LISW-CP` `CSW-PIP` `CISW` `MLSW` `CMSW` `LGSW` `LASW` `APSW` `RT` `AUD` `CRNA` `OPTHAMOLOGIST` `OPA` `CP-A` `AT` `FITNESS-PROFESSI` `EMR` `EMT` `EMT-A` `LVN` `MLT` `NMT` `LN` `OPT` `OTHER-ALLIED-HEA` `PAR` `PHARMACY-ASSISTA` `PI` `PODIATRIC-ASSIST` `RADIOLOGY-TECH` `ACU` `DT` `MOT` `MPT` `MT` `OTD` `OTR/L` `RDN` `SLP-CF` `SLPD` `ATC` `COTA` `LMPC` `ORT` `SLPA` `MT-BC`";
                };
                readonly duration_type: {
                    readonly enum: readonly ["permanent", "training", "temporary", "limited", "telemedicine", "prescriptive_authority", "autonomous_registration", "multistate"];
                    readonly type: "string";
                    readonly default: "permanent";
                    readonly description: "`permanent` `training` `temporary` `limited` `telemedicine` `prescriptive_authority` `autonomous_registration` `multistate`";
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly license_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly dea_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly csr_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly prescriptive_authority_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly autonomous_registration_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly prescriptive_authority_checkbox_selected_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly rn_states: {
                    readonly type: "array";
                    readonly items: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "MP", "AS"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `MP` `AS`";
                    };
                };
                readonly request_via_imlc: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly request_supporting_nlc: {
                    readonly type: "boolean";
                    readonly default: false;
                };
            };
            readonly required: readonly ["certificate_type", "id", "provider"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1OrganizationsPrimarySourceVerificationsListOrganizations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly organization_id: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly ["organization_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly board_certificate__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly kind: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly license__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly medical_program__id: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly provider__id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly stage: {
                    readonly type: "string";
                    readonly enum: readonly ["completed_successfully", "failed_to_complete", "in_progress", "requested"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly kind: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly verified_by: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "integer";
                                        readonly readOnly: true;
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                        readonly format: "email";
                                        readonly description: "Changing the User email is possible from our Email Change page in Django Admin. This action will revoke any Pending invitations and resend to the new email. Please make sure you want to take this action.";
                                        readonly maxLength: 255;
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly maxLength: 255;
                                    };
                                };
                                readonly required: readonly ["email", "id"];
                                readonly description: "";
                            };
                            readonly verified_at: {
                                readonly type: "string";
                                readonly format: "date-time";
                            };
                            readonly stage: {
                                readonly enum: readonly ["requested", "in_progress", "completed_successfully", "failed_to_complete"];
                                readonly type: "string";
                                readonly description: "`requested` `in_progress` `completed_successfully` `failed_to_complete`";
                            };
                            readonly failure_reason: {
                                readonly type: "string";
                            };
                            readonly confirmation: {
                                readonly type: readonly ["object", "null"];
                                readonly required: readonly ["confirmed_by"];
                                readonly description: "";
                                readonly properties: {
                                    readonly confirmed_by: {
                                        readonly type: "integer";
                                    };
                                    readonly confirmed_at: {
                                        readonly type: "string";
                                        readonly format: "date-time";
                                    };
                                    readonly signature: {
                                        readonly type: "object";
                                        readonly required: readonly ["id", "title"];
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                            };
                                            readonly content: {
                                                readonly type: readonly ["object", "null"];
                                                readonly readOnly: true;
                                                readonly properties: {
                                                    readonly public_id: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly resource_type: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly url: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly format: "uri";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly format: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                };
                                            };
                                            readonly secure_content: {
                                                readonly type: readonly ["object", "null"];
                                                readonly readOnly: true;
                                                readonly properties: {
                                                    readonly public_id: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly resource_type: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                    readonly url: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly format: "uri";
                                                        readonly readOnly: true;
                                                    };
                                                    readonly format: {
                                                        readonly type: readonly ["string", "null"];
                                                        readonly readOnly: true;
                                                    };
                                                };
                                            };
                                            readonly time_limited_url: {
                                                readonly type: readonly ["string", "null"];
                                                readonly format: "uri";
                                                readonly readOnly: true;
                                            };
                                        };
                                    };
                                };
                            };
                            readonly provider: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly organization: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly license: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly medical_program: {
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly board_certificate: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly evidences: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly source: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly source_name: {
                                                    readonly type: "string";
                                                    readonly maxLength: 255;
                                                };
                                                readonly source_website: {
                                                    readonly type: "string";
                                                    readonly format: "uri";
                                                    readonly maxLength: 2048;
                                                };
                                                readonly method_of_retrieval: {
                                                    readonly enum: readonly ["web", "api", "flat_file"];
                                                    readonly type: "string";
                                                    readonly description: "`web` `api` `flat_file`";
                                                };
                                            };
                                            readonly required: readonly ["method_of_retrieval", "source_name", "source_website"];
                                            readonly description: "";
                                        };
                                        readonly document: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly title: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                };
                                                readonly content: {
                                                    readonly type: readonly ["object", "null"];
                                                    readonly readOnly: true;
                                                    readonly properties: {
                                                        readonly public_id: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                        readonly resource_type: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                        readonly url: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly format: "uri";
                                                            readonly readOnly: true;
                                                        };
                                                        readonly format: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                    };
                                                };
                                                readonly secure_content: {
                                                    readonly type: readonly ["object", "null"];
                                                    readonly readOnly: true;
                                                    readonly properties: {
                                                        readonly public_id: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                        readonly resource_type: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                        readonly url: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly format: "uri";
                                                            readonly readOnly: true;
                                                        };
                                                        readonly format: {
                                                            readonly type: readonly ["string", "null"];
                                                            readonly readOnly: true;
                                                        };
                                                    };
                                                };
                                                readonly time_limited_url: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly format: "uri";
                                                    readonly readOnly: true;
                                                };
                                            };
                                            readonly required: readonly ["id", "title"];
                                        };
                                        readonly json: {
                                            readonly type: readonly ["object", "null"];
                                            readonly additionalProperties: true;
                                        };
                                        readonly string: {
                                            readonly type: "string";
                                        };
                                        readonly url: {
                                            readonly type: "string";
                                            readonly format: "uri";
                                            readonly maxLength: 2048;
                                        };
                                        readonly issues: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly enum: readonly ["license_expired", "license_inactive", "needs_attention", "sanction_found", "missing_evidence", "medicare_opt_out_found", "expired", "invalid_date", "not_found", "has_disciplinary_action", "inactive", "mismatched_license_expiration_date", "possible_sanction_found", "mismatched_education_degree_title", "mismatched_education_degree_level", "mismatched_dea_license_state", "adverse_background_check_result"];
                                                        readonly type: "string";
                                                        readonly description: "`license_expired` `license_inactive` `needs_attention` `sanction_found` `missing_evidence` `medicare_opt_out_found` `expired` `invalid_date` `not_found` `has_disciplinary_action` `inactive` `mismatched_license_expiration_date` `possible_sanction_found` `mismatched_education_degree_title` `mismatched_education_degree_level` `mismatched_dea_license_state` `adverse_background_check_result`";
                                                    };
                                                    readonly description: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly required: readonly ["description", "type"];
                                                readonly description: "";
                                            };
                                        };
                                    };
                                    readonly description: "";
                                };
                            };
                            readonly issues: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly type: {
                                            readonly enum: readonly ["license_expired", "license_inactive", "needs_attention", "sanction_found", "missing_evidence", "medicare_opt_out_found", "expired", "invalid_date", "not_found", "has_disciplinary_action", "inactive", "mismatched_license_expiration_date", "possible_sanction_found", "mismatched_education_degree_title", "mismatched_education_degree_level", "mismatched_dea_license_state", "adverse_background_check_result"];
                                            readonly type: "string";
                                            readonly description: "`license_expired` `license_inactive` `needs_attention` `sanction_found` `missing_evidence` `medicare_opt_out_found` `expired` `invalid_date` `not_found` `has_disciplinary_action` `inactive` `mismatched_license_expiration_date` `possible_sanction_found` `mismatched_education_degree_title` `mismatched_education_degree_level` `mismatched_dea_license_state` `adverse_background_check_result`";
                                        };
                                        readonly description: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly required: readonly ["description", "type"];
                                    readonly description: "";
                                };
                            };
                            readonly status: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["id", "kind", "organization", "stage", "verified_by"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PayerEnrollmentsCreatePayerEnrollments: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly provider: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly group_profile: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly facility: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly kind: {
                readonly enum: readonly ["group-profile", "provider", "facility"];
                readonly type: "string";
            };
            readonly payer_name: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly payer_entity: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                readonly type: "string";
            };
            readonly par_status: {
                readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly payer_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly practices: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly country: {
                            readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                            readonly type: readonly ["string", "null"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly county: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly line_1: {
                            readonly type: "string";
                            readonly title: "Street Address Line 1";
                            readonly maxLength: 255;
                        };
                        readonly line_2: {
                            readonly type: "string";
                            readonly title: "Street Address Line 2";
                            readonly maxLength: 255;
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly postal_code_plus_4: {
                            readonly type: readonly ["string", "null"];
                            readonly maxLength: 255;
                        };
                        readonly address_state: {
                            readonly type: readonly ["string", "null"];
                            readonly title: "State";
                            readonly maxLength: 255;
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly lines_of_business: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly revalidation_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly required: readonly ["effective_date", "kind", "par_status", "payer_id", "payer_name", "revalidation_date", "state"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly kind: {
                    readonly enum: readonly ["group-profile", "provider", "facility"];
                    readonly type: "string";
                    readonly description: "`group-profile` `provider` `facility`";
                };
                readonly payer_name: {
                    readonly type: "string";
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`non-par` `par` `par_not_linked_to_group` `par_linked_to_group`";
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly label: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly title: "Line of Business Label";
                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                            };
                        };
                        readonly required: readonly ["id", "label"];
                        readonly description: "";
                    };
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly revalidation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly last_updated_at: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "effective_date", "id", "kind", "last_updated_at", "par_status", "payer_id", "payer_name", "revalidation_date", "state"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PayerEnrollmentsListPayerEnrollments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly created_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly facility: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly last_updated_at_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last_updated_at datetime in the format YYYY-MM-DD (inclusive)";
                };
                readonly last_updated_at_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last_updated_at datetime in the format YYYY-MM-DD (inclusive)";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly lines_of_business: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly payer_entity: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly provider: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly group_profile: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly facility: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly kind: {
                                readonly enum: readonly ["group-profile", "provider", "facility"];
                                readonly type: "string";
                                readonly description: "`group-profile` `provider` `facility`";
                            };
                            readonly payer_name: {
                                readonly type: "string";
                            };
                            readonly payer_entity: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "uuid";
                            };
                            readonly state: {
                                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                                readonly type: "string";
                                readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                            };
                            readonly par_status: {
                                readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`non-par` `par` `par_not_linked_to_group` `par_linked_to_group`";
                            };
                            readonly payer_id: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly practices: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly country: {
                                            readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                            readonly type: readonly ["string", "null"];
                                            readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                        };
                                        readonly city: {
                                            readonly type: "string";
                                            readonly maxLength: 255;
                                        };
                                        readonly county: {
                                            readonly type: "string";
                                            readonly maxLength: 255;
                                        };
                                        readonly line_1: {
                                            readonly type: "string";
                                            readonly title: "Street Address Line 1";
                                            readonly maxLength: 255;
                                        };
                                        readonly line_2: {
                                            readonly type: "string";
                                            readonly title: "Street Address Line 2";
                                            readonly maxLength: 255;
                                        };
                                        readonly postal_code: {
                                            readonly type: "string";
                                            readonly maxLength: 255;
                                        };
                                        readonly postal_code_plus_4: {
                                            readonly type: readonly ["string", "null"];
                                            readonly maxLength: 255;
                                        };
                                        readonly address_state: {
                                            readonly type: readonly ["string", "null"];
                                            readonly title: "State";
                                            readonly maxLength: 255;
                                        };
                                    };
                                    readonly required: readonly ["id"];
                                    readonly description: "";
                                };
                            };
                            readonly lines_of_business: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly id: {
                                            readonly type: "string";
                                            readonly format: "uuid";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                            readonly readOnly: true;
                                            readonly title: "Line of Business Label";
                                            readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                        };
                                    };
                                    readonly required: readonly ["id", "label"];
                                    readonly description: "";
                                };
                            };
                            readonly effective_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly end_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly revalidation_date: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date";
                            };
                            readonly last_updated_at: {
                                readonly type: readonly ["string", "null"];
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                            readonly created: {
                                readonly type: "string";
                                readonly format: "date-time";
                                readonly readOnly: true;
                            };
                        };
                        readonly required: readonly ["created", "effective_date", "id", "kind", "last_updated_at", "par_status", "payer_id", "payer_name", "revalidation_date", "state"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PayerEnrollmentsPartialUpdatePayerEnrollments: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly provider: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly group_profile: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly facility: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly kind: {
                readonly enum: readonly ["group-profile", "provider", "facility"];
                readonly type: "string";
            };
            readonly payer_entity: {
                readonly type: readonly ["string", "null"];
                readonly format: "uuid";
            };
            readonly state: {
                readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                readonly type: "string";
            };
            readonly par_status: {
                readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                readonly type: readonly ["string", "null"];
            };
            readonly payer_id: {
                readonly type: readonly ["string", "null"];
                readonly maxLength: 255;
            };
            readonly practices: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly country: {
                            readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                            readonly type: readonly ["string", "null"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly county: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly line_1: {
                            readonly type: "string";
                            readonly title: "Street Address Line 1";
                            readonly maxLength: 255;
                        };
                        readonly line_2: {
                            readonly type: "string";
                            readonly title: "Street Address Line 2";
                            readonly maxLength: 255;
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly maxLength: 255;
                        };
                        readonly postal_code_plus_4: {
                            readonly type: readonly ["string", "null"];
                            readonly maxLength: 255;
                        };
                        readonly address_state: {
                            readonly type: readonly ["string", "null"];
                            readonly title: "State";
                            readonly maxLength: 255;
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly lines_of_business: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                    };
                    readonly required: readonly ["id"];
                    readonly description: "";
                };
            };
            readonly effective_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly end_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
            readonly revalidation_date: {
                readonly type: readonly ["string", "null"];
                readonly format: "date";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this payer enrollment.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly kind: {
                    readonly enum: readonly ["group-profile", "provider", "facility"];
                    readonly type: "string";
                    readonly description: "`group-profile` `provider` `facility`";
                };
                readonly payer_name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`non-par` `par` `par_not_linked_to_group` `par_linked_to_group`";
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly label: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly title: "Line of Business Label";
                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                            };
                        };
                        readonly required: readonly ["id", "label"];
                        readonly description: "";
                    };
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly revalidation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly last_updated_at: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "effective_date", "id", "kind", "last_updated_at", "par_status", "payer_id", "payer_name", "revalidation_date", "state"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PayerEnrollmentsRetrievePayerEnrollments: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this payer enrollment.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly kind: {
                    readonly enum: readonly ["group-profile", "provider", "facility"];
                    readonly type: "string";
                    readonly description: "`group-profile` `provider` `facility`";
                };
                readonly payer_name: {
                    readonly type: "string";
                    readonly readOnly: true;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA", ""];
                    readonly type: "string";
                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                    readonly description: "`non-par` `par` `par_not_linked_to_group` `par_linked_to_group`";
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly label: {
                                readonly type: "string";
                                readonly readOnly: true;
                                readonly title: "Line of Business Label";
                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                            };
                        };
                        readonly required: readonly ["id", "label"];
                        readonly description: "";
                    };
                };
                readonly effective_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly end_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly revalidation_date: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date";
                };
                readonly last_updated_at: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
                readonly created: {
                    readonly type: "string";
                    readonly format: "date-time";
                    readonly readOnly: true;
                };
            };
            readonly required: readonly ["created", "effective_date", "id", "kind", "last_updated_at", "par_status", "payer_id", "payer_name", "revalidation_date", "state"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PracticeGroupAssociationsCreatePracticeGroups: {
    readonly body: {
        readonly type: "object";
        readonly description: "";
        readonly properties: {
            readonly practice: {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly practice_npis: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly npi: {
                                    readonly type: "string";
                                    readonly minLength: 1;
                                    readonly maxLength: 10;
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                            };
                            readonly required: readonly ["npi"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["id"];
                readonly description: "";
            };
            readonly group_profile: {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["id"];
                readonly description: "";
            };
        };
        readonly required: readonly ["group_profile", "practice"];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly practice: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly practice_npis: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly npi: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly lines_of_business: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                    readonly title: "Line of Business Label";
                                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                };
                                            };
                                            readonly required: readonly ["id", "label"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["npi"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["id", "name"];
                    readonly description: "";
                };
                readonly group_profile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "name", "npi"];
                    readonly description: "";
                };
            };
            readonly required: readonly ["group_profile", "id", "practice"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PracticeGroupAssociationsDestroyPracticeGroups: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this practice group association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1PracticeGroupAssociationsListPracticeGroups: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly description: "";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly practice: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly practice_npis: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly npi: {
                                                    readonly type: "string";
                                                    readonly maxLength: 10;
                                                };
                                                readonly lines_of_business: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly type: "string";
                                                                readonly format: "uuid";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                                readonly readOnly: true;
                                                                readonly title: "Line of Business Label";
                                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "label"];
                                                        readonly description: "";
                                                    };
                                                };
                                            };
                                            readonly required: readonly ["npi"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["id", "name"];
                                readonly description: "";
                            };
                            readonly group_profile: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly npi: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "name", "npi"];
                                readonly description: "";
                            };
                        };
                        readonly required: readonly ["group_profile", "id", "practice"];
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1PracticeGroupAssociationsRetrievePracticeGroups: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this practice group association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly practice: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly practice_npis: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly npi: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly lines_of_business: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                    readonly title: "Line of Business Label";
                                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                };
                                            };
                                            readonly required: readonly ["id", "label"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["npi"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["id", "name"];
                    readonly description: "";
                };
                readonly group_profile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "name", "npi"];
                    readonly description: "";
                };
            };
            readonly required: readonly ["group_profile", "id", "practice"];
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ProviderPracticeGroupAssociationsCreateProviderPracticeGroupAssociations: {
    readonly body: {
        readonly type: "object";
        readonly properties: {
            readonly practice: {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                    readonly practice_npis: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly npi: {
                                    readonly type: "string";
                                    readonly minLength: 1;
                                    readonly maxLength: 10;
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                            };
                            readonly required: readonly ["npi"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["id"];
                readonly description: "";
            };
            readonly group_profile: {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["id"];
                readonly description: "";
            };
            readonly provider: {
                readonly type: "object";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["id"];
                readonly description: "";
            };
        };
        readonly required: readonly ["group_profile", "practice", "provider"];
        readonly description: "";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly type: "object";
            readonly properties: {
                readonly practice: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly practice_npis: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly npi: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly lines_of_business: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                    readonly title: "Line of Business Label";
                                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                };
                                            };
                                            readonly required: readonly ["id", "label"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["npi"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["id", "name"];
                    readonly description: "";
                };
                readonly group_profile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "name", "npi"];
                    readonly description: "";
                };
                readonly provider: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly full_name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["full_name", "id", "npi"];
                    readonly description: "";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly metadata: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly credentialing_group_effective_date: {
                            readonly type: "string";
                            readonly format: "date";
                        };
                    };
                };
            };
            readonly required: readonly ["group_profile", "id", "metadata", "practice", "provider"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ProviderPracticeGroupAssociationsDestroyProviderPracticeGroupAssociations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider practice group association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
};
declare const PApiV1ProviderPracticeGroupAssociationsListProviderPracticeGroupAssociations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly practice: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly practice_npis: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly npi: {
                                                    readonly type: "string";
                                                    readonly maxLength: 10;
                                                };
                                                readonly lines_of_business: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly id: {
                                                                readonly type: "string";
                                                                readonly format: "uuid";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                                readonly readOnly: true;
                                                                readonly title: "Line of Business Label";
                                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                            };
                                                        };
                                                        readonly required: readonly ["id", "label"];
                                                        readonly description: "";
                                                    };
                                                };
                                            };
                                            readonly required: readonly ["npi"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["id", "name"];
                                readonly description: "";
                            };
                            readonly group_profile: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly npi: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["id", "name", "npi"];
                                readonly description: "";
                            };
                            readonly provider: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly full_name: {
                                        readonly type: "string";
                                        readonly readOnly: true;
                                    };
                                    readonly npi: {
                                        readonly type: readonly ["integer", "null"];
                                        readonly readOnly: true;
                                    };
                                };
                                readonly required: readonly ["full_name", "id", "npi"];
                                readonly description: "";
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                                readonly readOnly: true;
                            };
                            readonly metadata: {
                                readonly readOnly: true;
                                readonly type: "object";
                                readonly required: readonly ["id"];
                                readonly description: "";
                                readonly properties: {
                                    readonly id: {
                                        readonly type: "string";
                                        readonly format: "uuid";
                                    };
                                    readonly credentialing_group_effective_date: {
                                        readonly type: "string";
                                        readonly format: "date";
                                    };
                                };
                            };
                        };
                        readonly required: readonly ["group_profile", "id", "metadata", "practice", "provider"];
                        readonly description: "";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ProviderPracticeGroupAssociationsRetrieveProviderPracticeGroupAssociations: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this provider practice group association.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly practice: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly practice_npis: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly npi: {
                                        readonly type: "string";
                                        readonly maxLength: 10;
                                    };
                                    readonly lines_of_business: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly format: "uuid";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                    readonly readOnly: true;
                                                    readonly title: "Line of Business Label";
                                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                                };
                                            };
                                            readonly required: readonly ["id", "label"];
                                            readonly description: "";
                                        };
                                    };
                                };
                                readonly required: readonly ["npi"];
                                readonly description: "";
                            };
                        };
                    };
                    readonly required: readonly ["id", "name"];
                    readonly description: "";
                };
                readonly group_profile: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["id", "name", "npi"];
                    readonly description: "";
                };
                readonly provider: {
                    readonly type: "object";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly full_name: {
                            readonly type: "string";
                            readonly readOnly: true;
                        };
                        readonly npi: {
                            readonly type: readonly ["integer", "null"];
                            readonly readOnly: true;
                        };
                    };
                    readonly required: readonly ["full_name", "id", "npi"];
                    readonly description: "";
                };
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly readOnly: true;
                };
                readonly metadata: {
                    readonly readOnly: true;
                    readonly type: "object";
                    readonly required: readonly ["id"];
                    readonly description: "";
                    readonly properties: {
                        readonly id: {
                            readonly type: "string";
                            readonly format: "uuid";
                        };
                        readonly credentialing_group_effective_date: {
                            readonly type: "string";
                            readonly format: "date";
                        };
                    };
                };
            };
            readonly required: readonly ["group_profile", "id", "metadata", "practice", "provider"];
            readonly description: "";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ServiceRequestsPayerEnrollmentsCreatePayerEnrollmentServiceRequests: {
    readonly body: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
            };
            readonly required: readonly ["is_medallion_owned", "payer_name", "provider", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["group_profile", "is_medallion_owned", "payer_name", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly provider_name_changes: {
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                    readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                };
                readonly provider_name_change_details: {
                    readonly type: readonly ["string", "null"];
                    readonly minLength: 1;
                    readonly description: "Any additional details about the provider's name change.";
                };
            };
            readonly required: readonly ["is_medallion_owned", "payer_enrollment", "payer_name", "provider", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["group_profile", "is_medallion_owned", "payer_enrollment", "payer_name", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["is_medallion_owned", "payer_enrollment", "payer_name", "provider", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["group_profile", "is_medallion_owned", "payer_enrollment", "payer_name", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["facility", "is_medallion_owned", "payer_name", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["facility", "is_medallion_owned", "payer_enrollment", "payer_name", "state"];
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_name: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
            readonly required: readonly ["facility", "is_medallion_owned", "payer_enrollment", "payer_name", "state"];
        }];
        readonly discriminator: {
            readonly propertyName: "resourcetype";
            readonly mapping: {
                readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/NewProviderPayerEnrollmentServiceRequestRequest";
                readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/NewGroupPayerEnrollmentServiceRequestRequest";
                readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/ProviderDemographicUpdateServiceRequestRequest";
                readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/GroupDemographicUpdateServiceRequestRequest";
                readonly ProviderRevalidationServiceRequest: "#/components/schemas/ProviderRevalidationServiceRequestRequest";
                readonly GroupRevalidationServiceRequest: "#/components/schemas/GroupRevalidationServiceRequestRequest";
                readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/NewFacilityPayerEnrollmentServiceRequestRequest";
                readonly FacilityRevalidationServiceRequest: "#/components/schemas/FacilityRevalidationServiceRequestRequest";
                readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/FacilityDemographicUpdateServiceRequestRequest";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly response: {
        readonly "201": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly provider_name_changes: {
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                    };
                    readonly provider_name_change_details: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "Any additional details about the provider's name change.";
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "provider", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }];
            readonly discriminator: {
                readonly propertyName: "resourcetype";
                readonly mapping: {
                    readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/NewProviderPayerEnrollmentServiceRequest";
                    readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/NewGroupPayerEnrollmentServiceRequest";
                    readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/ProviderDemographicUpdateServiceRequest";
                    readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/GroupDemographicUpdateServiceRequest";
                    readonly ProviderRevalidationServiceRequest: "#/components/schemas/ProviderRevalidationServiceRequest";
                    readonly GroupRevalidationServiceRequest: "#/components/schemas/GroupRevalidationServiceRequest";
                    readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/NewFacilityPayerEnrollmentServiceRequest";
                    readonly FacilityRevalidationServiceRequest: "#/components/schemas/FacilityRevalidationServiceRequest";
                    readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/FacilityDemographicUpdateServiceRequest";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ServiceRequestsPayerEnrollmentsListPayerEnrollmentServiceRequests: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly created_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly created_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly facility: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly group_profile: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly limit: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Number of results to return per page.";
                };
                readonly lines_of_business: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly offset: {
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The initial index from which to return the results.";
                };
                readonly ordering: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Which field to use when ordering the results.";
                };
                readonly payer_entity: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly practice: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly provider: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A search term.";
                };
                readonly status_update_time_after: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last status update date in the format YYYY-MM-DD (inclusive)";
                };
                readonly status_update_time_before: {
                    readonly type: "string";
                    readonly format: "date";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filter by the last status update date in the format YYYY-MM-DD (inclusive)";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly type: "object";
            readonly properties: {
                readonly count: {
                    readonly type: "integer";
                    readonly examples: readonly [123];
                };
                readonly next: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=400&limit=100"];
                };
                readonly previous: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uri";
                    readonly examples: readonly ["http://api.example.org/accounts/?offset=200&limit=100"];
                };
                readonly results: {
                    readonly type: "array";
                    readonly items: {
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                                readonly par_group: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "provider", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly group_profile: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly par_group: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly provider_name_changes: {
                                    readonly type: readonly ["object", "null"];
                                    readonly additionalProperties: true;
                                    readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                                };
                                readonly provider_name_change_details: {
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "Any additional details about the provider's name change.";
                                };
                                readonly added_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are removed via this request";
                                    readonly readOnly: true;
                                };
                                readonly added_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are removed via this request";
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "provider", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly group_profile: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly added_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are removed via this request";
                                    readonly readOnly: true;
                                };
                                readonly added_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are removed via this request";
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly provider: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly par_group: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "provider", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly group_profile: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly facility: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly facility: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
                        }, {
                            readonly type: "object";
                            readonly description: "";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                    readonly readOnly: true;
                                };
                                readonly payer_name: {
                                    readonly type: "string";
                                };
                                readonly payer_entity: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly state: {
                                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                                    readonly type: "string";
                                    readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                                };
                                readonly is_medallion_owned: {
                                    readonly type: "boolean";
                                };
                                readonly status: {
                                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                                    readonly type: "string";
                                    readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                                };
                                readonly status_reason: {
                                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                                };
                                readonly status_category: {
                                    readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                                };
                                readonly par_status: {
                                    readonly enum: readonly ["non-par", "par", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`non-par` `par`";
                                };
                                readonly status_update_time: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly dependency_status: {
                                    readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                                    readonly type: readonly ["string", "null"];
                                    readonly readOnly: true;
                                    readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                                };
                                readonly app_submission_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly intake_complete_date: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "date";
                                    readonly readOnly: true;
                                };
                                readonly tracking_number: {
                                    readonly type: "string";
                                    readonly maxLength: 64;
                                };
                                readonly payer_id: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly payer_enrollment: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly created: {
                                    readonly type: "string";
                                    readonly format: "date-time";
                                    readonly readOnly: true;
                                };
                                readonly facility: {
                                    readonly type: readonly ["string", "null"];
                                    readonly format: "uuid";
                                };
                                readonly lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                };
                                readonly practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                };
                                readonly added_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_practices: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly country: {
                                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                                readonly type: readonly ["string", "null"];
                                                readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly county: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_1: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 1";
                                                readonly maxLength: 255;
                                            };
                                            readonly line_2: {
                                                readonly type: "string";
                                                readonly title: "Street Address Line 2";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly maxLength: 255;
                                            };
                                            readonly postal_code_plus_4: {
                                                readonly type: readonly ["string", "null"];
                                                readonly maxLength: 255;
                                            };
                                            readonly address_state: {
                                                readonly type: readonly ["string", "null"];
                                                readonly title: "State";
                                                readonly maxLength: 255;
                                            };
                                        };
                                        readonly required: readonly ["id"];
                                        readonly description: "";
                                    };
                                    readonly description: "Practices that are removed via this request";
                                    readonly readOnly: true;
                                };
                                readonly added_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are added via this request";
                                    readonly readOnly: true;
                                };
                                readonly removed_lines_of_business: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly id: {
                                                readonly type: "string";
                                                readonly format: "uuid";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                                readonly readOnly: true;
                                                readonly title: "Line of Business Label";
                                                readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                            };
                                        };
                                        readonly required: readonly ["id", "label"];
                                        readonly description: "";
                                    };
                                    readonly description: "Lines of Business that are removed via this request";
                                    readonly readOnly: true;
                                };
                            };
                            readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "resourcetype";
                            readonly mapping: {
                                readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/NewProviderPayerEnrollmentServiceRequest";
                                readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/NewGroupPayerEnrollmentServiceRequest";
                                readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/ProviderDemographicUpdateServiceRequest";
                                readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/GroupDemographicUpdateServiceRequest";
                                readonly ProviderRevalidationServiceRequest: "#/components/schemas/ProviderRevalidationServiceRequest";
                                readonly GroupRevalidationServiceRequest: "#/components/schemas/GroupRevalidationServiceRequest";
                                readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/NewFacilityPayerEnrollmentServiceRequest";
                                readonly FacilityRevalidationServiceRequest: "#/components/schemas/FacilityRevalidationServiceRequest";
                                readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/FacilityDemographicUpdateServiceRequest";
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ServiceRequestsPayerEnrollmentsPartialUpdatePayerEnrollmentServiceRequests: {
    readonly body: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly provider_name_changes: {
                    readonly type: readonly ["object", "null"];
                    readonly additionalProperties: true;
                    readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                };
                readonly provider_name_change_details: {
                    readonly type: readonly ["string", "null"];
                    readonly minLength: 1;
                    readonly description: "Any additional details about the provider's name change.";
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly provider: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly par_group: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly group_profile: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly lines_of_business: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
            };
        }, {
            readonly type: "object";
            readonly description: "";
            readonly properties: {
                readonly payer_entity: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly state: {
                    readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                    readonly type: "string";
                };
                readonly is_medallion_owned: {
                    readonly type: "boolean";
                };
                readonly status: {
                    readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                    readonly type: "string";
                };
                readonly status_reason: {
                    readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly par_status: {
                    readonly enum: readonly ["non-par", "par", "", any];
                    readonly type: readonly ["string", "null"];
                };
                readonly tracking_number: {
                    readonly type: "string";
                    readonly maxLength: 64;
                };
                readonly payer_id: {
                    readonly type: readonly ["string", "null"];
                    readonly maxLength: 255;
                };
                readonly payer_enrollment: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
                readonly practices: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly format: "uuid";
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly country: {
                                readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                readonly type: readonly ["string", "null"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly county: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly line_1: {
                                readonly type: "string";
                                readonly title: "Street Address Line 1";
                                readonly maxLength: 255;
                            };
                            readonly line_2: {
                                readonly type: "string";
                                readonly title: "Street Address Line 2";
                                readonly maxLength: 255;
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly maxLength: 255;
                            };
                            readonly postal_code_plus_4: {
                                readonly type: readonly ["string", "null"];
                                readonly maxLength: 255;
                            };
                            readonly address_state: {
                                readonly type: readonly ["string", "null"];
                                readonly title: "State";
                                readonly maxLength: 255;
                            };
                        };
                        readonly required: readonly ["id"];
                        readonly description: "";
                    };
                };
                readonly facility: {
                    readonly type: readonly ["string", "null"];
                    readonly format: "uuid";
                };
            };
        }];
        readonly discriminator: {
            readonly propertyName: "resourcetype";
            readonly mapping: {
                readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/PatchedNewProviderPayerEnrollmentSRDetailRequest";
                readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/PatchedNewGroupPayerEnrollmentSRDetailRequest";
                readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/PatchedProviderDemographicUpdateSRDetailRequest";
                readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/PatchedGroupDemographicUpdateSRDetailRequest";
                readonly ProviderRevalidationServiceRequest: "#/components/schemas/PatchedProviderRevalidationSRDetailRequest";
                readonly GroupRevalidationServiceRequest: "#/components/schemas/PatchedGroupRevalidationSRDetailRequest";
                readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/PatchedNewFacilityPayerEnrollmentSRDetailRequest";
                readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/PatchedFacilityDemographicUpdateSRDetailRequest";
                readonly FacilityRevalidationServiceRequest: "#/components/schemas/PatchedFacilityRevalidationSRDetailRequest";
            };
        };
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this service request.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly provider_name_changes: {
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                    };
                    readonly provider_name_change_details: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "Any additional details about the provider's name change.";
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "provider", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }];
            readonly discriminator: {
                readonly propertyName: "resourcetype";
                readonly mapping: {
                    readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/NewProviderPayerEnrollmentSRDetail";
                    readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/NewGroupPayerEnrollmentSRDetail";
                    readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/ProviderDemographicUpdateSRDetail";
                    readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/GroupDemographicUpdateSRDetail";
                    readonly ProviderRevalidationServiceRequest: "#/components/schemas/ProviderRevalidationSRDetail";
                    readonly GroupRevalidationServiceRequest: "#/components/schemas/GroupRevalidationSRDetail";
                    readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/NewFacilityPayerEnrollmentSRDetail";
                    readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/FacilityDemographicUpdateSRDetail";
                    readonly FacilityRevalidationServiceRequest: "#/components/schemas/FacilityRevalidationSRDetail";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PApiV1ServiceRequestsPayerEnrollmentsRetrievePayerEnrollmentServiceRequests: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly format: "uuid";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "A UUID string identifying this service request.";
                };
            };
            readonly required: readonly ["id"];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly provider_name_changes: {
                        readonly type: readonly ["object", "null"];
                        readonly additionalProperties: true;
                        readonly description: "Updates to the provider's name in a demographic update with 3 optional fields: `first_name`, `middle_name`, and `last_name`. The fields are optional, but if present, both `before` and `after` are required e.g. {\"first_name\": {\"before\": \"John\", \"after\": \"Johnny\"}}.";
                    };
                    readonly provider_name_change_details: {
                        readonly type: readonly ["string", "null"];
                        readonly description: "Any additional details about the provider's name change.";
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "provider", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "roster_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `roster_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_provider", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "provider_input_requested", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_provider` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `provider_input_requested` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "provider_has_been_terminated_from_group", "provider_is_a_supervisor", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "outside_of_time_and_distance_standards", "credentials_not_up_to_standards", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_pending_caqh", "intake_on_hold_client_hold", "intake_on_hold_provider_on_leave", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `provider_has_been_terminated_from_group` `provider_is_a_supervisor` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `outside_of_time_and_distance_standards` `credentials_not_up_to_standards` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_pending_caqh` `intake_on_hold_client_hold` `intake_on_hold_provider_on_leave` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par_not_linked_to_group", "par_linked_to_group", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par_not_linked_to_group` `par_linked_to_group`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly provider: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly par_group: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "provider", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_dependencies", "dependencies_met", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_dependencies` `dependencies_met` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly group_profile: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "group_profile", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "pending_dependencies", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `pending_dependencies` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_name", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "pending_contract", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `pending_contract` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                    };
                    readonly added_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly description: "Practices that are removed via this request";
                        readonly readOnly: true;
                    };
                    readonly added_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are added via this request";
                        readonly readOnly: true;
                    };
                    readonly removed_lines_of_business: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly description: "Lines of Business that are removed via this request";
                        readonly readOnly: true;
                    };
                };
                readonly required: readonly ["added_lines_of_business", "added_practices", "app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "payer_enrollment", "payer_name", "removed_lines_of_business", "removed_practices", "state", "status_category", "status_update_time"];
            }, {
                readonly type: "object";
                readonly description: "";
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly format: "uuid";
                        readonly readOnly: true;
                    };
                    readonly payer_name: {
                        readonly type: "string";
                        readonly readOnly: true;
                    };
                    readonly payer_entity: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly state: {
                        readonly enum: readonly ["AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "DC", "GU", "PR", "VI", "NA"];
                        readonly type: "string";
                        readonly description: "`AK` `AL` `AR` `AZ` `CA` `CO` `CT` `DE` `FL` `GA` `HI` `IA` `ID` `IL` `IN` `KS` `KY` `LA` `MA` `MD` `ME` `MI` `MN` `MO` `MS` `MT` `NC` `ND` `NE` `NH` `NJ` `NM` `NV` `NY` `OH` `OK` `OR` `PA` `RI` `SC` `SD` `TN` `TX` `UT` `VA` `VT` `WA` `WI` `WV` `WY` `DC` `GU` `PR` `VI` `NA`";
                    };
                    readonly is_medallion_owned: {
                        readonly type: "boolean";
                    };
                    readonly status: {
                        readonly enum: readonly ["requested", "intake_prep", "ready_for_intake", "intake", "intake_in_progress", "intake_pending_admin", "intake_over_21_days", "intake_on_hold", "intake_complete", "assigned", "sent_request_for_enrollment", "backlog", "on_hold", "external_block", "task_over_21_days", "application_qc_required", "application_qc_returned", "application_qc_completed", "pending_customer_response", "ready_for_medallion_review", "application_submitted", "follow_up_in_progress", "application_resubmitted", "active", "enrollment_denied", "enrollment_stopped", "panel_closed"];
                        readonly type: "string";
                        readonly description: "`requested` `intake_prep` `ready_for_intake` `intake` `intake_in_progress` `intake_pending_admin` `intake_over_21_days` `intake_on_hold` `intake_complete` `assigned` `sent_request_for_enrollment` `backlog` `on_hold` `external_block` `task_over_21_days` `application_qc_required` `application_qc_returned` `application_qc_completed` `pending_customer_response` `ready_for_medallion_review` `application_submitted` `follow_up_in_progress` `application_resubmitted` `active` `enrollment_denied` `enrollment_stopped` `panel_closed`";
                    };
                    readonly status_reason: {
                        readonly enum: readonly ["duplicate_request", "client_request", "client_is_not_pursuing_a_group_contract", "prerequisite_enrollment_stopped", "prerequisite_enrollment_denied", "prerequisite_panel_closed", "enrollment_stopped_other", "enrollment_denied_other", "application_not_received", "error_on_application", "application_timeout", "unspecified_requirements", "internal_review", "payer_requested_info", "corrections_needed", "client_tasks_completed", "portal_access_requested", "domain_access_requested", "intake_on_hold_client_hold", "intake_on_hold_other", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`duplicate_request` `client_request` `client_is_not_pursuing_a_group_contract` `prerequisite_enrollment_stopped` `prerequisite_enrollment_denied` `prerequisite_panel_closed` `enrollment_stopped_other` `enrollment_denied_other` `application_not_received` `error_on_application` `application_timeout` `unspecified_requirements` `internal_review` `payer_requested_info` `corrections_needed` `client_tasks_completed` `portal_access_requested` `domain_access_requested` `intake_on_hold_client_hold` `intake_on_hold_other`";
                    };
                    readonly status_category: {
                        readonly enum: readonly ["medallion_processing", "needs_client_attention", "on_hold", "payer_processing", "pending", "request_completed", "request_denied", "request_stopped", "requested"];
                        readonly type: "string";
                        readonly readOnly: true;
                        readonly description: "`medallion_processing` `needs_client_attention` `on_hold` `payer_processing` `pending` `request_completed` `request_denied` `request_stopped` `requested`";
                    };
                    readonly par_status: {
                        readonly enum: readonly ["non-par", "par", "", any];
                        readonly type: readonly ["string", "null"];
                        readonly description: "`non-par` `par`";
                    };
                    readonly status_update_time: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly dependency_status: {
                        readonly enum: readonly ["needs_attention", "met", "outstanding", "missing_info"];
                        readonly type: readonly ["string", "null"];
                        readonly readOnly: true;
                        readonly description: "`needs_attention` `met` `outstanding` `missing_info`";
                    };
                    readonly app_submission_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly intake_complete_date: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "date";
                        readonly readOnly: true;
                    };
                    readonly tracking_number: {
                        readonly type: "string";
                        readonly maxLength: 64;
                    };
                    readonly payer_id: {
                        readonly type: readonly ["string", "null"];
                        readonly maxLength: 255;
                    };
                    readonly payer_enrollment: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                    readonly created: {
                        readonly type: "string";
                        readonly format: "date-time";
                        readonly readOnly: true;
                    };
                    readonly lines_of_business: {
                        readonly type: readonly ["array", "null"];
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly label: {
                                    readonly type: "string";
                                    readonly readOnly: true;
                                    readonly title: "Line of Business Label";
                                    readonly description: "The full name of the Line of Business, as it should be seen in Medallion";
                                };
                            };
                            readonly required: readonly ["id", "label"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly practices: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly id: {
                                    readonly type: "string";
                                    readonly format: "uuid";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly country: {
                                    readonly enum: readonly ["US", "AF", "AX", "AL", "DZ", "AS", "AD", "AO", "AI", "AQ", "AG", "AR", "AM", "AW", "AU", "AT", "AZ", "BS", "BH", "BD", "BB", "BY", "BE", "BZ", "BJ", "BM", "BT", "BO", "BQ", "BA", "BW", "BV", "BR", "IO", "BN", "BG", "BF", "BI", "KH", "CM", "CA", "CV", "KY", "CF", "TD", "CL", "CN", "CX", "CC", "CO", "KM", "CG", "CD", "CK", "CR", "CI", "HR", "CU", "CW", "CY", "CZ", "DK", "DJ", "DM", "DO", "EC", "EG", "SV", "GQ", "ER", "EE", "ET", "FK", "FO", "FJ", "FI", "FR", "GF", "PF", "TF", "GA", "GM", "GE", "DE", "GH", "GI", "GR", "GL", "GD", "GP", "GU", "GT", "GG", "GN", "GW", "GY", "HT", "HM", "VA", "HN", "HK", "HU", "IS", "IN", "ID", "IR", "IQ", "IE", "IM", "IL", "IT", "JM", "JP", "JE", "JO", "KZ", "KE", "KI", "KP", "KR", "KW", "KG", "LA", "LV", "LB", "LS", "LR", "LY", "LI", "LT", "LU", "MO", "MK", "MG", "MW", "MY", "MV", "ML", "MT", "MH", "MQ", "MR", "MU", "YT", "MX", "FM", "MD", "MC", "MN", "ME", "MS", "MA", "MZ", "MM", "NA", "NR", "NP", "NL", "NC", "NZ", "NI", "NE", "NG", "NU", "NF", "MP", "NO", "other", "OM", "PK", "PW", "PS", "PA", "PG", "PY", "PE", "PH", "PN", "PL", "PT", "PR", "QA", "RE", "RO", "RU", "RW", "BL", "SH", "KN", "LC", "MF", "PM", "VC", "WS", "SM", "ST", "SA", "SN", "RS", "SC", "SL", "SG", "SX", "SK", "SI", "SB", "SO", "ZA", "GS", "SS", "ES", "LK", "SD", "SR", "SJ", "SZ", "SE", "CH", "SY", "TW", "TJ", "TZ", "TH", "TL", "TG", "TK", "TO", "TT", "TN", "TR", "TM", "TC", "TV", "UG", "UA", "AE", "GB", "UM", "UY", "UZ", "VU", "VE", "VN", "VG", "VI", "WF", "EH", "YE", "ZM", "ZW", "", any];
                                    readonly type: readonly ["string", "null"];
                                    readonly description: "`US` `AF` `AX` `AL` `DZ` `AS` `AD` `AO` `AI` `AQ` `AG` `AR` `AM` `AW` `AU` `AT` `AZ` `BS` `BH` `BD` `BB` `BY` `BE` `BZ` `BJ` `BM` `BT` `BO` `BQ` `BA` `BW` `BV` `BR` `IO` `BN` `BG` `BF` `BI` `KH` `CM` `CA` `CV` `KY` `CF` `TD` `CL` `CN` `CX` `CC` `CO` `KM` `CG` `CD` `CK` `CR` `CI` `HR` `CU` `CW` `CY` `CZ` `DK` `DJ` `DM` `DO` `EC` `EG` `SV` `GQ` `ER` `EE` `ET` `FK` `FO` `FJ` `FI` `FR` `GF` `PF` `TF` `GA` `GM` `GE` `DE` `GH` `GI` `GR` `GL` `GD` `GP` `GU` `GT` `GG` `GN` `GW` `GY` `HT` `HM` `VA` `HN` `HK` `HU` `IS` `IN` `ID` `IR` `IQ` `IE` `IM` `IL` `IT` `JM` `JP` `JE` `JO` `KZ` `KE` `KI` `KP` `KR` `KW` `KG` `LA` `LV` `LB` `LS` `LR` `LY` `LI` `LT` `LU` `MO` `MK` `MG` `MW` `MY` `MV` `ML` `MT` `MH` `MQ` `MR` `MU` `YT` `MX` `FM` `MD` `MC` `MN` `ME` `MS` `MA` `MZ` `MM` `NA` `NR` `NP` `NL` `NC` `NZ` `NI` `NE` `NG` `NU` `NF` `MP` `NO` `other` `OM` `PK` `PW` `PS` `PA` `PG` `PY` `PE` `PH` `PN` `PL` `PT` `PR` `QA` `RE` `RO` `RU` `RW` `BL` `SH` `KN` `LC` `MF` `PM` `VC` `WS` `SM` `ST` `SA` `SN` `RS` `SC` `SL` `SG` `SX` `SK` `SI` `SB` `SO` `ZA` `GS` `SS` `ES` `LK` `SD` `SR` `SJ` `SZ` `SE` `CH` `SY` `TW` `TJ` `TZ` `TH` `TL` `TG` `TK` `TO` `TT` `TN` `TR` `TM` `TC` `TV` `UG` `UA` `AE` `GB` `UM` `UY` `UZ` `VU` `VE` `VN` `VG` `VI` `WF` `EH` `YE` `ZM` `ZW`";
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly county: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly line_1: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 1";
                                    readonly maxLength: 255;
                                };
                                readonly line_2: {
                                    readonly type: "string";
                                    readonly title: "Street Address Line 2";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly maxLength: 255;
                                };
                                readonly postal_code_plus_4: {
                                    readonly type: readonly ["string", "null"];
                                    readonly maxLength: 255;
                                };
                                readonly address_state: {
                                    readonly type: readonly ["string", "null"];
                                    readonly title: "State";
                                    readonly maxLength: 255;
                                };
                            };
                            readonly required: readonly ["id"];
                            readonly description: "";
                        };
                        readonly readOnly: true;
                    };
                    readonly facility: {
                        readonly type: readonly ["string", "null"];
                        readonly format: "uuid";
                    };
                };
                readonly required: readonly ["app_submission_date", "created", "dependency_status", "facility", "id", "intake_complete_date", "is_medallion_owned", "lines_of_business", "payer_enrollment", "payer_name", "practices", "state", "status_category", "status_update_time"];
            }];
            readonly discriminator: {
                readonly propertyName: "resourcetype";
                readonly mapping: {
                    readonly NewProviderPayerEnrollmentServiceRequest: "#/components/schemas/NewProviderPayerEnrollmentSRDetail";
                    readonly NewGroupPayerEnrollmentServiceRequest: "#/components/schemas/NewGroupPayerEnrollmentSRDetail";
                    readonly ProviderDemographicUpdateServiceRequest: "#/components/schemas/ProviderDemographicUpdateSRDetail";
                    readonly GroupDemographicUpdateServiceRequest: "#/components/schemas/GroupDemographicUpdateSRDetail";
                    readonly ProviderRevalidationServiceRequest: "#/components/schemas/ProviderRevalidationSRDetail";
                    readonly GroupRevalidationServiceRequest: "#/components/schemas/GroupRevalidationSRDetail";
                    readonly NewFacilityPayerEnrollmentServiceRequest: "#/components/schemas/NewFacilityPayerEnrollmentSRDetail";
                    readonly FacilityDemographicUpdateServiceRequest: "#/components/schemas/FacilityDemographicUpdateSRDetail";
                    readonly FacilityRevalidationServiceRequest: "#/components/schemas/FacilityRevalidationSRDetail";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
export { ApiV1OrgAdditionalNamesListAdditionalNames, ApiV1OrgBoardCertificatesCreateBoardCertificates, ApiV1OrgBoardCertificatesDestroyBoardCertificates, ApiV1OrgBoardCertificatesListBoardCertificates, ApiV1OrgBoardCertificatesPartialUpdateBoardCertificates, ApiV1OrgBoardCertificatesRetrieveBoardCertificates, ApiV1OrgCmeCreditsCreateCmeCredits, ApiV1OrgCmeCreditsDestroyCmeCredits, ApiV1OrgCmeCreditsListCmeCredits, ApiV1OrgCmeCreditsPartialUpdateCmeCredits, ApiV1OrgCmeCreditsRetrieveCmeCredits, ApiV1OrgLicensesBulkHistoryListLicenses, ApiV1OrgLicensesCreateLicenses, ApiV1OrgLicensesDestroyLicenses, ApiV1OrgLicensesDetailPartialUpdate, ApiV1OrgLicensesHistoryListLicenses, ApiV1OrgLicensesListLicenses, ApiV1OrgLicensesPartialUpdateLicenses, ApiV1OrgLicensesRetrieveLicenses, ApiV1OrgMedicalProgramsListMedicalPrograms, ApiV1OrgPracticesCreatePractices, ApiV1OrgPracticesListPractices, ApiV1OrgPracticesPartialUpdatePractices, ApiV1OrgPracticesRetrievePractices, ApiV1OrgProviderPracticeAssociationsCreatePractices, ApiV1OrgProviderPracticeAssociationsDestroyPractices, ApiV1OrgProviderPracticeAssociationsListPractices, ApiV1OrgProviderPracticeAssociationsPartialUpdatePractices, ApiV1OrgProviderPracticeAssociationsRetrievePractices, ApiV1OrgProvidersAdditionalNamesCreateAdditionalNames, ApiV1OrgProvidersAdditionalNamesDestroyAdditionalNames, ApiV1OrgProvidersAdditionalNamesListAdditionalNames, ApiV1OrgProvidersAdditionalNamesPartialUpdateAdditionalNames, ApiV1OrgProvidersAdditionalNamesRetrieveAdditionalNames, ApiV1OrgProvidersAddressesCreateAddresses, ApiV1OrgProvidersAddressesDestroyAddresses, ApiV1OrgProvidersAddressesListAddresses, ApiV1OrgProvidersAddressesPartialUpdateAddresses, ApiV1OrgProvidersAddressesRetrieveAddresses, ApiV1OrgProvidersCollaborativeAgreementsCreateCollaborativeAgreements, ApiV1OrgProvidersCollaborativeAgreementsDestroyCollaborativeAgreements, ApiV1OrgProvidersCollaborativeAgreementsListCollaborativeAgreements, ApiV1OrgProvidersCollaborativeAgreementsPartialUpdateCollaborativeAgreements, ApiV1OrgProvidersCollaborativeAgreementsRetrieveCollaborativeAgreements, ApiV1OrgProvidersDocumentsCreateProviderDocuments, ApiV1OrgProvidersDocumentsDestroyProviderDocuments, ApiV1OrgProvidersDocumentsListProviderDocuments, ApiV1OrgProvidersDocumentsPartialUpdateProviderDocuments, ApiV1OrgProvidersDocumentsRetrieveProviderDocuments, ApiV1OrgProvidersEducationsCreateEducations, ApiV1OrgProvidersEducationsDestroyEducations, ApiV1OrgProvidersEducationsListEducations, ApiV1OrgProvidersEducationsPartialUpdateEducations, ApiV1OrgProvidersEducationsRetrieveEducations, ApiV1OrgProvidersExamsCreateExams, ApiV1OrgProvidersExamsDestroyExams, ApiV1OrgProvidersExamsListExams, ApiV1OrgProvidersExamsPartialUpdateExams, ApiV1OrgProvidersExamsRetrieveExams, ApiV1OrgProvidersGapRecordsCreateGapRecords, ApiV1OrgProvidersGapRecordsDestroyGapRecords, ApiV1OrgProvidersGapRecordsListGapRecords, ApiV1OrgProvidersGapRecordsPartialUpdateGapRecords, ApiV1OrgProvidersGapRecordsRetrieveGapRecords, ApiV1OrgProvidersListProviders, ApiV1OrgProvidersMalpracticeInsurancesCreateMalpracticeInsurances, ApiV1OrgProvidersMalpracticeInsurancesDestroyMalpracticeInsurances, ApiV1OrgProvidersMalpracticeInsurancesListMalpracticeInsurances, ApiV1OrgProvidersMalpracticeInsurancesPartialUpdateMalpracticeInsurances, ApiV1OrgProvidersMalpracticeInsurancesRetrieveMalpracticeInsurances, ApiV1OrgProvidersMedicalProgramsCreateMedicalPrograms, ApiV1OrgProvidersMedicalProgramsDestroyMedicalPrograms, ApiV1OrgProvidersMedicalProgramsListMedicalPrograms, ApiV1OrgProvidersMedicalProgramsPartialUpdateMedicalPrograms, ApiV1OrgProvidersMedicalProgramsRetrieveMedicalPrograms, ApiV1OrgProvidersMilitaryHistoryRecordsCreateMilitaryHistoryRecords, ApiV1OrgProvidersMilitaryHistoryRecordsDestroyMilitaryHistoryRecords, ApiV1OrgProvidersMilitaryHistoryRecordsListMilitaryHistoryRecords, ApiV1OrgProvidersMilitaryHistoryRecordsPartialUpdateMilitaryHistoryRecords, ApiV1OrgProvidersMilitaryHistoryRecordsRetrieveMilitaryHistoryRecords, ApiV1OrgProvidersPartialUpdateProviders, ApiV1OrgProvidersRetrieveProviders, ApiV1OrgProvidersStatusRetrieveProviderStatus, ApiV1OrgProvidersSupervisorsCreateSupervisors, ApiV1OrgProvidersSupervisorsDestroySupervisors, ApiV1OrgProvidersSupervisorsListSupervisors, ApiV1OrgProvidersSupervisorsPartialUpdateSupervisors, ApiV1OrgProvidersSupervisorsRetrieveSupervisors, ApiV1OrgProvidersTrainingsCreateTrainings, ApiV1OrgProvidersTrainingsDestroyTrainings, ApiV1OrgProvidersTrainingsListTrainings, ApiV1OrgProvidersTrainingsPartialUpdateTrainings, ApiV1OrgProvidersTrainingsRetrieveTrainings, ApiV1OrgProvidersWorkExperienceCreateWorkExperience, ApiV1OrgProvidersWorkExperienceDestroyWorkExperience, ApiV1OrgProvidersWorkExperienceListWorkExperience, ApiV1OrgProvidersWorkExperiencePartialUpdateWorkExperience, ApiV1OrgProvidersWorkExperienceRetrieveWorkExperience, ApiV1StaffServiceRequestsDestroyServiceRequests, ApiV1StaffServiceRequestsDetailDelete, ApiV1StaffServiceRequestsListServiceRequests, ApiV1StaffServiceRequestsRetrieveServiceRequests, PApiV1CaqhDataRequestCreateCaqhDataRequest, PApiV1DocumentsRetrieveDocuments, PApiV1EmployeesActivationCreateEmployees, PApiV1EmployeesBulkOnboardingCreateEmployees, PApiV1EmployeesDeactivationCreateEmployees, PApiV1EmployeesListEmployees, PApiV1EmployeesOngoingMonitoringAlertSuppressionCreateEmployees, PApiV1EmployeesOngoingMonitoringAlertUnsuppressionCreateEmployees, PApiV1EmployeesPartialUpdateEmployees, PApiV1FacilitiesCreateFacilities, PApiV1FacilitiesDestroyFacilities, PApiV1FacilitiesListFacilities, PApiV1FacilitiesPartialUpdateFacilities, PApiV1FacilitiesRetrieveFacilities, PApiV1GroupProfilesCreateGroupProfiles, PApiV1GroupProfilesDestroyGroupProfiles, PApiV1GroupProfilesDocumentsCreateGroupProfileDocuments, PApiV1GroupProfilesDocumentsDestroyGroupProfileDocuments, PApiV1GroupProfilesDocumentsListGroupProfileDocuments, PApiV1GroupProfilesDocumentsPartialUpdateGroupProfileDocuments, PApiV1GroupProfilesDocumentsRetrieveGroupProfileDocuments, PApiV1GroupProfilesListGroupProfiles, PApiV1GroupProfilesPartialUpdateGroupProfiles, PApiV1GroupProfilesRetrieveGroupProfiles, PApiV1HospitalAffiliationsListHospitalAffiliations, PApiV1HospitalAffiliationsRetrieveHospitalAffiliations, PApiV1LinesOfBusinessListLinesOfBusiness, PApiV1OrganizationsCredentialingFilesListCredentialing, PApiV1OrganizationsCredentialingFilesRetrieveCredentialing, PApiV1OrganizationsCredentialingServiceRequestsCreateCredentialing, PApiV1OrganizationsCredentialingServiceRequestsListCredentialing, PApiV1OrganizationsInvitesCreateInvites, PApiV1OrganizationsInvitesListInvites, PApiV1OrganizationsInvitesResendCreateInvites, PApiV1OrganizationsInvitesRevokeCreateInvites, PApiV1OrganizationsMembersChangeEmailCreateMembers, PApiV1OrganizationsMembersCreateMembers, PApiV1OrganizationsMembersListMembers, PApiV1OrganizationsMembersPartialUpdateMembers, PApiV1OrganizationsMembersRetrieveMembers, PApiV1OrganizationsMembershipsCreateMembers, PApiV1OrganizationsNewLicenseRequestCreateOrganizations, PApiV1OrganizationsPrimarySourceVerificationsListOrganizations, PApiV1PayerEnrollmentsCreatePayerEnrollments, PApiV1PayerEnrollmentsListPayerEnrollments, PApiV1PayerEnrollmentsPartialUpdatePayerEnrollments, PApiV1PayerEnrollmentsRetrievePayerEnrollments, PApiV1PracticeGroupAssociationsCreatePracticeGroups, PApiV1PracticeGroupAssociationsDestroyPracticeGroups, PApiV1PracticeGroupAssociationsListPracticeGroups, PApiV1PracticeGroupAssociationsRetrievePracticeGroups, PApiV1ProviderPracticeGroupAssociationsCreateProviderPracticeGroupAssociations, PApiV1ProviderPracticeGroupAssociationsDestroyProviderPracticeGroupAssociations, PApiV1ProviderPracticeGroupAssociationsListProviderPracticeGroupAssociations, PApiV1ProviderPracticeGroupAssociationsRetrieveProviderPracticeGroupAssociations, PApiV1ServiceRequestsPayerEnrollmentsCreatePayerEnrollmentServiceRequests, PApiV1ServiceRequestsPayerEnrollmentsListPayerEnrollmentServiceRequests, PApiV1ServiceRequestsPayerEnrollmentsPartialUpdatePayerEnrollmentServiceRequests, PApiV1ServiceRequestsPayerEnrollmentsRetrievePayerEnrollmentServiceRequests };
